/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { connectSessionsAuthenticateConnectSession } from "../funcs/connectSessionsAuthenticateConnectSession.js";
import { connectSessionsCreateConnectSession } from "../funcs/connectSessionsCreateConnectSession.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class ConnectSessions extends ClientSDK {
  /**
   * Authenticate Connect Session
   */
  async authenticateConnectSession(
    request: shared.ConnectSessionAuthenticate,
    options?: RequestOptions,
  ): Promise<operations.StackoneAuthenticateConnectSessionResponse> {
    return unwrapAsync(connectSessionsAuthenticateConnectSession(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Connect Session
   */
  async createConnectSession(
    request: shared.ConnectSessionCreate,
    options?: RequestOptions,
  ): Promise<operations.StackoneCreateConnectSessionResponse> {
    return unwrapAsync(connectSessionsCreateConnectSession(
      this,
      request,
      options,
    ));
  }
}
