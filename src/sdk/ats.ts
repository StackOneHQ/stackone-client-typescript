/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { atsCreateApplication } from "../funcs/atsCreateApplication.js";
import { atsCreateApplicationNote } from "../funcs/atsCreateApplicationNote.js";
import { atsCreateBackgroundCheckPackage } from "../funcs/atsCreateBackgroundCheckPackage.js";
import { atsCreateCandidate } from "../funcs/atsCreateCandidate.js";
import { atsCreateCandidateNote } from "../funcs/atsCreateCandidateNote.js";
import { atsCreateJob } from "../funcs/atsCreateJob.js";
import { atsCreateOffer } from "../funcs/atsCreateOffer.js";
import { atsDeleteBackgroundCheckPackage } from "../funcs/atsDeleteBackgroundCheckPackage.js";
import {
  atsDownloadApplicationDocument,
  DownloadApplicationDocumentAcceptEnum,
} from "../funcs/atsDownloadApplicationDocument.js";
import { atsGetApplication } from "../funcs/atsGetApplication.js";
import { atsGetApplicationCustomFieldDefinition } from "../funcs/atsGetApplicationCustomFieldDefinition.js";
import { atsGetApplicationDocument } from "../funcs/atsGetApplicationDocument.js";
import { atsGetApplicationDocumentCategory } from "../funcs/atsGetApplicationDocumentCategory.js";
import { atsGetApplicationNote } from "../funcs/atsGetApplicationNote.js";
import { atsGetApplicationOffer } from "../funcs/atsGetApplicationOffer.js";
import { atsGetApplicationScheduledInterview } from "../funcs/atsGetApplicationScheduledInterview.js";
import { atsGetApplicationScorecard } from "../funcs/atsGetApplicationScorecard.js";
import { atsGetApplicationStage } from "../funcs/atsGetApplicationStage.js";
import { atsGetAssessmentsPackage } from "../funcs/atsGetAssessmentsPackage.js";
import { atsGetBackgroundCheckPackage } from "../funcs/atsGetBackgroundCheckPackage.js";
import { atsGetCandidate } from "../funcs/atsGetCandidate.js";
import { atsGetCandidateCustomFieldDefinition } from "../funcs/atsGetCandidateCustomFieldDefinition.js";
import { atsGetCandidateNote } from "../funcs/atsGetCandidateNote.js";
import { atsGetDepartment } from "../funcs/atsGetDepartment.js";
import { atsGetInterview } from "../funcs/atsGetInterview.js";
import { atsGetInterviewStage } from "../funcs/atsGetInterviewStage.js";
import { atsGetJob } from "../funcs/atsGetJob.js";
import { atsGetJobApplicationStage } from "../funcs/atsGetJobApplicationStage.js";
import { atsGetJobCustomFieldDefinition } from "../funcs/atsGetJobCustomFieldDefinition.js";
import { atsGetJobPosting } from "../funcs/atsGetJobPosting.js";
import { atsGetList } from "../funcs/atsGetList.js";
import { atsGetLocation } from "../funcs/atsGetLocation.js";
import { atsGetOffer } from "../funcs/atsGetOffer.js";
import { atsGetRejectedReason } from "../funcs/atsGetRejectedReason.js";
import { atsGetUser } from "../funcs/atsGetUser.js";
import { atsListApplicationChanges } from "../funcs/atsListApplicationChanges.js";
import { atsListApplicationCustomFieldDefinitions } from "../funcs/atsListApplicationCustomFieldDefinitions.js";
import { atsListApplicationDocumentCategories } from "../funcs/atsListApplicationDocumentCategories.js";
import { atsListApplicationDocuments } from "../funcs/atsListApplicationDocuments.js";
import { atsListApplicationNotes } from "../funcs/atsListApplicationNotes.js";
import { atsListApplications } from "../funcs/atsListApplications.js";
import { atsListApplicationScorecards } from "../funcs/atsListApplicationScorecards.js";
import { atsListApplicationsOffers } from "../funcs/atsListApplicationsOffers.js";
import { atsListApplicationsScheduledInterviews } from "../funcs/atsListApplicationsScheduledInterviews.js";
import { atsListApplicationStages } from "../funcs/atsListApplicationStages.js";
import { atsListAssessmentsPackages } from "../funcs/atsListAssessmentsPackages.js";
import { atsListBackgroundCheckPackages } from "../funcs/atsListBackgroundCheckPackages.js";
import { atsListCandidateCustomFieldDefinitions } from "../funcs/atsListCandidateCustomFieldDefinitions.js";
import { atsListCandidateNotes } from "../funcs/atsListCandidateNotes.js";
import { atsListCandidates } from "../funcs/atsListCandidates.js";
import { atsListDepartments } from "../funcs/atsListDepartments.js";
import { atsListInterviews } from "../funcs/atsListInterviews.js";
import { atsListInterviewStages } from "../funcs/atsListInterviewStages.js";
import { atsListJobApplicationStages } from "../funcs/atsListJobApplicationStages.js";
import { atsListJobCustomFieldDefinitions } from "../funcs/atsListJobCustomFieldDefinitions.js";
import { atsListJobPostings } from "../funcs/atsListJobPostings.js";
import { atsListJobs } from "../funcs/atsListJobs.js";
import { atsListLists } from "../funcs/atsListLists.js";
import { atsListLocations } from "../funcs/atsListLocations.js";
import { atsListOffers } from "../funcs/atsListOffers.js";
import { atsListRejectedReasons } from "../funcs/atsListRejectedReasons.js";
import { atsListUsers } from "../funcs/atsListUsers.js";
import { atsMoveApplication } from "../funcs/atsMoveApplication.js";
import { atsOrderAssessmentsRequest } from "../funcs/atsOrderAssessmentsRequest.js";
import { atsOrderBackgroundCheckRequest } from "../funcs/atsOrderBackgroundCheckRequest.js";
import { atsRejectApplication } from "../funcs/atsRejectApplication.js";
import { atsUpdateApplication } from "../funcs/atsUpdateApplication.js";
import { atsUpdateApplicationNote } from "../funcs/atsUpdateApplicationNote.js";
import { atsUpdateAssessmentsResult } from "../funcs/atsUpdateAssessmentsResult.js";
import { atsUpdateBackgroundCheckPackage } from "../funcs/atsUpdateBackgroundCheckPackage.js";
import { atsUpdateBackgroundCheckResult } from "../funcs/atsUpdateBackgroundCheckResult.js";
import { atsUpdateCandidate } from "../funcs/atsUpdateCandidate.js";
import { atsUpdateJob } from "../funcs/atsUpdateJob.js";
import { atsUploadApplicationDocument } from "../funcs/atsUploadApplicationDocument.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import { PageIterator, unwrapResultIterator } from "../sdk/types/operations.js";
import * as operations from "./models/operations/index.js";
import { unwrapAsync } from "./types/fp.js";

export { DownloadApplicationDocumentAcceptEnum } from "../funcs/atsDownloadApplicationDocument.js";

export class Ats extends ClientSDK {
  /**
   * Create Application
   */
  async createApplication(
    request: operations.AtsCreateApplicationRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsCreateApplicationResponse> {
    return unwrapAsync(atsCreateApplication(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Application Note
   */
  async createApplicationNote(
    request: operations.AtsCreateApplicationNoteRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsCreateApplicationNoteResponse> {
    return unwrapAsync(atsCreateApplicationNote(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Background Check Package
   */
  async createBackgroundCheckPackage(
    request: operations.AtsCreateBackgroundCheckPackageRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsCreateBackgroundCheckPackageResponse> {
    return unwrapAsync(atsCreateBackgroundCheckPackage(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Candidate
   */
  async createCandidate(
    request: operations.AtsCreateCandidateRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsCreateCandidateResponse> {
    return unwrapAsync(atsCreateCandidate(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Candidate Note
   */
  async createCandidateNote(
    request: operations.AtsCreateCandidateNoteRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsCreateCandidateNoteResponse> {
    return unwrapAsync(atsCreateCandidateNote(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Job
   */
  async createJob(
    request: operations.AtsCreateJobRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsCreateJobResponse> {
    return unwrapAsync(atsCreateJob(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Offer
   */
  async createOffer(
    request: operations.AtsCreateOfferRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsCreateOfferResponse> {
    return unwrapAsync(atsCreateOffer(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete Background Check Package
   */
  async deleteBackgroundCheckPackage(
    request: operations.AtsDeleteBackgroundCheckPackageRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsDeleteBackgroundCheckPackageResponse> {
    return unwrapAsync(atsDeleteBackgroundCheckPackage(
      this,
      request,
      options,
    ));
  }

  /**
   * Download Application Document
   */
  async downloadApplicationDocument(
    request: operations.AtsDownloadApplicationDocumentRequest,
    options?: RequestOptions & {
      acceptHeaderOverride?: DownloadApplicationDocumentAcceptEnum;
    },
  ): Promise<operations.AtsDownloadApplicationDocumentResponse> {
    return unwrapAsync(atsDownloadApplicationDocument(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Application
   */
  async getApplication(
    request: operations.AtsGetApplicationRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsGetApplicationResponse> {
    return unwrapAsync(atsGetApplication(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Application Custom Field Definition
   */
  async getApplicationCustomFieldDefinition(
    request: operations.AtsGetApplicationCustomFieldDefinitionRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsGetApplicationCustomFieldDefinitionResponse> {
    return unwrapAsync(atsGetApplicationCustomFieldDefinition(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Application Document
   */
  async getApplicationDocument(
    request: operations.AtsGetApplicationDocumentRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsGetApplicationDocumentResponse> {
    return unwrapAsync(atsGetApplicationDocument(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Application Document Category
   */
  async getApplicationDocumentCategory(
    request: operations.AtsGetApplicationDocumentCategoryRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsGetApplicationDocumentCategoryResponse> {
    return unwrapAsync(atsGetApplicationDocumentCategory(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Application Note
   */
  async getApplicationNote(
    request: operations.AtsGetApplicationNoteRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsGetApplicationNoteResponse> {
    return unwrapAsync(atsGetApplicationNote(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Application Offer
   */
  async getApplicationOffer(
    request: operations.AtsGetApplicationOfferRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsGetApplicationOfferResponse> {
    return unwrapAsync(atsGetApplicationOffer(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Applications scheduled interview
   */
  async getApplicationScheduledInterview(
    request: operations.AtsGetApplicationScheduledInterviewRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsGetApplicationScheduledInterviewResponse> {
    return unwrapAsync(atsGetApplicationScheduledInterview(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Application Scorecard
   */
  async getApplicationScorecard(
    request: operations.AtsGetApplicationScorecardRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsGetApplicationScorecardResponse> {
    return unwrapAsync(atsGetApplicationScorecard(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Application Stage
   */
  async getApplicationStage(
    request: operations.AtsGetApplicationStageRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsGetApplicationStageResponse> {
    return unwrapAsync(atsGetApplicationStage(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Assessments Package
   */
  async getAssessmentsPackage(
    request: operations.AtsGetAssessmentsPackageRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsGetAssessmentsPackageResponse> {
    return unwrapAsync(atsGetAssessmentsPackage(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Background Check Package
   */
  async getBackgroundCheckPackage(
    request: operations.AtsGetBackgroundCheckPackageRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsGetBackgroundCheckPackageResponse> {
    return unwrapAsync(atsGetBackgroundCheckPackage(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Candidate
   */
  async getCandidate(
    request: operations.AtsGetCandidateRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsGetCandidateResponse> {
    return unwrapAsync(atsGetCandidate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Candidate Custom Field Definition
   */
  async getCandidateCustomFieldDefinition(
    request: operations.AtsGetCandidateCustomFieldDefinitionRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsGetCandidateCustomFieldDefinitionResponse> {
    return unwrapAsync(atsGetCandidateCustomFieldDefinition(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Candidate Note
   */
  async getCandidateNote(
    request: operations.AtsGetCandidateNoteRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsGetCandidateNoteResponse> {
    return unwrapAsync(atsGetCandidateNote(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Department
   */
  async getDepartment(
    request: operations.AtsGetDepartmentRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsGetDepartmentResponse> {
    return unwrapAsync(atsGetDepartment(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Interview
   */
  async getInterview(
    request: operations.AtsGetInterviewRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsGetInterviewResponse> {
    return unwrapAsync(atsGetInterview(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Interview Stage
   *
   * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  async getInterviewStage(
    request: operations.AtsGetInterviewStageRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsGetInterviewStageResponse> {
    return unwrapAsync(atsGetInterviewStage(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Job
   */
  async getJob(
    request: operations.AtsGetJobRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsGetJobResponse> {
    return unwrapAsync(atsGetJob(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Job Application Stage
   */
  async getJobApplicationStage(
    request: operations.AtsGetJobApplicationStageRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsGetJobApplicationStageResponse> {
    return unwrapAsync(atsGetJobApplicationStage(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Job Custom Field Definition
   */
  async getJobCustomFieldDefinition(
    request: operations.AtsGetJobCustomFieldDefinitionRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsGetJobCustomFieldDefinitionResponse> {
    return unwrapAsync(atsGetJobCustomFieldDefinition(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Job Posting
   */
  async getJobPosting(
    request: operations.AtsGetJobPostingRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsGetJobPostingResponse> {
    return unwrapAsync(atsGetJobPosting(
      this,
      request,
      options,
    ));
  }

  /**
   * Get List
   */
  async getList(
    request: operations.AtsGetListRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsGetListResponse> {
    return unwrapAsync(atsGetList(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Location
   */
  async getLocation(
    request: operations.AtsGetLocationRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsGetLocationResponse> {
    return unwrapAsync(atsGetLocation(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Offer
   */
  async getOffer(
    request: operations.AtsGetOfferRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsGetOfferResponse> {
    return unwrapAsync(atsGetOffer(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Rejected Reason
   */
  async getRejectedReason(
    request: operations.AtsGetRejectedReasonRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsGetRejectedReasonResponse> {
    return unwrapAsync(atsGetRejectedReason(
      this,
      request,
      options,
    ));
  }

  /**
   * Get User
   */
  async getUser(
    request: operations.AtsGetUserRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsGetUserResponse> {
    return unwrapAsync(atsGetUser(
      this,
      request,
      options,
    ));
  }

  /**
   * List Application Changes
   */
  async listApplicationChanges(
    request: operations.AtsListApplicationChangesRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<
      operations.AtsListApplicationChangesResponse,
      { cursor: string }
    >
  > {
    return unwrapResultIterator(atsListApplicationChanges(
      this,
      request,
      options,
    ));
  }

  /**
   * List Application Custom Field Definitions
   */
  async listApplicationCustomFieldDefinitions(
    request: operations.AtsListApplicationCustomFieldDefinitionsRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<
      operations.AtsListApplicationCustomFieldDefinitionsResponse,
      { cursor: string }
    >
  > {
    return unwrapResultIterator(atsListApplicationCustomFieldDefinitions(
      this,
      request,
      options,
    ));
  }

  /**
   * List Application Document Categories
   */
  async listApplicationDocumentCategories(
    request: operations.AtsListApplicationDocumentCategoriesRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<
      operations.AtsListApplicationDocumentCategoriesResponse,
      { cursor: string }
    >
  > {
    return unwrapResultIterator(atsListApplicationDocumentCategories(
      this,
      request,
      options,
    ));
  }

  /**
   * List Application Documents
   */
  async listApplicationDocuments(
    request: operations.AtsListApplicationDocumentsRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<
      operations.AtsListApplicationDocumentsResponse,
      { cursor: string }
    >
  > {
    return unwrapResultIterator(atsListApplicationDocuments(
      this,
      request,
      options,
    ));
  }

  /**
   * List Application Notes
   */
  async listApplicationNotes(
    request: operations.AtsListApplicationNotesRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.AtsListApplicationNotesResponse, { cursor: string }>
  > {
    return unwrapResultIterator(atsListApplicationNotes(
      this,
      request,
      options,
    ));
  }

  /**
   * List Application Scorecards
   */
  async listApplicationScorecards(
    request: operations.AtsListApplicationScorecardsRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<
      operations.AtsListApplicationScorecardsResponse,
      { cursor: string }
    >
  > {
    return unwrapResultIterator(atsListApplicationScorecards(
      this,
      request,
      options,
    ));
  }

  /**
   * List Application Stages
   */
  async listApplicationStages(
    request: operations.AtsListApplicationStagesRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<
      operations.AtsListApplicationStagesResponse,
      { cursor: string }
    >
  > {
    return unwrapResultIterator(atsListApplicationStages(
      this,
      request,
      options,
    ));
  }

  /**
   * List Applications
   */
  async listApplications(
    request: operations.AtsListApplicationsRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.AtsListApplicationsResponse, { cursor: string }>
  > {
    return unwrapResultIterator(atsListApplications(
      this,
      request,
      options,
    ));
  }

  /**
   * List Application Offers
   */
  async listApplicationsOffers(
    request: operations.AtsListApplicationsOffersRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<
      operations.AtsListApplicationsOffersResponse,
      { cursor: string }
    >
  > {
    return unwrapResultIterator(atsListApplicationsOffers(
      this,
      request,
      options,
    ));
  }

  /**
   * List Applications scheduled interviews
   */
  async listApplicationsScheduledInterviews(
    request: operations.AtsListApplicationsScheduledInterviewsRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<
      operations.AtsListApplicationsScheduledInterviewsResponse,
      { cursor: string }
    >
  > {
    return unwrapResultIterator(atsListApplicationsScheduledInterviews(
      this,
      request,
      options,
    ));
  }

  /**
   * List Assessments Packages
   */
  async listAssessmentsPackages(
    request: operations.AtsListAssessmentsPackagesRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<
      operations.AtsListAssessmentsPackagesResponse,
      { cursor: string }
    >
  > {
    return unwrapResultIterator(atsListAssessmentsPackages(
      this,
      request,
      options,
    ));
  }

  /**
   * List Background Check Packages
   */
  async listBackgroundCheckPackages(
    request: operations.AtsListBackgroundCheckPackagesRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<
      operations.AtsListBackgroundCheckPackagesResponse,
      { cursor: string }
    >
  > {
    return unwrapResultIterator(atsListBackgroundCheckPackages(
      this,
      request,
      options,
    ));
  }

  /**
   * List Candidate Custom Field Definitions
   */
  async listCandidateCustomFieldDefinitions(
    request: operations.AtsListCandidateCustomFieldDefinitionsRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<
      operations.AtsListCandidateCustomFieldDefinitionsResponse,
      { cursor: string }
    >
  > {
    return unwrapResultIterator(atsListCandidateCustomFieldDefinitions(
      this,
      request,
      options,
    ));
  }

  /**
   * List Candidate Notes
   */
  async listCandidateNotes(
    request: operations.AtsListCandidateNotesRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.AtsListCandidateNotesResponse, { cursor: string }>
  > {
    return unwrapResultIterator(atsListCandidateNotes(
      this,
      request,
      options,
    ));
  }

  /**
   * List Candidates
   */
  async listCandidates(
    request: operations.AtsListCandidatesRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.AtsListCandidatesResponse, { cursor: string }>
  > {
    return unwrapResultIterator(atsListCandidates(
      this,
      request,
      options,
    ));
  }

  /**
   * List Departments
   */
  async listDepartments(
    request: operations.AtsListDepartmentsRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.AtsListDepartmentsResponse, { cursor: string }>
  > {
    return unwrapResultIterator(atsListDepartments(
      this,
      request,
      options,
    ));
  }

  /**
   * List Interview Stages
   *
   * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  async listInterviewStages(
    request: operations.AtsListInterviewStagesRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.AtsListInterviewStagesResponse, { cursor: string }>
  > {
    return unwrapResultIterator(atsListInterviewStages(
      this,
      request,
      options,
    ));
  }

  /**
   * List Interviews
   */
  async listInterviews(
    request: operations.AtsListInterviewsRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.AtsListInterviewsResponse, { cursor: string }>
  > {
    return unwrapResultIterator(atsListInterviews(
      this,
      request,
      options,
    ));
  }

  /**
   * List Job Application Stages
   */
  async listJobApplicationStages(
    request: operations.AtsListJobApplicationStagesRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<
      operations.AtsListJobApplicationStagesResponse,
      { cursor: string }
    >
  > {
    return unwrapResultIterator(atsListJobApplicationStages(
      this,
      request,
      options,
    ));
  }

  /**
   * List Job Custom Field Definitions
   */
  async listJobCustomFieldDefinitions(
    request: operations.AtsListJobCustomFieldDefinitionsRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<
      operations.AtsListJobCustomFieldDefinitionsResponse,
      { cursor: string }
    >
  > {
    return unwrapResultIterator(atsListJobCustomFieldDefinitions(
      this,
      request,
      options,
    ));
  }

  /**
   * List Job Postings
   */
  async listJobPostings(
    request: operations.AtsListJobPostingsRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.AtsListJobPostingsResponse, { cursor: string }>
  > {
    return unwrapResultIterator(atsListJobPostings(
      this,
      request,
      options,
    ));
  }

  /**
   * List Jobs
   */
  async listJobs(
    request: operations.AtsListJobsRequest,
    options?: RequestOptions,
  ): Promise<PageIterator<operations.AtsListJobsResponse, { cursor: string }>> {
    return unwrapResultIterator(atsListJobs(
      this,
      request,
      options,
    ));
  }

  /**
   * Get all Lists
   */
  async listLists(
    request: operations.AtsListListsRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.AtsListListsResponse, { cursor: string }>
  > {
    return unwrapResultIterator(atsListLists(
      this,
      request,
      options,
    ));
  }

  /**
   * List locations
   */
  async listLocations(
    request: operations.AtsListLocationsRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.AtsListLocationsResponse, { cursor: string }>
  > {
    return unwrapResultIterator(atsListLocations(
      this,
      request,
      options,
    ));
  }

  /**
   * List Offers
   */
  async listOffers(
    request: operations.AtsListOffersRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.AtsListOffersResponse, { cursor: string }>
  > {
    return unwrapResultIterator(atsListOffers(
      this,
      request,
      options,
    ));
  }

  /**
   * List Rejected Reasons
   */
  async listRejectedReasons(
    request: operations.AtsListRejectedReasonsRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.AtsListRejectedReasonsResponse, { cursor: string }>
  > {
    return unwrapResultIterator(atsListRejectedReasons(
      this,
      request,
      options,
    ));
  }

  /**
   * List Users
   */
  async listUsers(
    request: operations.AtsListUsersRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.AtsListUsersResponse, { cursor: string }>
  > {
    return unwrapResultIterator(atsListUsers(
      this,
      request,
      options,
    ));
  }

  /**
   * Move Application
   */
  async moveApplication(
    request: operations.AtsMoveApplicationRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsMoveApplicationResponse> {
    return unwrapAsync(atsMoveApplication(
      this,
      request,
      options,
    ));
  }

  /**
   * Order Assessments Request
   */
  async orderAssessmentsRequest(
    request: operations.AtsOrderAssessmentsRequestRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsOrderAssessmentsRequestResponse> {
    return unwrapAsync(atsOrderAssessmentsRequest(
      this,
      request,
      options,
    ));
  }

  /**
   * Order Background Check Request
   */
  async orderBackgroundCheckRequest(
    request: operations.AtsOrderBackgroundCheckRequestRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsOrderBackgroundCheckRequestResponse> {
    return unwrapAsync(atsOrderBackgroundCheckRequest(
      this,
      request,
      options,
    ));
  }

  /**
   * Reject Application
   */
  async rejectApplication(
    request: operations.AtsRejectApplicationRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsRejectApplicationResponse> {
    return unwrapAsync(atsRejectApplication(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Application
   */
  async updateApplication(
    request: operations.AtsUpdateApplicationRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsUpdateApplicationResponse> {
    return unwrapAsync(atsUpdateApplication(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Application Note
   */
  async updateApplicationNote(
    request: operations.AtsUpdateApplicationNoteRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsUpdateApplicationNoteResponse> {
    return unwrapAsync(atsUpdateApplicationNote(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Assessments Result
   */
  async updateAssessmentsResult(
    request: operations.AtsUpdateAssessmentsResultRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsUpdateAssessmentsResultResponse> {
    return unwrapAsync(atsUpdateAssessmentsResult(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Background Check Package
   */
  async updateBackgroundCheckPackage(
    request: operations.AtsUpdateBackgroundCheckPackageRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsUpdateBackgroundCheckPackageResponse> {
    return unwrapAsync(atsUpdateBackgroundCheckPackage(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Background Check Result
   */
  async updateBackgroundCheckResult(
    request: operations.AtsUpdateBackgroundCheckResultRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsUpdateBackgroundCheckResultResponse> {
    return unwrapAsync(atsUpdateBackgroundCheckResult(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Candidate
   */
  async updateCandidate(
    request: operations.AtsUpdateCandidateRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsUpdateCandidateResponse> {
    return unwrapAsync(atsUpdateCandidate(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Job
   */
  async updateJob(
    request: operations.AtsUpdateJobRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsUpdateJobResponse> {
    return unwrapAsync(atsUpdateJob(
      this,
      request,
      options,
    ));
  }

  /**
   * Upload Application Document
   */
  async uploadApplicationDocument(
    request: operations.AtsUploadApplicationDocumentRequest,
    options?: RequestOptions,
  ): Promise<operations.AtsUploadApplicationDocumentResponse> {
    return unwrapAsync(atsUploadApplicationDocument(
      this,
      request,
      options,
    ));
  }
}
