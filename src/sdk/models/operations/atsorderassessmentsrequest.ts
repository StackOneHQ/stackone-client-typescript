/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

export type AtsOrderAssessmentsRequestRequest = {
  atsCreateCandidatesAssessmentsRequestDto:
    shared.AtsCreateCandidatesAssessmentsRequestDto;
  /**
   * The account identifier
   */
  xAccountId: string;
};

export type AtsOrderAssessmentsRequestResponse = {
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * The order request of the assessment for candidate.
   */
  createAssessmentOrderResult?: shared.CreateAssessmentOrderResult | undefined;
  headers: { [k: string]: Array<string> };
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
};

/** @internal */
export const AtsOrderAssessmentsRequestRequest$inboundSchema: z.ZodType<
  AtsOrderAssessmentsRequestRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  AtsCreateCandidatesAssessmentsRequestDto:
    shared.AtsCreateCandidatesAssessmentsRequestDto$inboundSchema,
  "x-account-id": z.string(),
}).transform((v) => {
  return remap$(v, {
    "AtsCreateCandidatesAssessmentsRequestDto":
      "atsCreateCandidatesAssessmentsRequestDto",
    "x-account-id": "xAccountId",
  });
});

/** @internal */
export type AtsOrderAssessmentsRequestRequest$Outbound = {
  AtsCreateCandidatesAssessmentsRequestDto:
    shared.AtsCreateCandidatesAssessmentsRequestDto$Outbound;
  "x-account-id": string;
};

/** @internal */
export const AtsOrderAssessmentsRequestRequest$outboundSchema: z.ZodType<
  AtsOrderAssessmentsRequestRequest$Outbound,
  z.ZodTypeDef,
  AtsOrderAssessmentsRequestRequest
> = z.object({
  atsCreateCandidatesAssessmentsRequestDto:
    shared.AtsCreateCandidatesAssessmentsRequestDto$outboundSchema,
  xAccountId: z.string(),
}).transform((v) => {
  return remap$(v, {
    atsCreateCandidatesAssessmentsRequestDto:
      "AtsCreateCandidatesAssessmentsRequestDto",
    xAccountId: "x-account-id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsOrderAssessmentsRequestRequest$ {
  /** @deprecated use `AtsOrderAssessmentsRequestRequest$inboundSchema` instead. */
  export const inboundSchema = AtsOrderAssessmentsRequestRequest$inboundSchema;
  /** @deprecated use `AtsOrderAssessmentsRequestRequest$outboundSchema` instead. */
  export const outboundSchema =
    AtsOrderAssessmentsRequestRequest$outboundSchema;
  /** @deprecated use `AtsOrderAssessmentsRequestRequest$Outbound` instead. */
  export type Outbound = AtsOrderAssessmentsRequestRequest$Outbound;
}

export function atsOrderAssessmentsRequestRequestToJSON(
  atsOrderAssessmentsRequestRequest: AtsOrderAssessmentsRequestRequest,
): string {
  return JSON.stringify(
    AtsOrderAssessmentsRequestRequest$outboundSchema.parse(
      atsOrderAssessmentsRequestRequest,
    ),
  );
}

export function atsOrderAssessmentsRequestRequestFromJSON(
  jsonString: string,
): SafeParseResult<AtsOrderAssessmentsRequestRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AtsOrderAssessmentsRequestRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AtsOrderAssessmentsRequestRequest' from JSON`,
  );
}

/** @internal */
export const AtsOrderAssessmentsRequestResponse$inboundSchema: z.ZodType<
  AtsOrderAssessmentsRequestResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  CreateAssessmentOrderResult: shared.CreateAssessmentOrderResult$inboundSchema
    .optional(),

  Headers: z.record(z.array(z.string())).default({}),
  StatusCode: z.number().int(),
  RawResponse: z.instanceof(Response),
}).transform((v) => {
  return remap$(v, {
    "ContentType": "contentType",
    "CreateAssessmentOrderResult": "createAssessmentOrderResult",
    "Headers": "headers",
    "StatusCode": "statusCode",
    "RawResponse": "rawResponse",
  });
});

/** @internal */
export type AtsOrderAssessmentsRequestResponse$Outbound = {
  ContentType: string;
  CreateAssessmentOrderResult?:
    | shared.CreateAssessmentOrderResult$Outbound
    | undefined;
  Headers: { [k: string]: Array<string> };
  StatusCode: number;
  RawResponse: never;
};

/** @internal */
export const AtsOrderAssessmentsRequestResponse$outboundSchema: z.ZodType<
  AtsOrderAssessmentsRequestResponse$Outbound,
  z.ZodTypeDef,
  AtsOrderAssessmentsRequestResponse
> = z.object({
  contentType: z.string(),
  createAssessmentOrderResult: shared.CreateAssessmentOrderResult$outboundSchema
    .optional(),
  headers: z.record(z.array(z.string())),
  statusCode: z.number().int(),
  rawResponse: z.instanceof(Response).transform(() => {
    throw new Error("Response cannot be serialized");
  }),
}).transform((v) => {
  return remap$(v, {
    contentType: "ContentType",
    createAssessmentOrderResult: "CreateAssessmentOrderResult",
    headers: "Headers",
    statusCode: "StatusCode",
    rawResponse: "RawResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsOrderAssessmentsRequestResponse$ {
  /** @deprecated use `AtsOrderAssessmentsRequestResponse$inboundSchema` instead. */
  export const inboundSchema = AtsOrderAssessmentsRequestResponse$inboundSchema;
  /** @deprecated use `AtsOrderAssessmentsRequestResponse$outboundSchema` instead. */
  export const outboundSchema =
    AtsOrderAssessmentsRequestResponse$outboundSchema;
  /** @deprecated use `AtsOrderAssessmentsRequestResponse$Outbound` instead. */
  export type Outbound = AtsOrderAssessmentsRequestResponse$Outbound;
}

export function atsOrderAssessmentsRequestResponseToJSON(
  atsOrderAssessmentsRequestResponse: AtsOrderAssessmentsRequestResponse,
): string {
  return JSON.stringify(
    AtsOrderAssessmentsRequestResponse$outboundSchema.parse(
      atsOrderAssessmentsRequestResponse,
    ),
  );
}

export function atsOrderAssessmentsRequestResponseFromJSON(
  jsonString: string,
): SafeParseResult<AtsOrderAssessmentsRequestResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      AtsOrderAssessmentsRequestResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AtsOrderAssessmentsRequestResponse' from JSON`,
  );
}
