/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";

export type LmsGetSkillRequest = {
  /**
   * The comma separated list of fields that will be returned in the response (if empty, all fields are returned)
   */
  fields?: string | null | undefined;
  id: string;
  /**
   * Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key
   */
  proxy?: { [k: string]: any } | null | undefined;
  /**
   * Indicates that the raw request result is returned
   */
  raw?: boolean | null | undefined;
  /**
   * The account identifier
   */
  xAccountId: string;
};

export type LmsGetSkillResponse = {
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * The skill with the given identifier was retrieved.
   */
  skillResult?: shared.SkillResult | undefined;
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
};

/** @internal */
export const LmsGetSkillRequest$inboundSchema: z.ZodType<
  LmsGetSkillRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  fields: z.nullable(z.string()).optional(),
  id: z.string(),
  proxy: z.nullable(z.record(z.any())).optional(),
  raw: z.nullable(z.boolean().default(false)),
  "x-account-id": z.string(),
}).transform((v) => {
  return remap$(v, {
    "x-account-id": "xAccountId",
  });
});

/** @internal */
export type LmsGetSkillRequest$Outbound = {
  fields?: string | null | undefined;
  id: string;
  proxy?: { [k: string]: any } | null | undefined;
  raw: boolean | null;
  "x-account-id": string;
};

/** @internal */
export const LmsGetSkillRequest$outboundSchema: z.ZodType<
  LmsGetSkillRequest$Outbound,
  z.ZodTypeDef,
  LmsGetSkillRequest
> = z.object({
  fields: z.nullable(z.string()).optional(),
  id: z.string(),
  proxy: z.nullable(z.record(z.any())).optional(),
  raw: z.nullable(z.boolean().default(false)),
  xAccountId: z.string(),
}).transform((v) => {
  return remap$(v, {
    xAccountId: "x-account-id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LmsGetSkillRequest$ {
  /** @deprecated use `LmsGetSkillRequest$inboundSchema` instead. */
  export const inboundSchema = LmsGetSkillRequest$inboundSchema;
  /** @deprecated use `LmsGetSkillRequest$outboundSchema` instead. */
  export const outboundSchema = LmsGetSkillRequest$outboundSchema;
  /** @deprecated use `LmsGetSkillRequest$Outbound` instead. */
  export type Outbound = LmsGetSkillRequest$Outbound;
}

/** @internal */
export const LmsGetSkillResponse$inboundSchema: z.ZodType<
  LmsGetSkillResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  SkillResult: shared.SkillResult$inboundSchema.optional(),
  StatusCode: z.number().int(),
  RawResponse: z.instanceof(Response),
}).transform((v) => {
  return remap$(v, {
    "ContentType": "contentType",
    "SkillResult": "skillResult",
    "StatusCode": "statusCode",
    "RawResponse": "rawResponse",
  });
});

/** @internal */
export type LmsGetSkillResponse$Outbound = {
  ContentType: string;
  SkillResult?: shared.SkillResult$Outbound | undefined;
  StatusCode: number;
  RawResponse: never;
};

/** @internal */
export const LmsGetSkillResponse$outboundSchema: z.ZodType<
  LmsGetSkillResponse$Outbound,
  z.ZodTypeDef,
  LmsGetSkillResponse
> = z.object({
  contentType: z.string(),
  skillResult: shared.SkillResult$outboundSchema.optional(),
  statusCode: z.number().int(),
  rawResponse: z.instanceof(Response).transform(() => {
    throw new Error("Response cannot be serialized");
  }),
}).transform((v) => {
  return remap$(v, {
    contentType: "ContentType",
    skillResult: "SkillResult",
    statusCode: "StatusCode",
    rawResponse: "RawResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LmsGetSkillResponse$ {
  /** @deprecated use `LmsGetSkillResponse$inboundSchema` instead. */
  export const inboundSchema = LmsGetSkillResponse$inboundSchema;
  /** @deprecated use `LmsGetSkillResponse$outboundSchema` instead. */
  export const outboundSchema = LmsGetSkillResponse$outboundSchema;
  /** @deprecated use `LmsGetSkillResponse$Outbound` instead. */
  export type Outbound = LmsGetSkillResponse$Outbound;
}
