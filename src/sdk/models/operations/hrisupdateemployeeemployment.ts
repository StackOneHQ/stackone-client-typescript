/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";

export type HrisUpdateEmployeeEmploymentRequest = {
  hrisCreateEmploymentRequestDto: shared.HrisCreateEmploymentRequestDto;
  id: string;
  subResourceId: string;
  /**
   * The account identifier
   */
  xAccountId: string;
};

export type HrisUpdateEmployeeEmploymentResponse = {
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * The employee employment was updated successfully.
   */
  employmentResult?: shared.EmploymentResult | undefined;
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
};

/** @internal */
export const HrisUpdateEmployeeEmploymentRequest$inboundSchema: z.ZodType<
  HrisUpdateEmployeeEmploymentRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  HrisCreateEmploymentRequestDto:
    shared.HrisCreateEmploymentRequestDto$inboundSchema,
  id: z.string(),
  subResourceId: z.string(),
  "x-account-id": z.string(),
}).transform((v) => {
  return remap$(v, {
    "HrisCreateEmploymentRequestDto": "hrisCreateEmploymentRequestDto",
    "x-account-id": "xAccountId",
  });
});

/** @internal */
export type HrisUpdateEmployeeEmploymentRequest$Outbound = {
  HrisCreateEmploymentRequestDto:
    shared.HrisCreateEmploymentRequestDto$Outbound;
  id: string;
  subResourceId: string;
  "x-account-id": string;
};

/** @internal */
export const HrisUpdateEmployeeEmploymentRequest$outboundSchema: z.ZodType<
  HrisUpdateEmployeeEmploymentRequest$Outbound,
  z.ZodTypeDef,
  HrisUpdateEmployeeEmploymentRequest
> = z.object({
  hrisCreateEmploymentRequestDto:
    shared.HrisCreateEmploymentRequestDto$outboundSchema,
  id: z.string(),
  subResourceId: z.string(),
  xAccountId: z.string(),
}).transform((v) => {
  return remap$(v, {
    hrisCreateEmploymentRequestDto: "HrisCreateEmploymentRequestDto",
    xAccountId: "x-account-id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeEmploymentRequest$ {
  /** @deprecated use `HrisUpdateEmployeeEmploymentRequest$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeEmploymentRequest$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeEmploymentRequest$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeEmploymentRequest$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeEmploymentRequest$Outbound` instead. */
  export type Outbound = HrisUpdateEmployeeEmploymentRequest$Outbound;
}

/** @internal */
export const HrisUpdateEmployeeEmploymentResponse$inboundSchema: z.ZodType<
  HrisUpdateEmployeeEmploymentResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  EmploymentResult: shared.EmploymentResult$inboundSchema.optional(),
  StatusCode: z.number().int(),
  RawResponse: z.instanceof(Response),
}).transform((v) => {
  return remap$(v, {
    "ContentType": "contentType",
    "EmploymentResult": "employmentResult",
    "StatusCode": "statusCode",
    "RawResponse": "rawResponse",
  });
});

/** @internal */
export type HrisUpdateEmployeeEmploymentResponse$Outbound = {
  ContentType: string;
  EmploymentResult?: shared.EmploymentResult$Outbound | undefined;
  StatusCode: number;
  RawResponse: never;
};

/** @internal */
export const HrisUpdateEmployeeEmploymentResponse$outboundSchema: z.ZodType<
  HrisUpdateEmployeeEmploymentResponse$Outbound,
  z.ZodTypeDef,
  HrisUpdateEmployeeEmploymentResponse
> = z.object({
  contentType: z.string(),
  employmentResult: shared.EmploymentResult$outboundSchema.optional(),
  statusCode: z.number().int(),
  rawResponse: z.instanceof(Response).transform(() => {
    throw new Error("Response cannot be serialized");
  }),
}).transform((v) => {
  return remap$(v, {
    contentType: "ContentType",
    employmentResult: "EmploymentResult",
    statusCode: "StatusCode",
    rawResponse: "RawResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeEmploymentResponse$ {
  /** @deprecated use `HrisUpdateEmployeeEmploymentResponse$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeEmploymentResponse$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeEmploymentResponse$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeEmploymentResponse$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeEmploymentResponse$Outbound` instead. */
  export type Outbound = HrisUpdateEmployeeEmploymentResponse$Outbound;
}
