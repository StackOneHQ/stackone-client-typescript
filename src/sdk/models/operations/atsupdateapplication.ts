/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as shared from "../../../sdk/models/shared";
import * as z from "zod";

export type AtsUpdateApplicationRequest = {
    atsUpdateApplicationRequestDto: shared.AtsUpdateApplicationRequestDto;
    id: string;
    /**
     * The account identifier
     */
    xAccountId: string;
};

export type AtsUpdateApplicationResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Record updated successfully.
     */
    updateResult?: shared.UpdateResult | undefined;
};

/** @internal */
export namespace AtsUpdateApplicationRequest$ {
    export type Inbound = {
        AtsUpdateApplicationRequestDto: shared.AtsUpdateApplicationRequestDto$.Inbound;
        id: string;
        "x-account-id": string;
    };

    export const inboundSchema: z.ZodType<AtsUpdateApplicationRequest, z.ZodTypeDef, Inbound> = z
        .object({
            AtsUpdateApplicationRequestDto: shared.AtsUpdateApplicationRequestDto$.inboundSchema,
            id: z.string(),
            "x-account-id": z.string(),
        })
        .transform((v) => {
            return {
                atsUpdateApplicationRequestDto: v.AtsUpdateApplicationRequestDto,
                id: v.id,
                xAccountId: v["x-account-id"],
            };
        });

    export type Outbound = {
        AtsUpdateApplicationRequestDto: shared.AtsUpdateApplicationRequestDto$.Outbound;
        id: string;
        "x-account-id": string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AtsUpdateApplicationRequest> = z
        .object({
            atsUpdateApplicationRequestDto: shared.AtsUpdateApplicationRequestDto$.outboundSchema,
            id: z.string(),
            xAccountId: z.string(),
        })
        .transform((v) => {
            return {
                AtsUpdateApplicationRequestDto: v.atsUpdateApplicationRequestDto,
                id: v.id,
                "x-account-id": v.xAccountId,
            };
        });
}

/** @internal */
export namespace AtsUpdateApplicationResponse$ {
    export type Inbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: Response;
        UpdateResult?: shared.UpdateResult$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<AtsUpdateApplicationResponse, z.ZodTypeDef, Inbound> = z
        .object({
            ContentType: z.string(),
            StatusCode: z.number().int(),
            RawResponse: z.instanceof(Response),
            UpdateResult: shared.UpdateResult$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                contentType: v.ContentType,
                statusCode: v.StatusCode,
                rawResponse: v.RawResponse,
                ...(v.UpdateResult === undefined ? null : { updateResult: v.UpdateResult }),
            };
        });

    export type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
        UpdateResult?: shared.UpdateResult$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AtsUpdateApplicationResponse> = z
        .object({
            contentType: z.string(),
            statusCode: z.number().int(),
            rawResponse: z.instanceof(Response).transform(() => {
                throw new Error("Response cannot be serialized");
            }),
            updateResult: shared.UpdateResult$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ContentType: v.contentType,
                StatusCode: v.statusCode,
                RawResponse: v.rawResponse,
                ...(v.updateResult === undefined ? null : { UpdateResult: v.updateResult }),
            };
        });
}
