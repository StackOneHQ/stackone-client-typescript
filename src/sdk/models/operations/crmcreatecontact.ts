/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as shared from "../../../sdk/models/shared";
import { z } from "zod";

export type CrmCreateContactRequest = {
    crmCreateContactRequestDto: shared.CrmCreateContactRequestDto;
    /**
     * The account identifier
     */
    xAccountId: string;
};

export type CrmCreateContactResponse = {
    /**
     * The contact was successfully created.
     */
    contactResult?: shared.ContactResult | undefined;
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};

/** @internal */
export namespace CrmCreateContactRequest$ {
    export type Inbound = {
        CrmCreateContactRequestDto: shared.CrmCreateContactRequestDto$.Inbound;
        "x-account-id": string;
    };

    export const inboundSchema: z.ZodType<CrmCreateContactRequest, z.ZodTypeDef, Inbound> = z
        .object({
            CrmCreateContactRequestDto: shared.CrmCreateContactRequestDto$.inboundSchema,
            "x-account-id": z.string(),
        })
        .transform((v) => {
            return {
                crmCreateContactRequestDto: v.CrmCreateContactRequestDto,
                xAccountId: v["x-account-id"],
            };
        });

    export type Outbound = {
        CrmCreateContactRequestDto: shared.CrmCreateContactRequestDto$.Outbound;
        "x-account-id": string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CrmCreateContactRequest> = z
        .object({
            crmCreateContactRequestDto: shared.CrmCreateContactRequestDto$.outboundSchema,
            xAccountId: z.string(),
        })
        .transform((v) => {
            return {
                CrmCreateContactRequestDto: v.crmCreateContactRequestDto,
                "x-account-id": v.xAccountId,
            };
        });
}

/** @internal */
export namespace CrmCreateContactResponse$ {
    export type Inbound = {
        ContactResult?: shared.ContactResult$.Inbound | undefined;
        ContentType: string;
        StatusCode: number;
        RawResponse: Response;
    };

    export const inboundSchema: z.ZodType<CrmCreateContactResponse, z.ZodTypeDef, Inbound> = z
        .object({
            ContactResult: shared.ContactResult$.inboundSchema.optional(),
            ContentType: z.string(),
            StatusCode: z.number().int(),
            RawResponse: z.instanceof(Response),
        })
        .transform((v) => {
            return {
                ...(v.ContactResult === undefined ? null : { contactResult: v.ContactResult }),
                contentType: v.ContentType,
                statusCode: v.StatusCode,
                rawResponse: v.RawResponse,
            };
        });

    export type Outbound = {
        ContactResult?: shared.ContactResult$.Outbound | undefined;
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CrmCreateContactResponse> = z
        .object({
            contactResult: shared.ContactResult$.outboundSchema.optional(),
            contentType: z.string(),
            statusCode: z.number().int(),
            rawResponse: z.instanceof(Response).transform(() => {
                throw new Error("Response cannot be serialized");
            }),
        })
        .transform((v) => {
            return {
                ...(v.contactResult === undefined ? null : { ContactResult: v.contactResult }),
                ContentType: v.contentType,
                StatusCode: v.statusCode,
                RawResponse: v.rawResponse,
            };
        });
}
