/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";

export type MarketingUpdateInAppTemplateRequest = {
  marketingCreateInAppTemplateRequestDto:
    shared.MarketingCreateInAppTemplateRequestDto;
  id: string;
  /**
   * The account identifier
   */
  xAccountId: string;
};

export type MarketingUpdateInAppTemplateResponse = {
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * Record updated successfully
   */
  createResult?: shared.CreateResult | undefined;
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
};

/** @internal */
export const MarketingUpdateInAppTemplateRequest$inboundSchema: z.ZodType<
  MarketingUpdateInAppTemplateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  MarketingCreateInAppTemplateRequestDto:
    shared.MarketingCreateInAppTemplateRequestDto$inboundSchema,
  id: z.string(),
  "x-account-id": z.string(),
}).transform((v) => {
  return remap$(v, {
    "MarketingCreateInAppTemplateRequestDto":
      "marketingCreateInAppTemplateRequestDto",
    "x-account-id": "xAccountId",
  });
});

/** @internal */
export type MarketingUpdateInAppTemplateRequest$Outbound = {
  MarketingCreateInAppTemplateRequestDto:
    shared.MarketingCreateInAppTemplateRequestDto$Outbound;
  id: string;
  "x-account-id": string;
};

/** @internal */
export const MarketingUpdateInAppTemplateRequest$outboundSchema: z.ZodType<
  MarketingUpdateInAppTemplateRequest$Outbound,
  z.ZodTypeDef,
  MarketingUpdateInAppTemplateRequest
> = z.object({
  marketingCreateInAppTemplateRequestDto:
    shared.MarketingCreateInAppTemplateRequestDto$outboundSchema,
  id: z.string(),
  xAccountId: z.string(),
}).transform((v) => {
  return remap$(v, {
    marketingCreateInAppTemplateRequestDto:
      "MarketingCreateInAppTemplateRequestDto",
    xAccountId: "x-account-id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MarketingUpdateInAppTemplateRequest$ {
  /** @deprecated use `MarketingUpdateInAppTemplateRequest$inboundSchema` instead. */
  export const inboundSchema =
    MarketingUpdateInAppTemplateRequest$inboundSchema;
  /** @deprecated use `MarketingUpdateInAppTemplateRequest$outboundSchema` instead. */
  export const outboundSchema =
    MarketingUpdateInAppTemplateRequest$outboundSchema;
  /** @deprecated use `MarketingUpdateInAppTemplateRequest$Outbound` instead. */
  export type Outbound = MarketingUpdateInAppTemplateRequest$Outbound;
}

/** @internal */
export const MarketingUpdateInAppTemplateResponse$inboundSchema: z.ZodType<
  MarketingUpdateInAppTemplateResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  CreateResult: shared.CreateResult$inboundSchema.optional(),
  StatusCode: z.number().int(),
  RawResponse: z.instanceof(Response),
}).transform((v) => {
  return remap$(v, {
    "ContentType": "contentType",
    "CreateResult": "createResult",
    "StatusCode": "statusCode",
    "RawResponse": "rawResponse",
  });
});

/** @internal */
export type MarketingUpdateInAppTemplateResponse$Outbound = {
  ContentType: string;
  CreateResult?: shared.CreateResult$Outbound | undefined;
  StatusCode: number;
  RawResponse: never;
};

/** @internal */
export const MarketingUpdateInAppTemplateResponse$outboundSchema: z.ZodType<
  MarketingUpdateInAppTemplateResponse$Outbound,
  z.ZodTypeDef,
  MarketingUpdateInAppTemplateResponse
> = z.object({
  contentType: z.string(),
  createResult: shared.CreateResult$outboundSchema.optional(),
  statusCode: z.number().int(),
  rawResponse: z.instanceof(Response).transform(() => {
    throw new Error("Response cannot be serialized");
  }),
}).transform((v) => {
  return remap$(v, {
    contentType: "ContentType",
    createResult: "CreateResult",
    statusCode: "StatusCode",
    rawResponse: "RawResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MarketingUpdateInAppTemplateResponse$ {
  /** @deprecated use `MarketingUpdateInAppTemplateResponse$inboundSchema` instead. */
  export const inboundSchema =
    MarketingUpdateInAppTemplateResponse$inboundSchema;
  /** @deprecated use `MarketingUpdateInAppTemplateResponse$outboundSchema` instead. */
  export const outboundSchema =
    MarketingUpdateInAppTemplateResponse$outboundSchema;
  /** @deprecated use `MarketingUpdateInAppTemplateResponse$Outbound` instead. */
  export type Outbound = MarketingUpdateInAppTemplateResponse$Outbound;
}
