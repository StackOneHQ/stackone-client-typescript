/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

/**
 * Filter parameters that allow greater customisation of the list response
 */
export type CrmGetContactCustomFieldDefinitionQueryParamFilter = {
  /**
   * Use a string with a date to only select results updated after that given date
   */
  updatedAfter?: string | null | undefined;
};

export type CrmGetContactCustomFieldDefinitionRequest = {
  /**
   * The comma separated list of fields that will be returned in the response (if empty, all fields are returned)
   */
  fields?: string | null | undefined;
  /**
   * Filter parameters that allow greater customisation of the list response
   */
  filter?:
    | CrmGetContactCustomFieldDefinitionQueryParamFilter
    | null
    | undefined;
  id: string;
  /**
   * The unified cursor
   */
  next?: string | null | undefined;
  /**
   * The page number of the results to fetch
   *
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  page?: string | null | undefined;
  /**
   * The number of results per page
   */
  pageSize?: string | null | undefined;
  /**
   * Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key
   */
  proxy?: { [k: string]: any } | null | undefined;
  /**
   * Indicates that the raw request result is returned
   */
  raw?: boolean | null | undefined;
  /**
   * Use a string with a date to only select results updated after that given date
   *
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  updatedAfter?: string | null | undefined;
  /**
   * The account identifier
   */
  xAccountId: string;
};

export type CrmGetContactCustomFieldDefinitionResponse = {
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * The contact custom field definition was retrieved.
   */
  customFieldDefinitionResultApiModel?:
    | shared.CustomFieldDefinitionResultApiModel
    | undefined;
  headers: { [k: string]: Array<string> };
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
};

/** @internal */
export const CrmGetContactCustomFieldDefinitionQueryParamFilter$inboundSchema:
  z.ZodType<
    CrmGetContactCustomFieldDefinitionQueryParamFilter,
    z.ZodTypeDef,
    unknown
  > = z.object({
    updated_after: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      "updated_after": "updatedAfter",
    });
  });

/** @internal */
export type CrmGetContactCustomFieldDefinitionQueryParamFilter$Outbound = {
  updated_after?: string | null | undefined;
};

/** @internal */
export const CrmGetContactCustomFieldDefinitionQueryParamFilter$outboundSchema:
  z.ZodType<
    CrmGetContactCustomFieldDefinitionQueryParamFilter$Outbound,
    z.ZodTypeDef,
    CrmGetContactCustomFieldDefinitionQueryParamFilter
  > = z.object({
    updatedAfter: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      updatedAfter: "updated_after",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CrmGetContactCustomFieldDefinitionQueryParamFilter$ {
  /** @deprecated use `CrmGetContactCustomFieldDefinitionQueryParamFilter$inboundSchema` instead. */
  export const inboundSchema =
    CrmGetContactCustomFieldDefinitionQueryParamFilter$inboundSchema;
  /** @deprecated use `CrmGetContactCustomFieldDefinitionQueryParamFilter$outboundSchema` instead. */
  export const outboundSchema =
    CrmGetContactCustomFieldDefinitionQueryParamFilter$outboundSchema;
  /** @deprecated use `CrmGetContactCustomFieldDefinitionQueryParamFilter$Outbound` instead. */
  export type Outbound =
    CrmGetContactCustomFieldDefinitionQueryParamFilter$Outbound;
}

export function crmGetContactCustomFieldDefinitionQueryParamFilterToJSON(
  crmGetContactCustomFieldDefinitionQueryParamFilter:
    CrmGetContactCustomFieldDefinitionQueryParamFilter,
): string {
  return JSON.stringify(
    CrmGetContactCustomFieldDefinitionQueryParamFilter$outboundSchema.parse(
      crmGetContactCustomFieldDefinitionQueryParamFilter,
    ),
  );
}

export function crmGetContactCustomFieldDefinitionQueryParamFilterFromJSON(
  jsonString: string,
): SafeParseResult<
  CrmGetContactCustomFieldDefinitionQueryParamFilter,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CrmGetContactCustomFieldDefinitionQueryParamFilter$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CrmGetContactCustomFieldDefinitionQueryParamFilter' from JSON`,
  );
}

/** @internal */
export const CrmGetContactCustomFieldDefinitionRequest$inboundSchema: z.ZodType<
  CrmGetContactCustomFieldDefinitionRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  fields: z.nullable(z.string()).optional(),
  filter: z.nullable(
    z.lazy(() =>
      CrmGetContactCustomFieldDefinitionQueryParamFilter$inboundSchema
    ),
  ).optional(),
  id: z.string(),
  next: z.nullable(z.string()).optional(),
  page: z.nullable(z.string()).optional(),
  page_size: z.nullable(z.string().default("25")),
  proxy: z.nullable(z.record(z.any())).optional(),
  raw: z.nullable(z.boolean().default(false)),
  updated_after: z.nullable(z.string()).optional(),
  "x-account-id": z.string(),
}).transform((v) => {
  return remap$(v, {
    "page_size": "pageSize",
    "updated_after": "updatedAfter",
    "x-account-id": "xAccountId",
  });
});

/** @internal */
export type CrmGetContactCustomFieldDefinitionRequest$Outbound = {
  fields?: string | null | undefined;
  filter?:
    | CrmGetContactCustomFieldDefinitionQueryParamFilter$Outbound
    | null
    | undefined;
  id: string;
  next?: string | null | undefined;
  page?: string | null | undefined;
  page_size: string | null;
  proxy?: { [k: string]: any } | null | undefined;
  raw: boolean | null;
  updated_after?: string | null | undefined;
  "x-account-id": string;
};

/** @internal */
export const CrmGetContactCustomFieldDefinitionRequest$outboundSchema:
  z.ZodType<
    CrmGetContactCustomFieldDefinitionRequest$Outbound,
    z.ZodTypeDef,
    CrmGetContactCustomFieldDefinitionRequest
  > = z.object({
    fields: z.nullable(z.string()).optional(),
    filter: z.nullable(
      z.lazy(() =>
        CrmGetContactCustomFieldDefinitionQueryParamFilter$outboundSchema
      ),
    ).optional(),
    id: z.string(),
    next: z.nullable(z.string()).optional(),
    page: z.nullable(z.string()).optional(),
    pageSize: z.nullable(z.string().default("25")),
    proxy: z.nullable(z.record(z.any())).optional(),
    raw: z.nullable(z.boolean().default(false)),
    updatedAfter: z.nullable(z.string()).optional(),
    xAccountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      pageSize: "page_size",
      updatedAfter: "updated_after",
      xAccountId: "x-account-id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CrmGetContactCustomFieldDefinitionRequest$ {
  /** @deprecated use `CrmGetContactCustomFieldDefinitionRequest$inboundSchema` instead. */
  export const inboundSchema =
    CrmGetContactCustomFieldDefinitionRequest$inboundSchema;
  /** @deprecated use `CrmGetContactCustomFieldDefinitionRequest$outboundSchema` instead. */
  export const outboundSchema =
    CrmGetContactCustomFieldDefinitionRequest$outboundSchema;
  /** @deprecated use `CrmGetContactCustomFieldDefinitionRequest$Outbound` instead. */
  export type Outbound = CrmGetContactCustomFieldDefinitionRequest$Outbound;
}

export function crmGetContactCustomFieldDefinitionRequestToJSON(
  crmGetContactCustomFieldDefinitionRequest:
    CrmGetContactCustomFieldDefinitionRequest,
): string {
  return JSON.stringify(
    CrmGetContactCustomFieldDefinitionRequest$outboundSchema.parse(
      crmGetContactCustomFieldDefinitionRequest,
    ),
  );
}

export function crmGetContactCustomFieldDefinitionRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  CrmGetContactCustomFieldDefinitionRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CrmGetContactCustomFieldDefinitionRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CrmGetContactCustomFieldDefinitionRequest' from JSON`,
  );
}

/** @internal */
export const CrmGetContactCustomFieldDefinitionResponse$inboundSchema:
  z.ZodType<CrmGetContactCustomFieldDefinitionResponse, z.ZodTypeDef, unknown> =
    z.object({
      ContentType: z.string(),
      CustomFieldDefinitionResultApiModel: shared
        .CustomFieldDefinitionResultApiModel$inboundSchema.optional(),
      Headers: z.record(z.array(z.string())),
      StatusCode: z.number().int(),
      RawResponse: z.instanceof(Response),
    }).transform((v) => {
      return remap$(v, {
        "ContentType": "contentType",
        "CustomFieldDefinitionResultApiModel":
          "customFieldDefinitionResultApiModel",
        "Headers": "headers",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
      });
    });

/** @internal */
export type CrmGetContactCustomFieldDefinitionResponse$Outbound = {
  ContentType: string;
  CustomFieldDefinitionResultApiModel?:
    | shared.CustomFieldDefinitionResultApiModel$Outbound
    | undefined;
  Headers: { [k: string]: Array<string> };
  StatusCode: number;
  RawResponse: never;
};

/** @internal */
export const CrmGetContactCustomFieldDefinitionResponse$outboundSchema:
  z.ZodType<
    CrmGetContactCustomFieldDefinitionResponse$Outbound,
    z.ZodTypeDef,
    CrmGetContactCustomFieldDefinitionResponse
  > = z.object({
    contentType: z.string(),
    customFieldDefinitionResultApiModel: shared
      .CustomFieldDefinitionResultApiModel$outboundSchema.optional(),
    headers: z.record(z.array(z.string())),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
      throw new Error("Response cannot be serialized");
    }),
  }).transform((v) => {
    return remap$(v, {
      contentType: "ContentType",
      customFieldDefinitionResultApiModel:
        "CustomFieldDefinitionResultApiModel",
      headers: "Headers",
      statusCode: "StatusCode",
      rawResponse: "RawResponse",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CrmGetContactCustomFieldDefinitionResponse$ {
  /** @deprecated use `CrmGetContactCustomFieldDefinitionResponse$inboundSchema` instead. */
  export const inboundSchema =
    CrmGetContactCustomFieldDefinitionResponse$inboundSchema;
  /** @deprecated use `CrmGetContactCustomFieldDefinitionResponse$outboundSchema` instead. */
  export const outboundSchema =
    CrmGetContactCustomFieldDefinitionResponse$outboundSchema;
  /** @deprecated use `CrmGetContactCustomFieldDefinitionResponse$Outbound` instead. */
  export type Outbound = CrmGetContactCustomFieldDefinitionResponse$Outbound;
}

export function crmGetContactCustomFieldDefinitionResponseToJSON(
  crmGetContactCustomFieldDefinitionResponse:
    CrmGetContactCustomFieldDefinitionResponse,
): string {
  return JSON.stringify(
    CrmGetContactCustomFieldDefinitionResponse$outboundSchema.parse(
      crmGetContactCustomFieldDefinitionResponse,
    ),
  );
}

export function crmGetContactCustomFieldDefinitionResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  CrmGetContactCustomFieldDefinitionResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CrmGetContactCustomFieldDefinitionResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CrmGetContactCustomFieldDefinitionResponse' from JSON`,
  );
}
