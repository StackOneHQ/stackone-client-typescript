/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type TooManyRequestsResponseData = {
  /**
   * Error message
   */
  message: string;
  /**
   * HTTP status code
   */
  statusCode: number;
  /**
   * Timestamp when the error occurred
   */
  timestamp: Date;
};

export class TooManyRequestsResponse extends Error {
  /**
   * HTTP status code
   */
  statusCode: number;
  /**
   * Timestamp when the error occurred
   */
  timestamp: Date;

  /** The original data that was passed to this error instance. */
  data$: TooManyRequestsResponseData;

  constructor(err: TooManyRequestsResponseData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.statusCode = err.statusCode;
    this.timestamp = err.timestamp;

    this.name = "TooManyRequestsResponse";
  }
}

/** @internal */
export const TooManyRequestsResponse$inboundSchema: z.ZodType<
  TooManyRequestsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
  statusCode: z.number(),
  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),
})
  .transform((v) => {
    return new TooManyRequestsResponse(v);
  });

/** @internal */
export type TooManyRequestsResponse$Outbound = {
  message: string;
  statusCode: number;
  timestamp: string;
};

/** @internal */
export const TooManyRequestsResponse$outboundSchema: z.ZodType<
  TooManyRequestsResponse$Outbound,
  z.ZodTypeDef,
  TooManyRequestsResponse
> = z.instanceof(TooManyRequestsResponse)
  .transform(v => v.data$)
  .pipe(z.object({
    message: z.string(),
    statusCode: z.number(),
    timestamp: z.date().transform(v => v.toISOString()),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TooManyRequestsResponse$ {
  /** @deprecated use `TooManyRequestsResponse$inboundSchema` instead. */
  export const inboundSchema = TooManyRequestsResponse$inboundSchema;
  /** @deprecated use `TooManyRequestsResponse$outboundSchema` instead. */
  export const outboundSchema = TooManyRequestsResponse$outboundSchema;
  /** @deprecated use `TooManyRequestsResponse$Outbound` instead. */
  export type Outbound = TooManyRequestsResponse$Outbound;
}
