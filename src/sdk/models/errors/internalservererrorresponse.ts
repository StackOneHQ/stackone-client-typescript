/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { StackOneError } from "./stackoneerror.js";

export type InternalServerErrorResponseData = {
  /**
   * Error message
   */
  message: string;
  /**
   * HTTP status code
   */
  statusCode: number;
  /**
   * Timestamp when the error occurred
   */
  timestamp: Date;
};

export class InternalServerErrorResponse extends StackOneError {
  /**
   * Timestamp when the error occurred
   */
  timestamp: Date;

  /** The original data that was passed to this error instance. */
  data$: InternalServerErrorResponseData;

  constructor(
    err: InternalServerErrorResponseData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.timestamp = err.timestamp;

    this.name = "InternalServerErrorResponse";
  }
}

/** @internal */
export const InternalServerErrorResponse$inboundSchema: z.ZodType<
  InternalServerErrorResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
  statusCode: z.number(),
  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new InternalServerErrorResponse(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type InternalServerErrorResponse$Outbound = {
  message: string;
  statusCode: number;
  timestamp: string;
};

/** @internal */
export const InternalServerErrorResponse$outboundSchema: z.ZodType<
  InternalServerErrorResponse$Outbound,
  z.ZodTypeDef,
  InternalServerErrorResponse
> = z.instanceof(InternalServerErrorResponse)
  .transform(v => v.data$)
  .pipe(z.object({
    message: z.string(),
    statusCode: z.number(),
    timestamp: z.date().transform(v => v.toISOString()),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InternalServerErrorResponse$ {
  /** @deprecated use `InternalServerErrorResponse$inboundSchema` instead. */
  export const inboundSchema = InternalServerErrorResponse$inboundSchema;
  /** @deprecated use `InternalServerErrorResponse$outboundSchema` instead. */
  export const outboundSchema = InternalServerErrorResponse$outboundSchema;
  /** @deprecated use `InternalServerErrorResponse$Outbound` instead. */
  export type Outbound = InternalServerErrorResponse$Outbound;
}
