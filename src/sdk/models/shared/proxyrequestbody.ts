/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { catchUnrecognizedEnum, OpenEnum, Unrecognized } from "../../types";
import * as z from "zod";

/**
 * The method of the request
 */
export enum Method {
    Get = "get",
    Post = "post",
    Put = "put",
    Delete = "delete",
    Patch = "patch",
}
/**
 * The method of the request
 */
export type MethodOpen = OpenEnum<typeof Method>;

export type ProxyRequestBody = {
    /**
     * The body of the request
     */
    body?: { [k: string]: any } | null | undefined;
    /**
     * The headers to send in the request
     */
    headers?: { [k: string]: any } | null | undefined;
    /**
     * The method of the request
     */
    method?: MethodOpen | null | undefined;
    /**
     * The path of the request including any query paramters
     */
    path?: string | null | undefined;
    /**
     * The base url of the request
     */
    url?: string | null | undefined;
};

/** @internal */
export namespace Method$ {
    export const inboundSchema: z.ZodType<MethodOpen, z.ZodTypeDef, unknown> = z.union([
        z.nativeEnum(Method),
        z.string().transform(catchUnrecognizedEnum),
    ]);

    export const outboundSchema = z.union([
        z.nativeEnum(Method),
        z.string().and(z.custom<Unrecognized<string>>()),
    ]);
}

/** @internal */
export namespace ProxyRequestBody$ {
    export const inboundSchema: z.ZodType<ProxyRequestBody, z.ZodTypeDef, unknown> = z.object({
        body: z.nullable(z.record(z.any())).optional(),
        headers: z.nullable(z.record(z.any())).optional(),
        method: z.nullable(Method$.inboundSchema.default(Method.Get)),
        path: z.nullable(z.string()).optional(),
        url: z.nullable(z.string()).optional(),
    });

    export type Outbound = {
        body?: { [k: string]: any } | null | undefined;
        headers?: { [k: string]: any } | null | undefined;
        method: string | null;
        path?: string | null | undefined;
        url?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ProxyRequestBody> = z.object({
        body: z.nullable(z.record(z.any())).optional(),
        headers: z.nullable(z.record(z.any())).optional(),
        method: z.nullable(Method$.outboundSchema.default(Method.Get)),
        path: z.nullable(z.string()).optional(),
        url: z.nullable(z.string()).optional(),
    });
}
