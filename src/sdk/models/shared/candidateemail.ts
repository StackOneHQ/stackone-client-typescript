/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type CandidateEmail = {
    /**
     * Type of the email
     */
    type: string;
    /**
     * Email value
     */
    value: string;
};

/** @internal */
export namespace CandidateEmail$ {
    export type Inbound = {
        type: string;
        value: string;
    };

    export const inboundSchema: z.ZodType<CandidateEmail, z.ZodTypeDef, Inbound> = z
        .object({
            type: z.string(),
            value: z.string(),
        })
        .transform((v) => {
            return {
                type: v.type,
                value: v.value,
            };
        });

    export type Outbound = {
        type: string;
        value: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CandidateEmail> = z
        .object({
            type: z.string(),
            value: z.string(),
        })
        .transform((v) => {
            return {
                type: v.type,
                value: v.value,
            };
        });
}
