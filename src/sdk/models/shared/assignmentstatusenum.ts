/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import { catchUnrecognizedEnum, OpenEnum, Unrecognized } from "../../types/enums.js";
import * as z from "zod";

export type AssignmentStatusEnum4 = {};

export type SourceValue = AssignmentStatusEnum4 | string | number | boolean | Array<any>;

export enum AssignmentStatusEnumValue {
    Pending = "pending",
    InProgress = "in_progress",
    Completed = "completed",
}
export type AssignmentStatusEnumValueOpen = OpenEnum<typeof AssignmentStatusEnumValue>;

export type AssignmentStatusEnum = {
    sourceValue?: AssignmentStatusEnum4 | string | number | boolean | Array<any> | null | undefined;
    value?: AssignmentStatusEnumValueOpen | null | undefined;
};

/** @internal */
export const AssignmentStatusEnum4$inboundSchema: z.ZodType<
    AssignmentStatusEnum4,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type AssignmentStatusEnum4$Outbound = {};

/** @internal */
export const AssignmentStatusEnum4$outboundSchema: z.ZodType<
    AssignmentStatusEnum4$Outbound,
    z.ZodTypeDef,
    AssignmentStatusEnum4
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AssignmentStatusEnum4$ {
    /** @deprecated use `AssignmentStatusEnum4$inboundSchema` instead. */
    export const inboundSchema = AssignmentStatusEnum4$inboundSchema;
    /** @deprecated use `AssignmentStatusEnum4$outboundSchema` instead. */
    export const outboundSchema = AssignmentStatusEnum4$outboundSchema;
    /** @deprecated use `AssignmentStatusEnum4$Outbound` instead. */
    export type Outbound = AssignmentStatusEnum4$Outbound;
}

/** @internal */
export const SourceValue$inboundSchema: z.ZodType<SourceValue, z.ZodTypeDef, unknown> = z.union([
    z.lazy(() => AssignmentStatusEnum4$inboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
]);

/** @internal */
export type SourceValue$Outbound =
    | AssignmentStatusEnum4$Outbound
    | string
    | number
    | boolean
    | Array<any>;

/** @internal */
export const SourceValue$outboundSchema: z.ZodType<
    SourceValue$Outbound,
    z.ZodTypeDef,
    SourceValue
> = z.union([
    z.lazy(() => AssignmentStatusEnum4$outboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SourceValue$ {
    /** @deprecated use `SourceValue$inboundSchema` instead. */
    export const inboundSchema = SourceValue$inboundSchema;
    /** @deprecated use `SourceValue$outboundSchema` instead. */
    export const outboundSchema = SourceValue$outboundSchema;
    /** @deprecated use `SourceValue$Outbound` instead. */
    export type Outbound = SourceValue$Outbound;
}

/** @internal */
export const AssignmentStatusEnumValue$inboundSchema: z.ZodType<
    AssignmentStatusEnumValueOpen,
    z.ZodTypeDef,
    unknown
> = z.union([z.nativeEnum(AssignmentStatusEnumValue), z.string().transform(catchUnrecognizedEnum)]);

/** @internal */
export const AssignmentStatusEnumValue$outboundSchema: z.ZodType<
    AssignmentStatusEnumValueOpen,
    z.ZodTypeDef,
    AssignmentStatusEnumValueOpen
> = z.union([
    z.nativeEnum(AssignmentStatusEnumValue),
    z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AssignmentStatusEnumValue$ {
    /** @deprecated use `AssignmentStatusEnumValue$inboundSchema` instead. */
    export const inboundSchema = AssignmentStatusEnumValue$inboundSchema;
    /** @deprecated use `AssignmentStatusEnumValue$outboundSchema` instead. */
    export const outboundSchema = AssignmentStatusEnumValue$outboundSchema;
}

/** @internal */
export const AssignmentStatusEnum$inboundSchema: z.ZodType<
    AssignmentStatusEnum,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        source_value: z
            .nullable(
                z.union([
                    z.lazy(() => AssignmentStatusEnum4$inboundSchema),
                    z.string(),
                    z.number(),
                    z.boolean(),
                    z.array(z.any()),
                ])
            )
            .optional(),
        value: z.nullable(AssignmentStatusEnumValue$inboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            source_value: "sourceValue",
        });
    });

/** @internal */
export type AssignmentStatusEnum$Outbound = {
    source_value?:
        | AssignmentStatusEnum4$Outbound
        | string
        | number
        | boolean
        | Array<any>
        | null
        | undefined;
    value?: string | null | undefined;
};

/** @internal */
export const AssignmentStatusEnum$outboundSchema: z.ZodType<
    AssignmentStatusEnum$Outbound,
    z.ZodTypeDef,
    AssignmentStatusEnum
> = z
    .object({
        sourceValue: z
            .nullable(
                z.union([
                    z.lazy(() => AssignmentStatusEnum4$outboundSchema),
                    z.string(),
                    z.number(),
                    z.boolean(),
                    z.array(z.any()),
                ])
            )
            .optional(),
        value: z.nullable(AssignmentStatusEnumValue$outboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            sourceValue: "source_value",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AssignmentStatusEnum$ {
    /** @deprecated use `AssignmentStatusEnum$inboundSchema` instead. */
    export const inboundSchema = AssignmentStatusEnum$inboundSchema;
    /** @deprecated use `AssignmentStatusEnum$outboundSchema` instead. */
    export const outboundSchema = AssignmentStatusEnum$outboundSchema;
    /** @deprecated use `AssignmentStatusEnum$Outbound` instead. */
    export type Outbound = AssignmentStatusEnum$Outbound;
}
