/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { Course, Course$inboundSchema, Course$Outbound, Course$outboundSchema } from "./course.js";
import {
    RawResponse,
    RawResponse$inboundSchema,
    RawResponse$Outbound,
    RawResponse$outboundSchema,
} from "./rawresponse.js";
import * as z from "zod";

export type CourseResult = {
    data: Course;
    raw?: Array<RawResponse> | null | undefined;
};

/** @internal */
export const CourseResult$inboundSchema: z.ZodType<CourseResult, z.ZodTypeDef, unknown> = z.object({
    data: Course$inboundSchema,
    raw: z.nullable(z.array(RawResponse$inboundSchema)).optional(),
});

/** @internal */
export type CourseResult$Outbound = {
    data: Course$Outbound;
    raw?: Array<RawResponse$Outbound> | null | undefined;
};

/** @internal */
export const CourseResult$outboundSchema: z.ZodType<
    CourseResult$Outbound,
    z.ZodTypeDef,
    CourseResult
> = z.object({
    data: Course$outboundSchema,
    raw: z.nullable(z.array(RawResponse$outboundSchema)).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CourseResult$ {
    /** @deprecated use `CourseResult$inboundSchema` instead. */
    export const inboundSchema = CourseResult$inboundSchema;
    /** @deprecated use `CourseResult$outboundSchema` instead. */
    export const outboundSchema = CourseResult$outboundSchema;
    /** @deprecated use `CourseResult$Outbound` instead. */
    export type Outbound = CourseResult$Outbound;
}
