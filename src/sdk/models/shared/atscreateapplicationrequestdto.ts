/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AtsDocumentsUploadRequestDto,
  AtsDocumentsUploadRequestDto$inboundSchema,
  AtsDocumentsUploadRequestDto$Outbound,
  AtsDocumentsUploadRequestDto$outboundSchema,
} from "./atsdocumentsuploadrequestdto.js";
import {
  CreateQuestionnaire,
  CreateQuestionnaire$inboundSchema,
  CreateQuestionnaire$Outbound,
  CreateQuestionnaire$outboundSchema,
} from "./createquestionnaire.js";
import {
  CustomFields,
  CustomFields$inboundSchema,
  CustomFields$Outbound,
  CustomFields$outboundSchema,
} from "./customfields.js";
import {
  PhoneNumber,
  PhoneNumber$inboundSchema,
  PhoneNumber$Outbound,
  PhoneNumber$outboundSchema,
} from "./phonenumber.js";
import {
  SocialLink,
  SocialLink$inboundSchema,
  SocialLink$Outbound,
  SocialLink$outboundSchema,
} from "./sociallink.js";

export type AtsCreateApplicationRequestDto4 = {};

/**
 * The source value of the application status.
 */
export type AtsCreateApplicationRequestDtoSourceValue =
  | AtsCreateApplicationRequestDto4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The status of the application.
 */
export enum AtsCreateApplicationRequestDtoValue {
  Active = "active",
  Assessment = "assessment",
  BackgroundCheck = "background_check",
  Converted = "converted",
  DeclinedByCandidate = "declined_by_candidate",
  Hired = "hired",
  Interview = "interview",
  Lead = "lead",
  Offer = "offer",
  ReferenceCheck = "reference_check",
  Rejected = "rejected",
  Review = "review",
  Screen = "screen",
  New = "new",
  Onboarding = "onboarding",
  Created = "created",
  Accepted = "accepted",
  ShortList = "short_list",
  Approved = "approved",
  UnmappedValue = "unmapped_value",
}
/**
 * The status of the application.
 */
export type AtsCreateApplicationRequestDtoValueOpen = OpenEnum<
  typeof AtsCreateApplicationRequestDtoValue
>;

export type AtsCreateApplicationRequestDtoApplicationStatus = {
  /**
   * The source value of the application status.
   */
  sourceValue?:
    | AtsCreateApplicationRequestDto4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The status of the application.
   */
  value?: AtsCreateApplicationRequestDtoValueOpen | null | undefined;
};

/**
 * Candidate Properties. Provide this OR candidate_id, but not both. Providing this attempts to create a new candidate with the application.
 */
export type AtsCreateApplicationRequestDtoCandidate = {
  /**
   * Candidate company
   */
  company?: string | null | undefined;
  /**
   * Candidate country
   */
  country?: string | null | undefined;
  /**
   * The candidate custom fields
   */
  customFields?: Array<CustomFields> | null | undefined;
  /**
   * Candidate email
   */
  email?: string | null | undefined;
  /**
   * Candidate first name
   */
  firstName?: string | null | undefined;
  /**
   * Candidate hired date
   */
  hiredAt?: Date | null | undefined;
  /**
   * Candidate last name
   */
  lastName?: string | null | undefined;
  /**
   * Candidate name
   */
  name?: string | null | undefined;
  /**
   * Value to pass through to the provider
   */
  passthrough?: { [k: string]: any } | null | undefined;
  /**
   * The candidate personal phone number
   *
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  phoneNumber?: string | null | undefined;
  /**
   * List of candidate phone numbers including the type of the number when available
   */
  phoneNumbers?: Array<PhoneNumber> | null | undefined;
  /**
   * List of candidate social links
   */
  socialLinks?: Array<SocialLink> | null | undefined;
  /**
   * Candidate title
   */
  title?: string | null | undefined;
  /**
   * Custom Unified Fields configured in your StackOne project
   */
  unifiedCustomFields?: { [k: string]: any } | null | undefined;
};

export type AtsCreateApplicationRequestDtoSource = {
  /**
   * Unique identifier
   */
  id?: string | null | undefined;
  /**
   * The source of the application
   */
  name?: string | null | undefined;
};

export type AtsCreateApplicationRequestDto = {
  applicationStatus?:
    | AtsCreateApplicationRequestDtoApplicationStatus
    | null
    | undefined;
  /**
   * Candidate Properties. Provide this OR candidate_id, but not both. Providing this attempts to create a new candidate with the application.
   */
  candidate?: AtsCreateApplicationRequestDtoCandidate | null | undefined;
  /**
   * Unique identifier of the candidate. Provide this OR candidate, but not both.
   */
  candidateId?: string | null | undefined;
  /**
   * Document Properties. Providing this attempts to upload files with the application.
   */
  documents?: Array<AtsDocumentsUploadRequestDto> | null | undefined;
  /**
   * Unique identifier of the job
   */
  jobId?: string | null | undefined;
  /**
   * Unique identifier of the job posting that is associated with application
   */
  jobPostingId?: string | null | undefined;
  /**
   * Unique identifier of the location
   */
  locationId?: string | null | undefined;
  /**
   * Value to pass through to the provider
   */
  passthrough?: { [k: string]: any } | null | undefined;
  /**
   * Questionnaires associated with the application
   */
  questionnaires?: Array<CreateQuestionnaire> | null | undefined;
  source?: AtsCreateApplicationRequestDtoSource | null | undefined;
};

/** @internal */
export const AtsCreateApplicationRequestDto4$inboundSchema: z.ZodType<
  AtsCreateApplicationRequestDto4,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type AtsCreateApplicationRequestDto4$Outbound = {};

/** @internal */
export const AtsCreateApplicationRequestDto4$outboundSchema: z.ZodType<
  AtsCreateApplicationRequestDto4$Outbound,
  z.ZodTypeDef,
  AtsCreateApplicationRequestDto4
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsCreateApplicationRequestDto4$ {
  /** @deprecated use `AtsCreateApplicationRequestDto4$inboundSchema` instead. */
  export const inboundSchema = AtsCreateApplicationRequestDto4$inboundSchema;
  /** @deprecated use `AtsCreateApplicationRequestDto4$outboundSchema` instead. */
  export const outboundSchema = AtsCreateApplicationRequestDto4$outboundSchema;
  /** @deprecated use `AtsCreateApplicationRequestDto4$Outbound` instead. */
  export type Outbound = AtsCreateApplicationRequestDto4$Outbound;
}

export function atsCreateApplicationRequestDto4ToJSON(
  atsCreateApplicationRequestDto4: AtsCreateApplicationRequestDto4,
): string {
  return JSON.stringify(
    AtsCreateApplicationRequestDto4$outboundSchema.parse(
      atsCreateApplicationRequestDto4,
    ),
  );
}

export function atsCreateApplicationRequestDto4FromJSON(
  jsonString: string,
): SafeParseResult<AtsCreateApplicationRequestDto4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AtsCreateApplicationRequestDto4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AtsCreateApplicationRequestDto4' from JSON`,
  );
}

/** @internal */
export const AtsCreateApplicationRequestDtoSourceValue$inboundSchema: z.ZodType<
  AtsCreateApplicationRequestDtoSourceValue,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => AtsCreateApplicationRequestDto4$inboundSchema),
  z.string(),
  z.number(),
  z.boolean(),
  z.array(z.any()),
]);

/** @internal */
export type AtsCreateApplicationRequestDtoSourceValue$Outbound =
  | AtsCreateApplicationRequestDto4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const AtsCreateApplicationRequestDtoSourceValue$outboundSchema:
  z.ZodType<
    AtsCreateApplicationRequestDtoSourceValue$Outbound,
    z.ZodTypeDef,
    AtsCreateApplicationRequestDtoSourceValue
  > = z.union([
    z.lazy(() => AtsCreateApplicationRequestDto4$outboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsCreateApplicationRequestDtoSourceValue$ {
  /** @deprecated use `AtsCreateApplicationRequestDtoSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    AtsCreateApplicationRequestDtoSourceValue$inboundSchema;
  /** @deprecated use `AtsCreateApplicationRequestDtoSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    AtsCreateApplicationRequestDtoSourceValue$outboundSchema;
  /** @deprecated use `AtsCreateApplicationRequestDtoSourceValue$Outbound` instead. */
  export type Outbound = AtsCreateApplicationRequestDtoSourceValue$Outbound;
}

export function atsCreateApplicationRequestDtoSourceValueToJSON(
  atsCreateApplicationRequestDtoSourceValue:
    AtsCreateApplicationRequestDtoSourceValue,
): string {
  return JSON.stringify(
    AtsCreateApplicationRequestDtoSourceValue$outboundSchema.parse(
      atsCreateApplicationRequestDtoSourceValue,
    ),
  );
}

export function atsCreateApplicationRequestDtoSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  AtsCreateApplicationRequestDtoSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AtsCreateApplicationRequestDtoSourceValue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AtsCreateApplicationRequestDtoSourceValue' from JSON`,
  );
}

/** @internal */
export const AtsCreateApplicationRequestDtoValue$inboundSchema: z.ZodType<
  AtsCreateApplicationRequestDtoValueOpen,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(AtsCreateApplicationRequestDtoValue),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const AtsCreateApplicationRequestDtoValue$outboundSchema: z.ZodType<
  AtsCreateApplicationRequestDtoValueOpen,
  z.ZodTypeDef,
  AtsCreateApplicationRequestDtoValueOpen
> = z.union([
  z.nativeEnum(AtsCreateApplicationRequestDtoValue),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsCreateApplicationRequestDtoValue$ {
  /** @deprecated use `AtsCreateApplicationRequestDtoValue$inboundSchema` instead. */
  export const inboundSchema =
    AtsCreateApplicationRequestDtoValue$inboundSchema;
  /** @deprecated use `AtsCreateApplicationRequestDtoValue$outboundSchema` instead. */
  export const outboundSchema =
    AtsCreateApplicationRequestDtoValue$outboundSchema;
}

/** @internal */
export const AtsCreateApplicationRequestDtoApplicationStatus$inboundSchema:
  z.ZodType<
    AtsCreateApplicationRequestDtoApplicationStatus,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source_value: z.nullable(
      z.union([
        z.lazy(() => AtsCreateApplicationRequestDto4$inboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(AtsCreateApplicationRequestDtoValue$inboundSchema)
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      "source_value": "sourceValue",
    });
  });

/** @internal */
export type AtsCreateApplicationRequestDtoApplicationStatus$Outbound = {
  source_value?:
    | AtsCreateApplicationRequestDto4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const AtsCreateApplicationRequestDtoApplicationStatus$outboundSchema:
  z.ZodType<
    AtsCreateApplicationRequestDtoApplicationStatus$Outbound,
    z.ZodTypeDef,
    AtsCreateApplicationRequestDtoApplicationStatus
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.lazy(() => AtsCreateApplicationRequestDto4$outboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(AtsCreateApplicationRequestDtoValue$outboundSchema)
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsCreateApplicationRequestDtoApplicationStatus$ {
  /** @deprecated use `AtsCreateApplicationRequestDtoApplicationStatus$inboundSchema` instead. */
  export const inboundSchema =
    AtsCreateApplicationRequestDtoApplicationStatus$inboundSchema;
  /** @deprecated use `AtsCreateApplicationRequestDtoApplicationStatus$outboundSchema` instead. */
  export const outboundSchema =
    AtsCreateApplicationRequestDtoApplicationStatus$outboundSchema;
  /** @deprecated use `AtsCreateApplicationRequestDtoApplicationStatus$Outbound` instead. */
  export type Outbound =
    AtsCreateApplicationRequestDtoApplicationStatus$Outbound;
}

export function atsCreateApplicationRequestDtoApplicationStatusToJSON(
  atsCreateApplicationRequestDtoApplicationStatus:
    AtsCreateApplicationRequestDtoApplicationStatus,
): string {
  return JSON.stringify(
    AtsCreateApplicationRequestDtoApplicationStatus$outboundSchema.parse(
      atsCreateApplicationRequestDtoApplicationStatus,
    ),
  );
}

export function atsCreateApplicationRequestDtoApplicationStatusFromJSON(
  jsonString: string,
): SafeParseResult<
  AtsCreateApplicationRequestDtoApplicationStatus,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AtsCreateApplicationRequestDtoApplicationStatus$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AtsCreateApplicationRequestDtoApplicationStatus' from JSON`,
  );
}

/** @internal */
export const AtsCreateApplicationRequestDtoCandidate$inboundSchema: z.ZodType<
  AtsCreateApplicationRequestDtoCandidate,
  z.ZodTypeDef,
  unknown
> = z.object({
  company: z.nullable(z.string()).optional(),
  country: z.nullable(z.string()).optional(),
  custom_fields: z.nullable(z.array(CustomFields$inboundSchema)).optional(),
  email: z.nullable(z.string()).optional(),
  first_name: z.nullable(z.string()).optional(),
  hired_at: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  last_name: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  phone_number: z.nullable(z.string()).optional(),
  phone_numbers: z.nullable(z.array(PhoneNumber$inboundSchema)).optional(),
  social_links: z.nullable(z.array(SocialLink$inboundSchema)).optional(),
  title: z.nullable(z.string()).optional(),
  unified_custom_fields: z.nullable(z.record(z.any())).optional(),
}).transform((v) => {
  return remap$(v, {
    "custom_fields": "customFields",
    "first_name": "firstName",
    "hired_at": "hiredAt",
    "last_name": "lastName",
    "phone_number": "phoneNumber",
    "phone_numbers": "phoneNumbers",
    "social_links": "socialLinks",
    "unified_custom_fields": "unifiedCustomFields",
  });
});

/** @internal */
export type AtsCreateApplicationRequestDtoCandidate$Outbound = {
  company?: string | null | undefined;
  country?: string | null | undefined;
  custom_fields?: Array<CustomFields$Outbound> | null | undefined;
  email?: string | null | undefined;
  first_name?: string | null | undefined;
  hired_at?: string | null | undefined;
  last_name?: string | null | undefined;
  name?: string | null | undefined;
  passthrough?: { [k: string]: any } | null | undefined;
  phone_number?: string | null | undefined;
  phone_numbers?: Array<PhoneNumber$Outbound> | null | undefined;
  social_links?: Array<SocialLink$Outbound> | null | undefined;
  title?: string | null | undefined;
  unified_custom_fields?: { [k: string]: any } | null | undefined;
};

/** @internal */
export const AtsCreateApplicationRequestDtoCandidate$outboundSchema: z.ZodType<
  AtsCreateApplicationRequestDtoCandidate$Outbound,
  z.ZodTypeDef,
  AtsCreateApplicationRequestDtoCandidate
> = z.object({
  company: z.nullable(z.string()).optional(),
  country: z.nullable(z.string()).optional(),
  customFields: z.nullable(z.array(CustomFields$outboundSchema)).optional(),
  email: z.nullable(z.string()).optional(),
  firstName: z.nullable(z.string()).optional(),
  hiredAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  lastName: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  phoneNumber: z.nullable(z.string()).optional(),
  phoneNumbers: z.nullable(z.array(PhoneNumber$outboundSchema)).optional(),
  socialLinks: z.nullable(z.array(SocialLink$outboundSchema)).optional(),
  title: z.nullable(z.string()).optional(),
  unifiedCustomFields: z.nullable(z.record(z.any())).optional(),
}).transform((v) => {
  return remap$(v, {
    customFields: "custom_fields",
    firstName: "first_name",
    hiredAt: "hired_at",
    lastName: "last_name",
    phoneNumber: "phone_number",
    phoneNumbers: "phone_numbers",
    socialLinks: "social_links",
    unifiedCustomFields: "unified_custom_fields",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsCreateApplicationRequestDtoCandidate$ {
  /** @deprecated use `AtsCreateApplicationRequestDtoCandidate$inboundSchema` instead. */
  export const inboundSchema =
    AtsCreateApplicationRequestDtoCandidate$inboundSchema;
  /** @deprecated use `AtsCreateApplicationRequestDtoCandidate$outboundSchema` instead. */
  export const outboundSchema =
    AtsCreateApplicationRequestDtoCandidate$outboundSchema;
  /** @deprecated use `AtsCreateApplicationRequestDtoCandidate$Outbound` instead. */
  export type Outbound = AtsCreateApplicationRequestDtoCandidate$Outbound;
}

export function atsCreateApplicationRequestDtoCandidateToJSON(
  atsCreateApplicationRequestDtoCandidate:
    AtsCreateApplicationRequestDtoCandidate,
): string {
  return JSON.stringify(
    AtsCreateApplicationRequestDtoCandidate$outboundSchema.parse(
      atsCreateApplicationRequestDtoCandidate,
    ),
  );
}

export function atsCreateApplicationRequestDtoCandidateFromJSON(
  jsonString: string,
): SafeParseResult<
  AtsCreateApplicationRequestDtoCandidate,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AtsCreateApplicationRequestDtoCandidate$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AtsCreateApplicationRequestDtoCandidate' from JSON`,
  );
}

/** @internal */
export const AtsCreateApplicationRequestDtoSource$inboundSchema: z.ZodType<
  AtsCreateApplicationRequestDtoSource,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
});

/** @internal */
export type AtsCreateApplicationRequestDtoSource$Outbound = {
  id?: string | null | undefined;
  name?: string | null | undefined;
};

/** @internal */
export const AtsCreateApplicationRequestDtoSource$outboundSchema: z.ZodType<
  AtsCreateApplicationRequestDtoSource$Outbound,
  z.ZodTypeDef,
  AtsCreateApplicationRequestDtoSource
> = z.object({
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsCreateApplicationRequestDtoSource$ {
  /** @deprecated use `AtsCreateApplicationRequestDtoSource$inboundSchema` instead. */
  export const inboundSchema =
    AtsCreateApplicationRequestDtoSource$inboundSchema;
  /** @deprecated use `AtsCreateApplicationRequestDtoSource$outboundSchema` instead. */
  export const outboundSchema =
    AtsCreateApplicationRequestDtoSource$outboundSchema;
  /** @deprecated use `AtsCreateApplicationRequestDtoSource$Outbound` instead. */
  export type Outbound = AtsCreateApplicationRequestDtoSource$Outbound;
}

export function atsCreateApplicationRequestDtoSourceToJSON(
  atsCreateApplicationRequestDtoSource: AtsCreateApplicationRequestDtoSource,
): string {
  return JSON.stringify(
    AtsCreateApplicationRequestDtoSource$outboundSchema.parse(
      atsCreateApplicationRequestDtoSource,
    ),
  );
}

export function atsCreateApplicationRequestDtoSourceFromJSON(
  jsonString: string,
): SafeParseResult<AtsCreateApplicationRequestDtoSource, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      AtsCreateApplicationRequestDtoSource$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AtsCreateApplicationRequestDtoSource' from JSON`,
  );
}

/** @internal */
export const AtsCreateApplicationRequestDto$inboundSchema: z.ZodType<
  AtsCreateApplicationRequestDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  application_status: z.nullable(
    z.lazy(() => AtsCreateApplicationRequestDtoApplicationStatus$inboundSchema),
  ).optional(),
  candidate: z.nullable(
    z.lazy(() => AtsCreateApplicationRequestDtoCandidate$inboundSchema),
  ).optional(),
  candidate_id: z.nullable(z.string()).optional(),
  documents: z.nullable(z.array(AtsDocumentsUploadRequestDto$inboundSchema))
    .optional(),
  job_id: z.nullable(z.string()).optional(),
  job_posting_id: z.nullable(z.string()).optional(),
  location_id: z.nullable(z.string()).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  questionnaires: z.nullable(z.array(CreateQuestionnaire$inboundSchema))
    .optional(),
  source: z.nullable(
    z.lazy(() => AtsCreateApplicationRequestDtoSource$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "application_status": "applicationStatus",
    "candidate_id": "candidateId",
    "job_id": "jobId",
    "job_posting_id": "jobPostingId",
    "location_id": "locationId",
  });
});

/** @internal */
export type AtsCreateApplicationRequestDto$Outbound = {
  application_status?:
    | AtsCreateApplicationRequestDtoApplicationStatus$Outbound
    | null
    | undefined;
  candidate?:
    | AtsCreateApplicationRequestDtoCandidate$Outbound
    | null
    | undefined;
  candidate_id?: string | null | undefined;
  documents?: Array<AtsDocumentsUploadRequestDto$Outbound> | null | undefined;
  job_id?: string | null | undefined;
  job_posting_id?: string | null | undefined;
  location_id?: string | null | undefined;
  passthrough?: { [k: string]: any } | null | undefined;
  questionnaires?: Array<CreateQuestionnaire$Outbound> | null | undefined;
  source?: AtsCreateApplicationRequestDtoSource$Outbound | null | undefined;
};

/** @internal */
export const AtsCreateApplicationRequestDto$outboundSchema: z.ZodType<
  AtsCreateApplicationRequestDto$Outbound,
  z.ZodTypeDef,
  AtsCreateApplicationRequestDto
> = z.object({
  applicationStatus: z.nullable(
    z.lazy(() =>
      AtsCreateApplicationRequestDtoApplicationStatus$outboundSchema
    ),
  ).optional(),
  candidate: z.nullable(
    z.lazy(() => AtsCreateApplicationRequestDtoCandidate$outboundSchema),
  ).optional(),
  candidateId: z.nullable(z.string()).optional(),
  documents: z.nullable(z.array(AtsDocumentsUploadRequestDto$outboundSchema))
    .optional(),
  jobId: z.nullable(z.string()).optional(),
  jobPostingId: z.nullable(z.string()).optional(),
  locationId: z.nullable(z.string()).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  questionnaires: z.nullable(z.array(CreateQuestionnaire$outboundSchema))
    .optional(),
  source: z.nullable(
    z.lazy(() => AtsCreateApplicationRequestDtoSource$outboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    applicationStatus: "application_status",
    candidateId: "candidate_id",
    jobId: "job_id",
    jobPostingId: "job_posting_id",
    locationId: "location_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsCreateApplicationRequestDto$ {
  /** @deprecated use `AtsCreateApplicationRequestDto$inboundSchema` instead. */
  export const inboundSchema = AtsCreateApplicationRequestDto$inboundSchema;
  /** @deprecated use `AtsCreateApplicationRequestDto$outboundSchema` instead. */
  export const outboundSchema = AtsCreateApplicationRequestDto$outboundSchema;
  /** @deprecated use `AtsCreateApplicationRequestDto$Outbound` instead. */
  export type Outbound = AtsCreateApplicationRequestDto$Outbound;
}

export function atsCreateApplicationRequestDtoToJSON(
  atsCreateApplicationRequestDto: AtsCreateApplicationRequestDto,
): string {
  return JSON.stringify(
    AtsCreateApplicationRequestDto$outboundSchema.parse(
      atsCreateApplicationRequestDto,
    ),
  );
}

export function atsCreateApplicationRequestDtoFromJSON(
  jsonString: string,
): SafeParseResult<AtsCreateApplicationRequestDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AtsCreateApplicationRequestDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AtsCreateApplicationRequestDto' from JSON`,
  );
}
