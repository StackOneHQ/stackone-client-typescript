/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { AttachmentContentType, AttachmentContentType$ } from "./attachmentcontenttype";
import { AttachmentType, AttachmentType$ } from "./attachmenttype";
import { z } from "zod";

export type ApplicationAttachment = {
    /**
     * The content of the attachment.
     */
    content?: string | undefined;
    contentType?: AttachmentContentType | undefined;
    /**
     * The file name of the attachment.
     */
    fileName?: string | undefined;
    type?: Array<AttachmentType> | undefined;
    /**
     * The URL of the attachment.
     */
    url?: string | undefined;
};

/** @internal */
export namespace ApplicationAttachment$ {
    export type Inbound = {
        content?: string | undefined;
        content_type?: AttachmentContentType$.Inbound | undefined;
        file_name?: string | undefined;
        type?: Array<AttachmentType$.Inbound> | undefined;
        url?: string | undefined;
    };

    export const inboundSchema: z.ZodType<ApplicationAttachment, z.ZodTypeDef, Inbound> = z
        .object({
            content: z.string().optional(),
            content_type: AttachmentContentType$.inboundSchema.optional(),
            file_name: z.string().optional(),
            type: z.array(AttachmentType$.inboundSchema).optional(),
            url: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.content_type === undefined ? null : { contentType: v.content_type }),
                ...(v.file_name === undefined ? null : { fileName: v.file_name }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.url === undefined ? null : { url: v.url }),
            };
        });

    export type Outbound = {
        content?: string | undefined;
        content_type?: AttachmentContentType$.Outbound | undefined;
        file_name?: string | undefined;
        type?: Array<AttachmentType$.Outbound> | undefined;
        url?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ApplicationAttachment> = z
        .object({
            content: z.string().optional(),
            contentType: AttachmentContentType$.outboundSchema.optional(),
            fileName: z.string().optional(),
            type: z.array(AttachmentType$.outboundSchema).optional(),
            url: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.contentType === undefined ? null : { content_type: v.contentType }),
                ...(v.fileName === undefined ? null : { file_name: v.fileName }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.url === undefined ? null : { url: v.url }),
            };
        });
}
