/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { CreateResultDataApiModel, CreateResultDataApiModel$ } from "./createresultdataapimodel.js";
import * as z from "zod";

export type CreateResult = {
    data: CreateResultDataApiModel;
    message: string;
    statusCode: number;
    timestamp: Date;
};

/** @internal */
export namespace CreateResult$ {
    export const inboundSchema: z.ZodType<CreateResult, z.ZodTypeDef, unknown> = z.object({
        data: CreateResultDataApiModel$.inboundSchema,
        message: z.string(),
        statusCode: z.number(),
        timestamp: z
            .string()
            .datetime({ offset: true })
            .transform((v) => new Date(v)),
    });

    export type Outbound = {
        data: CreateResultDataApiModel$.Outbound;
        message: string;
        statusCode: number;
        timestamp: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateResult> = z.object({
        data: CreateResultDataApiModel$.outboundSchema,
        message: z.string(),
        statusCode: z.number(),
        timestamp: z.date().transform((v) => v.toISOString()),
    });
}
