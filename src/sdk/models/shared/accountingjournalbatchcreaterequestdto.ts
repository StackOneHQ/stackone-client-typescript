/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AccountingJournalCreateRequestDto,
  AccountingJournalCreateRequestDto$inboundSchema,
  AccountingJournalCreateRequestDto$Outbound,
  AccountingJournalCreateRequestDto$outboundSchema,
} from "./accountingjournalcreaterequestdto.js";

export type AccountingJournalBatchCreateRequestDto = {
  /**
   * The batch of journals to create
   */
  items: Array<AccountingJournalCreateRequestDto>;
};

/** @internal */
export const AccountingJournalBatchCreateRequestDto$inboundSchema: z.ZodType<
  AccountingJournalBatchCreateRequestDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  items: z.array(AccountingJournalCreateRequestDto$inboundSchema),
});

/** @internal */
export type AccountingJournalBatchCreateRequestDto$Outbound = {
  items: Array<AccountingJournalCreateRequestDto$Outbound>;
};

/** @internal */
export const AccountingJournalBatchCreateRequestDto$outboundSchema: z.ZodType<
  AccountingJournalBatchCreateRequestDto$Outbound,
  z.ZodTypeDef,
  AccountingJournalBatchCreateRequestDto
> = z.object({
  items: z.array(AccountingJournalCreateRequestDto$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingJournalBatchCreateRequestDto$ {
  /** @deprecated use `AccountingJournalBatchCreateRequestDto$inboundSchema` instead. */
  export const inboundSchema =
    AccountingJournalBatchCreateRequestDto$inboundSchema;
  /** @deprecated use `AccountingJournalBatchCreateRequestDto$outboundSchema` instead. */
  export const outboundSchema =
    AccountingJournalBatchCreateRequestDto$outboundSchema;
  /** @deprecated use `AccountingJournalBatchCreateRequestDto$Outbound` instead. */
  export type Outbound = AccountingJournalBatchCreateRequestDto$Outbound;
}

export function accountingJournalBatchCreateRequestDtoToJSON(
  accountingJournalBatchCreateRequestDto:
    AccountingJournalBatchCreateRequestDto,
): string {
  return JSON.stringify(
    AccountingJournalBatchCreateRequestDto$outboundSchema.parse(
      accountingJournalBatchCreateRequestDto,
    ),
  );
}

export function accountingJournalBatchCreateRequestDtoFromJSON(
  jsonString: string,
): SafeParseResult<AccountingJournalBatchCreateRequestDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      AccountingJournalBatchCreateRequestDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AccountingJournalBatchCreateRequestDto' from JSON`,
  );
}
