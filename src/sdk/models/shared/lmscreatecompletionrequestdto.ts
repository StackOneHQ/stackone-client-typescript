/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives";
import { catchUnrecognizedEnum, OpenEnum, Unrecognized } from "../../types";
import * as z from "zod";

export type LmsCreateCompletionRequestDto4 = {};

export type LmsCreateCompletionRequestDtoSourceValue =
    | LmsCreateCompletionRequestDto4
    | string
    | number
    | boolean;

export enum LmsCreateCompletionRequestDtoValue {
    Pass = "pass",
    Fail = "fail",
}
export type LmsCreateCompletionRequestDtoValueOpen = OpenEnum<
    typeof LmsCreateCompletionRequestDtoValue
>;

/**
 * The result of the completion
 */
export type LmsCreateCompletionRequestDtoResult = {
    sourceValue?: LmsCreateCompletionRequestDto4 | string | number | boolean | null | undefined;
    value?: LmsCreateCompletionRequestDtoValueOpen | null | undefined;
};

/**
 * The user associated with this completion
 */
export type LmsCreateCompletionRequestDtoUser = {
    /**
     * The date the user was created
     */
    createdAt?: string | null | undefined;
    /**
     * The email of the user
     */
    email?: string | null | undefined;
    /**
     * The user ID
     */
    id?: string | null | undefined;
    /**
     * The name of the user
     */
    name?: string | null | undefined;
    /**
     * The phone number of the user
     */
    phoneNumber?: string | null | undefined;
    /**
     * Provider's unique identifier
     */
    remoteId?: string | null | undefined;
    /**
     * The date the user was last updated
     */
    updatedAt?: string | null | undefined;
};

export type LmsCreateCompletionRequestDto = {
    /**
     * The date the content was completed
     */
    completedAt?: string | null | undefined;
    /**
     * The content ID associated with this completion
     */
    contentId?: string | null | undefined;
    /**
     * The comma separated list of fields that will be expanded in the response
     */
    expand?: string | null | undefined;
    /**
     * The external ID associated with this completion
     */
    externalId?: string | null | undefined;
    /**
     * Value to pass through to the provider
     */
    passthrough?: { [k: string]: any } | null | undefined;
    /**
     * The result of the completion
     */
    result?: LmsCreateCompletionRequestDtoResult | null | undefined;
    /**
     * The user associated with this completion
     */
    user?: LmsCreateCompletionRequestDtoUser | null | undefined;
    /**
     * The user ID associated with this completion
     */
    userId?: string | null | undefined;
};

/** @internal */
export namespace LmsCreateCompletionRequestDto4$ {
    export const inboundSchema: z.ZodType<LmsCreateCompletionRequestDto4, z.ZodTypeDef, unknown> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, LmsCreateCompletionRequestDto4> =
        z.object({});
}

/** @internal */
export namespace LmsCreateCompletionRequestDtoSourceValue$ {
    export const inboundSchema: z.ZodType<
        LmsCreateCompletionRequestDtoSourceValue,
        z.ZodTypeDef,
        unknown
    > = z.union([
        z.lazy(() => LmsCreateCompletionRequestDto4$.inboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
    ]);

    export type Outbound = LmsCreateCompletionRequestDto4$.Outbound | string | number | boolean;
    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        LmsCreateCompletionRequestDtoSourceValue
    > = z.union([
        z.lazy(() => LmsCreateCompletionRequestDto4$.outboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
    ]);
}

/** @internal */
export namespace LmsCreateCompletionRequestDtoValue$ {
    export const inboundSchema: z.ZodType<
        LmsCreateCompletionRequestDtoValueOpen,
        z.ZodTypeDef,
        unknown
    > = z.union([
        z.nativeEnum(LmsCreateCompletionRequestDtoValue),
        z.string().transform(catchUnrecognizedEnum),
    ]);

    export const outboundSchema = z.union([
        z.nativeEnum(LmsCreateCompletionRequestDtoValue),
        z.string().and(z.custom<Unrecognized<string>>()),
    ]);
}

/** @internal */
export namespace LmsCreateCompletionRequestDtoResult$ {
    export const inboundSchema: z.ZodType<
        LmsCreateCompletionRequestDtoResult,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            source_value: z
                .nullable(
                    z.union([
                        z.lazy(() => LmsCreateCompletionRequestDto4$.inboundSchema),
                        z.string(),
                        z.number(),
                        z.boolean(),
                    ])
                )
                .optional(),
            value: z.nullable(LmsCreateCompletionRequestDtoValue$.inboundSchema).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                source_value: "sourceValue",
            });
        });

    export type Outbound = {
        source_value?:
            | LmsCreateCompletionRequestDto4$.Outbound
            | string
            | number
            | boolean
            | null
            | undefined;
        value?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        LmsCreateCompletionRequestDtoResult
    > = z
        .object({
            sourceValue: z
                .nullable(
                    z.union([
                        z.lazy(() => LmsCreateCompletionRequestDto4$.outboundSchema),
                        z.string(),
                        z.number(),
                        z.boolean(),
                    ])
                )
                .optional(),
            value: z.nullable(LmsCreateCompletionRequestDtoValue$.outboundSchema).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                sourceValue: "source_value",
            });
        });
}

/** @internal */
export namespace LmsCreateCompletionRequestDtoUser$ {
    export const inboundSchema: z.ZodType<
        LmsCreateCompletionRequestDtoUser,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            created_at: z.nullable(z.string()).optional(),
            email: z.nullable(z.string()).optional(),
            id: z.nullable(z.string()).optional(),
            name: z.nullable(z.string()).optional(),
            phone_number: z.nullable(z.string()).optional(),
            remote_id: z.nullable(z.string()).optional(),
            updated_at: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                created_at: "createdAt",
                phone_number: "phoneNumber",
                remote_id: "remoteId",
                updated_at: "updatedAt",
            });
        });

    export type Outbound = {
        created_at?: string | null | undefined;
        email?: string | null | undefined;
        id?: string | null | undefined;
        name?: string | null | undefined;
        phone_number?: string | null | undefined;
        remote_id?: string | null | undefined;
        updated_at?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        LmsCreateCompletionRequestDtoUser
    > = z
        .object({
            createdAt: z.nullable(z.string()).optional(),
            email: z.nullable(z.string()).optional(),
            id: z.nullable(z.string()).optional(),
            name: z.nullable(z.string()).optional(),
            phoneNumber: z.nullable(z.string()).optional(),
            remoteId: z.nullable(z.string()).optional(),
            updatedAt: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                createdAt: "created_at",
                phoneNumber: "phone_number",
                remoteId: "remote_id",
                updatedAt: "updated_at",
            });
        });
}

/** @internal */
export namespace LmsCreateCompletionRequestDto$ {
    export const inboundSchema: z.ZodType<LmsCreateCompletionRequestDto, z.ZodTypeDef, unknown> = z
        .object({
            completed_at: z.nullable(z.string()).optional(),
            content_id: z.nullable(z.string()).optional(),
            expand: z.nullable(z.string()).optional(),
            external_id: z.nullable(z.string()).optional(),
            passthrough: z.nullable(z.record(z.any())).optional(),
            result: z
                .nullable(z.lazy(() => LmsCreateCompletionRequestDtoResult$.inboundSchema))
                .optional(),
            user: z
                .nullable(z.lazy(() => LmsCreateCompletionRequestDtoUser$.inboundSchema))
                .optional(),
            user_id: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                completed_at: "completedAt",
                content_id: "contentId",
                external_id: "externalId",
                user_id: "userId",
            });
        });

    export type Outbound = {
        completed_at?: string | null | undefined;
        content_id?: string | null | undefined;
        expand?: string | null | undefined;
        external_id?: string | null | undefined;
        passthrough?: { [k: string]: any } | null | undefined;
        result?: LmsCreateCompletionRequestDtoResult$.Outbound | null | undefined;
        user?: LmsCreateCompletionRequestDtoUser$.Outbound | null | undefined;
        user_id?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, LmsCreateCompletionRequestDto> =
        z
            .object({
                completedAt: z.nullable(z.string()).optional(),
                contentId: z.nullable(z.string()).optional(),
                expand: z.nullable(z.string()).optional(),
                externalId: z.nullable(z.string()).optional(),
                passthrough: z.nullable(z.record(z.any())).optional(),
                result: z
                    .nullable(z.lazy(() => LmsCreateCompletionRequestDtoResult$.outboundSchema))
                    .optional(),
                user: z
                    .nullable(z.lazy(() => LmsCreateCompletionRequestDtoUser$.outboundSchema))
                    .optional(),
                userId: z.nullable(z.string()).optional(),
            })
            .transform((v) => {
                return remap$(v, {
                    completedAt: "completed_at",
                    contentId: "content_id",
                    externalId: "external_id",
                    userId: "user_id",
                });
            });
}
