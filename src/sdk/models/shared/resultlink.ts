/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type ResultLink = {
    /**
     * The label of the result link.
     */
    label?: string | null | undefined;
    /**
     * The URL of the result link.
     */
    url: string;
};

/** @internal */
export namespace ResultLink$ {
    export type Inbound = {
        label?: string | null | undefined;
        url: string;
    };

    export const inboundSchema: z.ZodType<ResultLink, z.ZodTypeDef, Inbound> = z
        .object({
            label: z.nullable(z.string()).optional(),
            url: z.string(),
        })
        .transform((v) => {
            return {
                ...(v.label === undefined ? null : { label: v.label }),
                url: v.url,
            };
        });

    export type Outbound = {
        label?: string | null | undefined;
        url: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ResultLink> = z
        .object({
            label: z.nullable(z.string()).optional(),
            url: z.string(),
        })
        .transform((v) => {
            return {
                ...(v.label === undefined ? null : { label: v.label }),
                url: v.url,
            };
        });
}
