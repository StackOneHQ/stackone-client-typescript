/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ResultLink = {
  /**
   * The label of the result link.
   */
  label?: string | null | undefined;
  /**
   * The URL of the result link.
   */
  url?: string | null | undefined;
};

/** @internal */
export const ResultLink$inboundSchema: z.ZodType<
  ResultLink,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.nullable(z.string()).optional(),
  url: z.nullable(z.string()).optional(),
});

/** @internal */
export type ResultLink$Outbound = {
  label?: string | null | undefined;
  url?: string | null | undefined;
};

/** @internal */
export const ResultLink$outboundSchema: z.ZodType<
  ResultLink$Outbound,
  z.ZodTypeDef,
  ResultLink
> = z.object({
  label: z.nullable(z.string()).optional(),
  url: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResultLink$ {
  /** @deprecated use `ResultLink$inboundSchema` instead. */
  export const inboundSchema = ResultLink$inboundSchema;
  /** @deprecated use `ResultLink$outboundSchema` instead. */
  export const outboundSchema = ResultLink$outboundSchema;
  /** @deprecated use `ResultLink$Outbound` instead. */
  export type Outbound = ResultLink$Outbound;
}

export function resultLinkToJSON(resultLink: ResultLink): string {
  return JSON.stringify(ResultLink$outboundSchema.parse(resultLink));
}

export function resultLinkFromJSON(
  jsonString: string,
): SafeParseResult<ResultLink, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResultLink$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResultLink' from JSON`,
  );
}
