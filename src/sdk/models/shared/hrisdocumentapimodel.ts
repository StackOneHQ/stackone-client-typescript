/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Content, Content$ } from "./content";
import * as z from "zod";

export type HrisDocumentApiModel4 = {};

export type HrisDocumentApiModelSourceValue = HrisDocumentApiModel4 | string | number | boolean;

/**
 * The category of the file
 */
export enum HrisDocumentApiModelValue {
    Application = "application",
    Academic = "academic",
    Contract = "contract",
    Certificates = "certificates",
    Visa = "visa",
    Passport = "passport",
    DriverLicense = "driver_license",
    Payslip = "payslip",
    Payroll = "payroll",
    Appraisal = "appraisal",
    Resume = "resume",
    Policy = "policy",
    OfferLetter = "offer_letter",
    PolicyAgreement = "policy_agreement",
    HomeAddress = "home_address",
    NationalId = "national_id",
    Confidential = "confidential",
    Signed = "signed",
    Shared = "shared",
    Other = "other",
    Benefit = "benefit",
    IdVerification = "id_verification",
    UnmappedValue = "unmapped_value",
}

/**
 * The category of the the document
 */
export type HrisDocumentApiModelCategory = {
    sourceValue?: HrisDocumentApiModel4 | string | number | boolean | null | undefined;
    /**
     * The category of the file
     */
    value?: HrisDocumentApiModelValue | null | undefined;
};

export type HrisDocumentApiModelSchemas4 = {};

export type HrisDocumentApiModelSchemasSourceValue =
    | HrisDocumentApiModelSchemas4
    | string
    | number
    | boolean;

/**
 * The category of the file
 */
export enum HrisDocumentApiModelSchemasValue {
    Application = "application",
    Academic = "academic",
    Contract = "contract",
    Certificates = "certificates",
    Visa = "visa",
    Passport = "passport",
    DriverLicense = "driver_license",
    Payslip = "payslip",
    Payroll = "payroll",
    Appraisal = "appraisal",
    Resume = "resume",
    Policy = "policy",
    OfferLetter = "offer_letter",
    PolicyAgreement = "policy_agreement",
    HomeAddress = "home_address",
    NationalId = "national_id",
    Confidential = "confidential",
    Signed = "signed",
    Shared = "shared",
    Other = "other",
    Benefit = "benefit",
    IdVerification = "id_verification",
    UnmappedValue = "unmapped_value",
}

/**
 * The content type of the document
 *
 * @deprecated class: This will be removed in a future release, please migrate away from it as soon as possible.
 */
export type HrisDocumentApiModelType = {
    sourceValue?: HrisDocumentApiModelSchemas4 | string | number | boolean | null | undefined;
    /**
     * The category of the file
     */
    value?: HrisDocumentApiModelSchemasValue | null | undefined;
};

export type HrisDocumentApiModel = {
    /**
     * The category of the the document
     */
    category?: HrisDocumentApiModelCategory | null | undefined;
    /**
     * The content of the file
     */
    contents?: Array<Content> | null | undefined;
    /**
     * The creation date of the file
     */
    createdAt?: Date | null | undefined;
    /**
     * Unique identifier
     */
    id?: string | null | undefined;
    /**
     * The name of the file
     */
    name?: string | null | undefined;
    /**
     * The path where the file is stored
     */
    path?: string | null | undefined;
    /**
     * Provider's unique identifier
     */
    remoteId?: string | null | undefined;
    /**
     * The content type of the document
     *
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    type?: HrisDocumentApiModelType | null | undefined;
    /**
     * The update date of the file
     */
    updatedAt?: Date | null | undefined;
};

/** @internal */
export namespace HrisDocumentApiModel4$ {
    export const inboundSchema: z.ZodType<HrisDocumentApiModel4, z.ZodTypeDef, unknown> = z.object(
        {}
    );

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, HrisDocumentApiModel4> =
        z.object({});
}

/** @internal */
export namespace HrisDocumentApiModelSourceValue$ {
    export const inboundSchema: z.ZodType<HrisDocumentApiModelSourceValue, z.ZodTypeDef, unknown> =
        z.union([
            z.lazy(() => HrisDocumentApiModel4$.inboundSchema),
            z.string(),
            z.number(),
            z.boolean(),
        ]);

    export type Outbound = HrisDocumentApiModel4$.Outbound | string | number | boolean;
    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        HrisDocumentApiModelSourceValue
    > = z.union([
        z.lazy(() => HrisDocumentApiModel4$.outboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
    ]);
}

/** @internal */
export namespace HrisDocumentApiModelValue$ {
    export const inboundSchema = z.nativeEnum(HrisDocumentApiModelValue);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace HrisDocumentApiModelCategory$ {
    export const inboundSchema: z.ZodType<HrisDocumentApiModelCategory, z.ZodTypeDef, unknown> = z
        .object({
            source_value: z
                .nullable(
                    z.union([
                        z.lazy(() => HrisDocumentApiModel4$.inboundSchema),
                        z.string(),
                        z.number(),
                        z.boolean(),
                    ])
                )
                .optional(),
            value: z.nullable(HrisDocumentApiModelValue$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.source_value === undefined ? null : { sourceValue: v.source_value }),
                ...(v.value === undefined ? null : { value: v.value }),
            };
        });

    export type Outbound = {
        source_value?:
            | HrisDocumentApiModel4$.Outbound
            | string
            | number
            | boolean
            | null
            | undefined;
        value?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, HrisDocumentApiModelCategory> = z
        .object({
            sourceValue: z
                .nullable(
                    z.union([
                        z.lazy(() => HrisDocumentApiModel4$.outboundSchema),
                        z.string(),
                        z.number(),
                        z.boolean(),
                    ])
                )
                .optional(),
            value: z.nullable(HrisDocumentApiModelValue$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.sourceValue === undefined ? null : { source_value: v.sourceValue }),
                ...(v.value === undefined ? null : { value: v.value }),
            };
        });
}

/** @internal */
export namespace HrisDocumentApiModelSchemas4$ {
    export const inboundSchema: z.ZodType<HrisDocumentApiModelSchemas4, z.ZodTypeDef, unknown> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, HrisDocumentApiModelSchemas4> =
        z.object({});
}

/** @internal */
export namespace HrisDocumentApiModelSchemasSourceValue$ {
    export const inboundSchema: z.ZodType<
        HrisDocumentApiModelSchemasSourceValue,
        z.ZodTypeDef,
        unknown
    > = z.union([
        z.lazy(() => HrisDocumentApiModelSchemas4$.inboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
    ]);

    export type Outbound = HrisDocumentApiModelSchemas4$.Outbound | string | number | boolean;
    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        HrisDocumentApiModelSchemasSourceValue
    > = z.union([
        z.lazy(() => HrisDocumentApiModelSchemas4$.outboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
    ]);
}

/** @internal */
export namespace HrisDocumentApiModelSchemasValue$ {
    export const inboundSchema = z.nativeEnum(HrisDocumentApiModelSchemasValue);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace HrisDocumentApiModelType$ {
    export const inboundSchema: z.ZodType<HrisDocumentApiModelType, z.ZodTypeDef, unknown> = z
        .object({
            source_value: z
                .nullable(
                    z.union([
                        z.lazy(() => HrisDocumentApiModelSchemas4$.inboundSchema),
                        z.string(),
                        z.number(),
                        z.boolean(),
                    ])
                )
                .optional(),
            value: z.nullable(HrisDocumentApiModelSchemasValue$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.source_value === undefined ? null : { sourceValue: v.source_value }),
                ...(v.value === undefined ? null : { value: v.value }),
            };
        });

    export type Outbound = {
        source_value?:
            | HrisDocumentApiModelSchemas4$.Outbound
            | string
            | number
            | boolean
            | null
            | undefined;
        value?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, HrisDocumentApiModelType> = z
        .object({
            sourceValue: z
                .nullable(
                    z.union([
                        z.lazy(() => HrisDocumentApiModelSchemas4$.outboundSchema),
                        z.string(),
                        z.number(),
                        z.boolean(),
                    ])
                )
                .optional(),
            value: z.nullable(HrisDocumentApiModelSchemasValue$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.sourceValue === undefined ? null : { source_value: v.sourceValue }),
                ...(v.value === undefined ? null : { value: v.value }),
            };
        });
}

/** @internal */
export namespace HrisDocumentApiModel$ {
    export const inboundSchema: z.ZodType<HrisDocumentApiModel, z.ZodTypeDef, unknown> = z
        .object({
            category: z
                .nullable(z.lazy(() => HrisDocumentApiModelCategory$.inboundSchema))
                .optional(),
            contents: z.nullable(z.array(Content$.inboundSchema)).optional(),
            created_at: z
                .nullable(
                    z
                        .string()
                        .datetime({ offset: true })
                        .transform((v) => new Date(v))
                )
                .optional(),
            id: z.nullable(z.string()).optional(),
            name: z.nullable(z.string()).optional(),
            path: z.nullable(z.string()).optional(),
            remote_id: z.nullable(z.string()).optional(),
            type: z.nullable(z.lazy(() => HrisDocumentApiModelType$.inboundSchema)).optional(),
            updated_at: z
                .nullable(
                    z
                        .string()
                        .datetime({ offset: true })
                        .transform((v) => new Date(v))
                )
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.category === undefined ? null : { category: v.category }),
                ...(v.contents === undefined ? null : { contents: v.contents }),
                ...(v.created_at === undefined ? null : { createdAt: v.created_at }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.path === undefined ? null : { path: v.path }),
                ...(v.remote_id === undefined ? null : { remoteId: v.remote_id }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.updated_at === undefined ? null : { updatedAt: v.updated_at }),
            };
        });

    export type Outbound = {
        category?: HrisDocumentApiModelCategory$.Outbound | null | undefined;
        contents?: Array<Content$.Outbound> | null | undefined;
        created_at?: string | null | undefined;
        id?: string | null | undefined;
        name?: string | null | undefined;
        path?: string | null | undefined;
        remote_id?: string | null | undefined;
        type?: HrisDocumentApiModelType$.Outbound | null | undefined;
        updated_at?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, HrisDocumentApiModel> = z
        .object({
            category: z
                .nullable(z.lazy(() => HrisDocumentApiModelCategory$.outboundSchema))
                .optional(),
            contents: z.nullable(z.array(Content$.outboundSchema)).optional(),
            createdAt: z.nullable(z.date().transform((v) => v.toISOString())).optional(),
            id: z.nullable(z.string()).optional(),
            name: z.nullable(z.string()).optional(),
            path: z.nullable(z.string()).optional(),
            remoteId: z.nullable(z.string()).optional(),
            type: z.nullable(z.lazy(() => HrisDocumentApiModelType$.outboundSchema)).optional(),
            updatedAt: z.nullable(z.date().transform((v) => v.toISOString())).optional(),
        })
        .transform((v) => {
            return {
                ...(v.category === undefined ? null : { category: v.category }),
                ...(v.contents === undefined ? null : { contents: v.contents }),
                ...(v.createdAt === undefined ? null : { created_at: v.createdAt }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.path === undefined ? null : { path: v.path }),
                ...(v.remoteId === undefined ? null : { remote_id: v.remoteId }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.updatedAt === undefined ? null : { updated_at: v.updatedAt }),
            };
        });
}
