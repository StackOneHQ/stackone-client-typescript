/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AdditionalData,
  AdditionalData$inboundSchema,
  AdditionalData$Outbound,
  AdditionalData$outboundSchema,
} from "./additionaldata.js";
import {
  CreateCategoriesApiModel,
  CreateCategoriesApiModel$inboundSchema,
  CreateCategoriesApiModel$Outbound,
  CreateCategoriesApiModel$outboundSchema,
} from "./createcategoriesapimodel.js";
import {
  CreateSkillsApiModel,
  CreateSkillsApiModel$inboundSchema,
  CreateSkillsApiModel$Outbound,
  CreateSkillsApiModel$outboundSchema,
} from "./createskillsapimodel.js";
import {
  LanguageEnum,
  LanguageEnum$inboundSchema,
  LanguageEnum$Outbound,
  LanguageEnum$outboundSchema,
} from "./languageenum.js";
import {
  LocalizationModel,
  LocalizationModel$inboundSchema,
  LocalizationModel$Outbound,
  LocalizationModel$outboundSchema,
} from "./localizationmodel.js";

export type LmsCreateContentRequestDto4 = {};

export type LmsCreateContentRequestDtoSourceValue =
  | LmsCreateContentRequestDto4
  | string
  | number
  | boolean
  | Array<any>;

export enum LmsCreateContentRequestDtoValue {
  Video = "video",
  Quiz = "quiz",
  Document = "document",
  Audio = "audio",
  Article = "article",
  UnmappedValue = "unmapped_value",
}
export type LmsCreateContentRequestDtoValueOpen = OpenEnum<
  typeof LmsCreateContentRequestDtoValue
>;

/**
 * The type of content
 */
export type LmsCreateContentRequestDtoContentType = {
  sourceValue?:
    | LmsCreateContentRequestDto4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: LmsCreateContentRequestDtoValueOpen | null | undefined;
};

export type LmsCreateContentRequestDto = {
  /**
   * Whether the content is active and available for users.
   */
  active?: boolean | null | undefined;
  /**
   * The additional_data associated with this content
   */
  additionalData?: Array<AdditionalData> | null | undefined;
  /**
   * The categories associated with this content
   */
  categories?: Array<CreateCategoriesApiModel> | null | undefined;
  /**
   * The type of content
   */
  contentType?: LmsCreateContentRequestDtoContentType | null | undefined;
  /**
   * The external URL of the content
   */
  contentUrl?: string | null | undefined;
  /**
   * The URL of the thumbnail image associated with the content.
   */
  coverUrl?: string | null | undefined;
  /**
   * The date on which the content was created.
   */
  createdAt?: Date | null | undefined;
  /**
   * The description of the content
   */
  description?: string | null | undefined;
  /**
   * The duration of the content following the ISO8601 standard. If duration_unit is applicable we will derive this from the smallest unit given in the duration string or the minimum unit accepted by the provider.
   */
  duration?: string | null | undefined;
  /**
   * The external ID associated with this content
   */
  externalReference?: string | null | undefined;
  /**
   * The languages associated with this content
   */
  languages?: Array<LanguageEnum> | null | undefined;
  /**
   * The localization data for this content
   */
  localizations?: Array<LocalizationModel> | null | undefined;
  /**
   * The mobile friendly URL of the content
   */
  mobileLaunchContentUrl?: string | null | undefined;
  /**
   * The order of the individual content within a content grouping. This is not applicable for pushing individual content.
   */
  order?: number | null | undefined;
  /**
   * A short description or summary for the content
   *
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  shortDescription?: string | null | undefined;
  /**
   * The skills associated with this content
   */
  skills?: Array<CreateSkillsApiModel> | null | undefined;
  /**
   * A list of tags associated with the content
   */
  tags?: Array<string> | null | undefined;
  /**
   * The title of the content
   */
  title?: string | null | undefined;
  /**
   * Custom Unified Fields configured in your StackOne project
   */
  unifiedCustomFields?: { [k: string]: any } | null | undefined;
  /**
   * The date on which the content was last updated.
   */
  updatedAt?: Date | null | undefined;
};

/** @internal */
export const LmsCreateContentRequestDto4$inboundSchema: z.ZodType<
  LmsCreateContentRequestDto4,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type LmsCreateContentRequestDto4$Outbound = {};

/** @internal */
export const LmsCreateContentRequestDto4$outboundSchema: z.ZodType<
  LmsCreateContentRequestDto4$Outbound,
  z.ZodTypeDef,
  LmsCreateContentRequestDto4
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LmsCreateContentRequestDto4$ {
  /** @deprecated use `LmsCreateContentRequestDto4$inboundSchema` instead. */
  export const inboundSchema = LmsCreateContentRequestDto4$inboundSchema;
  /** @deprecated use `LmsCreateContentRequestDto4$outboundSchema` instead. */
  export const outboundSchema = LmsCreateContentRequestDto4$outboundSchema;
  /** @deprecated use `LmsCreateContentRequestDto4$Outbound` instead. */
  export type Outbound = LmsCreateContentRequestDto4$Outbound;
}

export function lmsCreateContentRequestDto4ToJSON(
  lmsCreateContentRequestDto4: LmsCreateContentRequestDto4,
): string {
  return JSON.stringify(
    LmsCreateContentRequestDto4$outboundSchema.parse(
      lmsCreateContentRequestDto4,
    ),
  );
}

export function lmsCreateContentRequestDto4FromJSON(
  jsonString: string,
): SafeParseResult<LmsCreateContentRequestDto4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => LmsCreateContentRequestDto4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'LmsCreateContentRequestDto4' from JSON`,
  );
}

/** @internal */
export const LmsCreateContentRequestDtoSourceValue$inboundSchema: z.ZodType<
  LmsCreateContentRequestDtoSourceValue,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => LmsCreateContentRequestDto4$inboundSchema),
  z.string(),
  z.number(),
  z.boolean(),
  z.array(z.any()),
]);

/** @internal */
export type LmsCreateContentRequestDtoSourceValue$Outbound =
  | LmsCreateContentRequestDto4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const LmsCreateContentRequestDtoSourceValue$outboundSchema: z.ZodType<
  LmsCreateContentRequestDtoSourceValue$Outbound,
  z.ZodTypeDef,
  LmsCreateContentRequestDtoSourceValue
> = z.union([
  z.lazy(() => LmsCreateContentRequestDto4$outboundSchema),
  z.string(),
  z.number(),
  z.boolean(),
  z.array(z.any()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LmsCreateContentRequestDtoSourceValue$ {
  /** @deprecated use `LmsCreateContentRequestDtoSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    LmsCreateContentRequestDtoSourceValue$inboundSchema;
  /** @deprecated use `LmsCreateContentRequestDtoSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    LmsCreateContentRequestDtoSourceValue$outboundSchema;
  /** @deprecated use `LmsCreateContentRequestDtoSourceValue$Outbound` instead. */
  export type Outbound = LmsCreateContentRequestDtoSourceValue$Outbound;
}

export function lmsCreateContentRequestDtoSourceValueToJSON(
  lmsCreateContentRequestDtoSourceValue: LmsCreateContentRequestDtoSourceValue,
): string {
  return JSON.stringify(
    LmsCreateContentRequestDtoSourceValue$outboundSchema.parse(
      lmsCreateContentRequestDtoSourceValue,
    ),
  );
}

export function lmsCreateContentRequestDtoSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<LmsCreateContentRequestDtoSourceValue, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      LmsCreateContentRequestDtoSourceValue$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'LmsCreateContentRequestDtoSourceValue' from JSON`,
  );
}

/** @internal */
export const LmsCreateContentRequestDtoValue$inboundSchema: z.ZodType<
  LmsCreateContentRequestDtoValueOpen,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(LmsCreateContentRequestDtoValue),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const LmsCreateContentRequestDtoValue$outboundSchema: z.ZodType<
  LmsCreateContentRequestDtoValueOpen,
  z.ZodTypeDef,
  LmsCreateContentRequestDtoValueOpen
> = z.union([
  z.nativeEnum(LmsCreateContentRequestDtoValue),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LmsCreateContentRequestDtoValue$ {
  /** @deprecated use `LmsCreateContentRequestDtoValue$inboundSchema` instead. */
  export const inboundSchema = LmsCreateContentRequestDtoValue$inboundSchema;
  /** @deprecated use `LmsCreateContentRequestDtoValue$outboundSchema` instead. */
  export const outboundSchema = LmsCreateContentRequestDtoValue$outboundSchema;
}

/** @internal */
export const LmsCreateContentRequestDtoContentType$inboundSchema: z.ZodType<
  LmsCreateContentRequestDtoContentType,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() => LmsCreateContentRequestDto4$inboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(LmsCreateContentRequestDtoValue$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type LmsCreateContentRequestDtoContentType$Outbound = {
  source_value?:
    | LmsCreateContentRequestDto4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const LmsCreateContentRequestDtoContentType$outboundSchema: z.ZodType<
  LmsCreateContentRequestDtoContentType$Outbound,
  z.ZodTypeDef,
  LmsCreateContentRequestDtoContentType
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() => LmsCreateContentRequestDto4$outboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(LmsCreateContentRequestDtoValue$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LmsCreateContentRequestDtoContentType$ {
  /** @deprecated use `LmsCreateContentRequestDtoContentType$inboundSchema` instead. */
  export const inboundSchema =
    LmsCreateContentRequestDtoContentType$inboundSchema;
  /** @deprecated use `LmsCreateContentRequestDtoContentType$outboundSchema` instead. */
  export const outboundSchema =
    LmsCreateContentRequestDtoContentType$outboundSchema;
  /** @deprecated use `LmsCreateContentRequestDtoContentType$Outbound` instead. */
  export type Outbound = LmsCreateContentRequestDtoContentType$Outbound;
}

export function lmsCreateContentRequestDtoContentTypeToJSON(
  lmsCreateContentRequestDtoContentType: LmsCreateContentRequestDtoContentType,
): string {
  return JSON.stringify(
    LmsCreateContentRequestDtoContentType$outboundSchema.parse(
      lmsCreateContentRequestDtoContentType,
    ),
  );
}

export function lmsCreateContentRequestDtoContentTypeFromJSON(
  jsonString: string,
): SafeParseResult<LmsCreateContentRequestDtoContentType, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      LmsCreateContentRequestDtoContentType$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'LmsCreateContentRequestDtoContentType' from JSON`,
  );
}

/** @internal */
export const LmsCreateContentRequestDto$inboundSchema: z.ZodType<
  LmsCreateContentRequestDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  active: z.nullable(z.boolean()).optional(),
  additional_data: z.nullable(z.array(AdditionalData$inboundSchema)).optional(),
  categories: z.nullable(z.array(CreateCategoriesApiModel$inboundSchema))
    .optional(),
  content_type: z.nullable(
    z.lazy(() => LmsCreateContentRequestDtoContentType$inboundSchema),
  ).optional(),
  content_url: z.nullable(z.string()).optional(),
  cover_url: z.nullable(z.string()).optional(),
  created_at: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  description: z.nullable(z.string()).optional(),
  duration: z.nullable(z.string()).optional(),
  external_reference: z.nullable(z.string()).optional(),
  languages: z.nullable(z.array(LanguageEnum$inboundSchema)).optional(),
  localizations: z.nullable(z.array(LocalizationModel$inboundSchema))
    .optional(),
  mobile_launch_content_url: z.nullable(z.string()).optional(),
  order: z.nullable(z.number()).optional(),
  short_description: z.nullable(z.string()).optional(),
  skills: z.nullable(z.array(CreateSkillsApiModel$inboundSchema)).optional(),
  tags: z.nullable(z.array(z.string())).optional(),
  title: z.nullable(z.string()).optional(),
  unified_custom_fields: z.nullable(z.record(z.any())).optional(),
  updated_at: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "additional_data": "additionalData",
    "content_type": "contentType",
    "content_url": "contentUrl",
    "cover_url": "coverUrl",
    "created_at": "createdAt",
    "external_reference": "externalReference",
    "mobile_launch_content_url": "mobileLaunchContentUrl",
    "short_description": "shortDescription",
    "unified_custom_fields": "unifiedCustomFields",
    "updated_at": "updatedAt",
  });
});

/** @internal */
export type LmsCreateContentRequestDto$Outbound = {
  active?: boolean | null | undefined;
  additional_data?: Array<AdditionalData$Outbound> | null | undefined;
  categories?: Array<CreateCategoriesApiModel$Outbound> | null | undefined;
  content_type?:
    | LmsCreateContentRequestDtoContentType$Outbound
    | null
    | undefined;
  content_url?: string | null | undefined;
  cover_url?: string | null | undefined;
  created_at?: string | null | undefined;
  description?: string | null | undefined;
  duration?: string | null | undefined;
  external_reference?: string | null | undefined;
  languages?: Array<LanguageEnum$Outbound> | null | undefined;
  localizations?: Array<LocalizationModel$Outbound> | null | undefined;
  mobile_launch_content_url?: string | null | undefined;
  order?: number | null | undefined;
  short_description?: string | null | undefined;
  skills?: Array<CreateSkillsApiModel$Outbound> | null | undefined;
  tags?: Array<string> | null | undefined;
  title?: string | null | undefined;
  unified_custom_fields?: { [k: string]: any } | null | undefined;
  updated_at?: string | null | undefined;
};

/** @internal */
export const LmsCreateContentRequestDto$outboundSchema: z.ZodType<
  LmsCreateContentRequestDto$Outbound,
  z.ZodTypeDef,
  LmsCreateContentRequestDto
> = z.object({
  active: z.nullable(z.boolean()).optional(),
  additionalData: z.nullable(z.array(AdditionalData$outboundSchema)).optional(),
  categories: z.nullable(z.array(CreateCategoriesApiModel$outboundSchema))
    .optional(),
  contentType: z.nullable(
    z.lazy(() => LmsCreateContentRequestDtoContentType$outboundSchema),
  ).optional(),
  contentUrl: z.nullable(z.string()).optional(),
  coverUrl: z.nullable(z.string()).optional(),
  createdAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  description: z.nullable(z.string()).optional(),
  duration: z.nullable(z.string()).optional(),
  externalReference: z.nullable(z.string()).optional(),
  languages: z.nullable(z.array(LanguageEnum$outboundSchema)).optional(),
  localizations: z.nullable(z.array(LocalizationModel$outboundSchema))
    .optional(),
  mobileLaunchContentUrl: z.nullable(z.string()).optional(),
  order: z.nullable(z.number()).optional(),
  shortDescription: z.nullable(z.string()).optional(),
  skills: z.nullable(z.array(CreateSkillsApiModel$outboundSchema)).optional(),
  tags: z.nullable(z.array(z.string())).optional(),
  title: z.nullable(z.string()).optional(),
  unifiedCustomFields: z.nullable(z.record(z.any())).optional(),
  updatedAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
}).transform((v) => {
  return remap$(v, {
    additionalData: "additional_data",
    contentType: "content_type",
    contentUrl: "content_url",
    coverUrl: "cover_url",
    createdAt: "created_at",
    externalReference: "external_reference",
    mobileLaunchContentUrl: "mobile_launch_content_url",
    shortDescription: "short_description",
    unifiedCustomFields: "unified_custom_fields",
    updatedAt: "updated_at",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LmsCreateContentRequestDto$ {
  /** @deprecated use `LmsCreateContentRequestDto$inboundSchema` instead. */
  export const inboundSchema = LmsCreateContentRequestDto$inboundSchema;
  /** @deprecated use `LmsCreateContentRequestDto$outboundSchema` instead. */
  export const outboundSchema = LmsCreateContentRequestDto$outboundSchema;
  /** @deprecated use `LmsCreateContentRequestDto$Outbound` instead. */
  export type Outbound = LmsCreateContentRequestDto$Outbound;
}

export function lmsCreateContentRequestDtoToJSON(
  lmsCreateContentRequestDto: LmsCreateContentRequestDto,
): string {
  return JSON.stringify(
    LmsCreateContentRequestDto$outboundSchema.parse(lmsCreateContentRequestDto),
  );
}

export function lmsCreateContentRequestDtoFromJSON(
  jsonString: string,
): SafeParseResult<LmsCreateContentRequestDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => LmsCreateContentRequestDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'LmsCreateContentRequestDto' from JSON`,
  );
}
