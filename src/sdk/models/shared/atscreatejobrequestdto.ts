/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";
import {
  CustomFields,
  CustomFields$inboundSchema,
  CustomFields$Outbound,
  CustomFields$outboundSchema,
} from "./customfields.js";
import {
  InterviewStage,
  InterviewStage$inboundSchema,
  InterviewStage$Outbound,
  InterviewStage$outboundSchema,
} from "./interviewstage.js";
import {
  JobHiringTeam,
  JobHiringTeam$inboundSchema,
  JobHiringTeam$Outbound,
  JobHiringTeam$outboundSchema,
} from "./jobhiringteam.js";

/**
 * Confidential status of the job
 */
export enum Confidential {
  True = "true",
  False = "false",
}
/**
 * Confidential status of the job
 */
export type ConfidentialOpen = OpenEnum<typeof Confidential>;

export type AtsCreateJobRequestDto4 = {};

/**
 * The source value of the job status.
 */
export type AtsCreateJobRequestDtoSourceValue =
  | AtsCreateJobRequestDto4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The status of the job.
 */
export enum AtsCreateJobRequestDtoValue {
  Published = "published",
  Draft = "draft",
  Pending = "pending",
  Internal = "internal",
  Archived = "archived",
  Closed = "closed",
  Open = "open",
  Deleted = "deleted",
  OnHold = "on_hold",
  UnmappedValue = "unmapped_value",
}
/**
 * The status of the job.
 */
export type AtsCreateJobRequestDtoValueOpen = OpenEnum<
  typeof AtsCreateJobRequestDtoValue
>;

/**
 * Status of the job
 */
export type JobStatus = {
  /**
   * The source value of the job status.
   */
  sourceValue?:
    | AtsCreateJobRequestDto4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The status of the job.
   */
  value?: AtsCreateJobRequestDtoValueOpen | null | undefined;
};

export type AtsCreateJobRequestDto = {
  /**
   * Code of the job
   */
  code?: string | null | undefined;
  /**
   * Confidential status of the job
   */
  confidential?: ConfidentialOpen | null | undefined;
  /**
   * The job custom fields
   */
  customFields?: Array<CustomFields> | null | undefined;
  /**
   * Department ids of the job
   */
  departmentIds?: Array<string> | null | undefined;
  /**
   * Hiring team for the job.
   */
  hiringTeam?: Array<JobHiringTeam> | null | undefined;
  /**
   * Interview stages for the job.
   */
  interviewStages?: Array<InterviewStage> | null | undefined;
  /**
   * Status of the job
   */
  jobStatus?: JobStatus | null | undefined;
  /**
   * Location ids of the job
   */
  locationIds?: Array<string> | null | undefined;
  /**
   * Value to pass through to the provider
   */
  passthrough?: { [k: string]: any } | null | undefined;
  /**
   * Status of the job
   *
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  status?: string | null | undefined;
  /**
   * Title of the job
   */
  title?: string | null | undefined;
  /**
   * Custom Unified Fields configured in your StackOne project
   */
  unifiedCustomFields?: { [k: string]: any } | null | undefined;
};

/** @internal */
export const Confidential$inboundSchema: z.ZodType<
  ConfidentialOpen,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(Confidential),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const Confidential$outboundSchema: z.ZodType<
  ConfidentialOpen,
  z.ZodTypeDef,
  ConfidentialOpen
> = z.union([
  z.nativeEnum(Confidential),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Confidential$ {
  /** @deprecated use `Confidential$inboundSchema` instead. */
  export const inboundSchema = Confidential$inboundSchema;
  /** @deprecated use `Confidential$outboundSchema` instead. */
  export const outboundSchema = Confidential$outboundSchema;
}

/** @internal */
export const AtsCreateJobRequestDto4$inboundSchema: z.ZodType<
  AtsCreateJobRequestDto4,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type AtsCreateJobRequestDto4$Outbound = {};

/** @internal */
export const AtsCreateJobRequestDto4$outboundSchema: z.ZodType<
  AtsCreateJobRequestDto4$Outbound,
  z.ZodTypeDef,
  AtsCreateJobRequestDto4
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsCreateJobRequestDto4$ {
  /** @deprecated use `AtsCreateJobRequestDto4$inboundSchema` instead. */
  export const inboundSchema = AtsCreateJobRequestDto4$inboundSchema;
  /** @deprecated use `AtsCreateJobRequestDto4$outboundSchema` instead. */
  export const outboundSchema = AtsCreateJobRequestDto4$outboundSchema;
  /** @deprecated use `AtsCreateJobRequestDto4$Outbound` instead. */
  export type Outbound = AtsCreateJobRequestDto4$Outbound;
}

/** @internal */
export const AtsCreateJobRequestDtoSourceValue$inboundSchema: z.ZodType<
  AtsCreateJobRequestDtoSourceValue,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => AtsCreateJobRequestDto4$inboundSchema),
  z.string(),
  z.number(),
  z.boolean(),
  z.array(z.any()),
]);

/** @internal */
export type AtsCreateJobRequestDtoSourceValue$Outbound =
  | AtsCreateJobRequestDto4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const AtsCreateJobRequestDtoSourceValue$outboundSchema: z.ZodType<
  AtsCreateJobRequestDtoSourceValue$Outbound,
  z.ZodTypeDef,
  AtsCreateJobRequestDtoSourceValue
> = z.union([
  z.lazy(() => AtsCreateJobRequestDto4$outboundSchema),
  z.string(),
  z.number(),
  z.boolean(),
  z.array(z.any()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsCreateJobRequestDtoSourceValue$ {
  /** @deprecated use `AtsCreateJobRequestDtoSourceValue$inboundSchema` instead. */
  export const inboundSchema = AtsCreateJobRequestDtoSourceValue$inboundSchema;
  /** @deprecated use `AtsCreateJobRequestDtoSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    AtsCreateJobRequestDtoSourceValue$outboundSchema;
  /** @deprecated use `AtsCreateJobRequestDtoSourceValue$Outbound` instead. */
  export type Outbound = AtsCreateJobRequestDtoSourceValue$Outbound;
}

/** @internal */
export const AtsCreateJobRequestDtoValue$inboundSchema: z.ZodType<
  AtsCreateJobRequestDtoValueOpen,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(AtsCreateJobRequestDtoValue),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const AtsCreateJobRequestDtoValue$outboundSchema: z.ZodType<
  AtsCreateJobRequestDtoValueOpen,
  z.ZodTypeDef,
  AtsCreateJobRequestDtoValueOpen
> = z.union([
  z.nativeEnum(AtsCreateJobRequestDtoValue),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsCreateJobRequestDtoValue$ {
  /** @deprecated use `AtsCreateJobRequestDtoValue$inboundSchema` instead. */
  export const inboundSchema = AtsCreateJobRequestDtoValue$inboundSchema;
  /** @deprecated use `AtsCreateJobRequestDtoValue$outboundSchema` instead. */
  export const outboundSchema = AtsCreateJobRequestDtoValue$outboundSchema;
}

/** @internal */
export const JobStatus$inboundSchema: z.ZodType<
  JobStatus,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() => AtsCreateJobRequestDto4$inboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(AtsCreateJobRequestDtoValue$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type JobStatus$Outbound = {
  source_value?:
    | AtsCreateJobRequestDto4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const JobStatus$outboundSchema: z.ZodType<
  JobStatus$Outbound,
  z.ZodTypeDef,
  JobStatus
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() => AtsCreateJobRequestDto4$outboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(AtsCreateJobRequestDtoValue$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace JobStatus$ {
  /** @deprecated use `JobStatus$inboundSchema` instead. */
  export const inboundSchema = JobStatus$inboundSchema;
  /** @deprecated use `JobStatus$outboundSchema` instead. */
  export const outboundSchema = JobStatus$outboundSchema;
  /** @deprecated use `JobStatus$Outbound` instead. */
  export type Outbound = JobStatus$Outbound;
}

/** @internal */
export const AtsCreateJobRequestDto$inboundSchema: z.ZodType<
  AtsCreateJobRequestDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.nullable(z.string()).optional(),
  confidential: z.nullable(Confidential$inboundSchema).optional(),
  custom_fields: z.nullable(z.array(CustomFields$inboundSchema)).optional(),
  department_ids: z.nullable(z.array(z.string())).optional(),
  hiring_team: z.nullable(z.array(JobHiringTeam$inboundSchema)).optional(),
  interview_stages: z.nullable(z.array(InterviewStage$inboundSchema))
    .optional(),
  job_status: z.nullable(z.lazy(() => JobStatus$inboundSchema)).optional(),
  location_ids: z.nullable(z.array(z.string())).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  status: z.nullable(z.string()).optional(),
  title: z.nullable(z.string()).optional(),
  unified_custom_fields: z.nullable(z.record(z.any())).optional(),
}).transform((v) => {
  return remap$(v, {
    "custom_fields": "customFields",
    "department_ids": "departmentIds",
    "hiring_team": "hiringTeam",
    "interview_stages": "interviewStages",
    "job_status": "jobStatus",
    "location_ids": "locationIds",
    "unified_custom_fields": "unifiedCustomFields",
  });
});

/** @internal */
export type AtsCreateJobRequestDto$Outbound = {
  code?: string | null | undefined;
  confidential?: string | null | undefined;
  custom_fields?: Array<CustomFields$Outbound> | null | undefined;
  department_ids?: Array<string> | null | undefined;
  hiring_team?: Array<JobHiringTeam$Outbound> | null | undefined;
  interview_stages?: Array<InterviewStage$Outbound> | null | undefined;
  job_status?: JobStatus$Outbound | null | undefined;
  location_ids?: Array<string> | null | undefined;
  passthrough?: { [k: string]: any } | null | undefined;
  status?: string | null | undefined;
  title?: string | null | undefined;
  unified_custom_fields?: { [k: string]: any } | null | undefined;
};

/** @internal */
export const AtsCreateJobRequestDto$outboundSchema: z.ZodType<
  AtsCreateJobRequestDto$Outbound,
  z.ZodTypeDef,
  AtsCreateJobRequestDto
> = z.object({
  code: z.nullable(z.string()).optional(),
  confidential: z.nullable(Confidential$outboundSchema).optional(),
  customFields: z.nullable(z.array(CustomFields$outboundSchema)).optional(),
  departmentIds: z.nullable(z.array(z.string())).optional(),
  hiringTeam: z.nullable(z.array(JobHiringTeam$outboundSchema)).optional(),
  interviewStages: z.nullable(z.array(InterviewStage$outboundSchema))
    .optional(),
  jobStatus: z.nullable(z.lazy(() => JobStatus$outboundSchema)).optional(),
  locationIds: z.nullable(z.array(z.string())).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  status: z.nullable(z.string()).optional(),
  title: z.nullable(z.string()).optional(),
  unifiedCustomFields: z.nullable(z.record(z.any())).optional(),
}).transform((v) => {
  return remap$(v, {
    customFields: "custom_fields",
    departmentIds: "department_ids",
    hiringTeam: "hiring_team",
    interviewStages: "interview_stages",
    jobStatus: "job_status",
    locationIds: "location_ids",
    unifiedCustomFields: "unified_custom_fields",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsCreateJobRequestDto$ {
  /** @deprecated use `AtsCreateJobRequestDto$inboundSchema` instead. */
  export const inboundSchema = AtsCreateJobRequestDto$inboundSchema;
  /** @deprecated use `AtsCreateJobRequestDto$outboundSchema` instead. */
  export const outboundSchema = AtsCreateJobRequestDto$outboundSchema;
  /** @deprecated use `AtsCreateJobRequestDto$Outbound` instead. */
  export type Outbound = AtsCreateJobRequestDto$Outbound;
}
