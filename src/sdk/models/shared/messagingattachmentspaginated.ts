/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  MessagingAttachment,
  MessagingAttachment$inboundSchema,
  MessagingAttachment$Outbound,
  MessagingAttachment$outboundSchema,
} from "./messagingattachment.js";
import {
  RawResponse,
  RawResponse$inboundSchema,
  RawResponse$Outbound,
  RawResponse$outboundSchema,
} from "./rawresponse.js";

export type MessagingAttachmentsPaginated = {
  data?: Array<MessagingAttachment> | null | undefined;
  next?: string | null | undefined;
  raw?: Array<RawResponse> | null | undefined;
};

/** @internal */
export const MessagingAttachmentsPaginated$inboundSchema: z.ZodType<
  MessagingAttachmentsPaginated,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.nullable(z.array(MessagingAttachment$inboundSchema)).optional(),
  next: z.nullable(z.string()).optional(),
  raw: z.nullable(z.array(RawResponse$inboundSchema)).optional(),
});

/** @internal */
export type MessagingAttachmentsPaginated$Outbound = {
  data?: Array<MessagingAttachment$Outbound> | null | undefined;
  next?: string | null | undefined;
  raw?: Array<RawResponse$Outbound> | null | undefined;
};

/** @internal */
export const MessagingAttachmentsPaginated$outboundSchema: z.ZodType<
  MessagingAttachmentsPaginated$Outbound,
  z.ZodTypeDef,
  MessagingAttachmentsPaginated
> = z.object({
  data: z.nullable(z.array(MessagingAttachment$outboundSchema)).optional(),
  next: z.nullable(z.string()).optional(),
  raw: z.nullable(z.array(RawResponse$outboundSchema)).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MessagingAttachmentsPaginated$ {
  /** @deprecated use `MessagingAttachmentsPaginated$inboundSchema` instead. */
  export const inboundSchema = MessagingAttachmentsPaginated$inboundSchema;
  /** @deprecated use `MessagingAttachmentsPaginated$outboundSchema` instead. */
  export const outboundSchema = MessagingAttachmentsPaginated$outboundSchema;
  /** @deprecated use `MessagingAttachmentsPaginated$Outbound` instead. */
  export type Outbound = MessagingAttachmentsPaginated$Outbound;
}

export function messagingAttachmentsPaginatedToJSON(
  messagingAttachmentsPaginated: MessagingAttachmentsPaginated,
): string {
  return JSON.stringify(
    MessagingAttachmentsPaginated$outboundSchema.parse(
      messagingAttachmentsPaginated,
    ),
  );
}

export function messagingAttachmentsPaginatedFromJSON(
  jsonString: string,
): SafeParseResult<MessagingAttachmentsPaginated, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MessagingAttachmentsPaginated$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MessagingAttachmentsPaginated' from JSON`,
  );
}
