/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { DocumentFileFormatEnum, DocumentFileFormatEnum$ } from "./documentfileformatenum";
import { z } from "zod";

export type Content = {
    /**
     * The file format of the document
     */
    fileFormat?: DocumentFileFormatEnum | undefined;
    /**
     * URL where the file content is located
     */
    url?: string | undefined;
};

/** @internal */
export namespace Content$ {
    export type Inbound = {
        file_format?: DocumentFileFormatEnum$.Inbound | undefined;
        url?: string | undefined;
    };

    export const inboundSchema: z.ZodType<Content, z.ZodTypeDef, Inbound> = z
        .object({
            file_format: DocumentFileFormatEnum$.inboundSchema.optional(),
            url: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.file_format === undefined ? null : { fileFormat: v.file_format }),
                ...(v.url === undefined ? null : { url: v.url }),
            };
        });

    export type Outbound = {
        file_format?: DocumentFileFormatEnum$.Outbound | undefined;
        url?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Content> = z
        .object({
            fileFormat: DocumentFileFormatEnum$.outboundSchema.optional(),
            url: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.fileFormat === undefined ? null : { file_format: v.fileFormat }),
                ...(v.url === undefined ? null : { url: v.url }),
            };
        });
}
