/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ApplicationAttachment, ApplicationAttachment$ } from "./applicationattachment";
import { Questionnaire, Questionnaire$ } from "./questionnaire";
import * as z from "zod";

export type AtsUpdateApplicationRequestDto4 = {};

/**
 * The source value of the application status.
 */
export type AtsUpdateApplicationRequestDtoSourceValue =
    | AtsUpdateApplicationRequestDto4
    | string
    | number
    | boolean;

/**
 * The status of the application.
 */
export enum AtsUpdateApplicationRequestDtoValue {
    Active = "active",
    Assessment = "assessment",
    BackgroundCheck = "background_check",
    Converted = "converted",
    DeclinedByCandidate = "declined_by_candidate",
    Hired = "hired",
    Interview = "interview",
    Lead = "lead",
    Offer = "offer",
    ReferenceCheck = "reference_check",
    Rejected = "rejected",
    Review = "review",
    Screen = "screen",
    New = "new",
    UnmappedValue = "unmapped_value",
}

export type AtsUpdateApplicationRequestDtoApplicationStatus = {
    /**
     * The source value of the application status.
     */
    sourceValue?: AtsUpdateApplicationRequestDto4 | string | number | boolean | null | undefined;
    /**
     * The status of the application.
     */
    value?: AtsUpdateApplicationRequestDtoValue | null | undefined;
};

export type AtsUpdateApplicationRequestDtoCandidate = {
    /**
     * Email of the candidate
     */
    email?: string | null | undefined;
    /**
     * First name of the candidate
     */
    firstName?: string | null | undefined;
    /**
     * Last name of the candidate
     */
    lastName?: string | null | undefined;
};

export type AtsUpdateApplicationRequestDto = {
    applicationStatus?: AtsUpdateApplicationRequestDtoApplicationStatus | null | undefined;
    /**
     * Use `documents` expand instead
     *
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    attachments?: Array<ApplicationAttachment> | null | undefined;
    candidate?: AtsUpdateApplicationRequestDtoCandidate | null | undefined;
    /**
     * Unique identifier of the candidate
     */
    candidateId?: string | null | undefined;
    /**
     * The ID of the application to update.
     */
    id?: string | null | undefined;
    /**
     * Unique identifier of the job
     */
    jobId?: string | null | undefined;
    /**
     * Unique identifiers of the locations
     */
    locationIds?: Array<string> | null | undefined;
    /**
     * Questionnaires associated with the application
     */
    questionnaires?: Array<Questionnaire> | null | undefined;
};

/** @internal */
export namespace AtsUpdateApplicationRequestDto4$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<AtsUpdateApplicationRequestDto4, z.ZodTypeDef, Inbound> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AtsUpdateApplicationRequestDto4
    > = z.object({});
}

/** @internal */
export namespace AtsUpdateApplicationRequestDtoSourceValue$ {
    export type Inbound = AtsUpdateApplicationRequestDto4$.Inbound | string | number | boolean;

    export type Outbound = AtsUpdateApplicationRequestDto4$.Outbound | string | number | boolean;
    export const inboundSchema: z.ZodType<
        AtsUpdateApplicationRequestDtoSourceValue,
        z.ZodTypeDef,
        Inbound
    > = z.union([
        z.lazy(() => AtsUpdateApplicationRequestDto4$.inboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
    ]);
    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AtsUpdateApplicationRequestDtoSourceValue
    > = z.union([
        z.lazy(() => AtsUpdateApplicationRequestDto4$.outboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
    ]);
}

/** @internal */
export const AtsUpdateApplicationRequestDtoValue$ = z.nativeEnum(
    AtsUpdateApplicationRequestDtoValue
);

/** @internal */
export namespace AtsUpdateApplicationRequestDtoApplicationStatus$ {
    export type Inbound = {
        source_value?:
            | AtsUpdateApplicationRequestDto4$.Inbound
            | string
            | number
            | boolean
            | null
            | undefined;
        value?: AtsUpdateApplicationRequestDtoValue | null | undefined;
    };

    export const inboundSchema: z.ZodType<
        AtsUpdateApplicationRequestDtoApplicationStatus,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            source_value: z
                .nullable(
                    z.union([
                        z.lazy(() => AtsUpdateApplicationRequestDto4$.inboundSchema),
                        z.string(),
                        z.number(),
                        z.boolean(),
                    ])
                )
                .optional(),
            value: z.nullable(AtsUpdateApplicationRequestDtoValue$).optional(),
        })
        .transform((v) => {
            return {
                ...(v.source_value === undefined ? null : { sourceValue: v.source_value }),
                ...(v.value === undefined ? null : { value: v.value }),
            };
        });

    export type Outbound = {
        source_value?:
            | AtsUpdateApplicationRequestDto4$.Outbound
            | string
            | number
            | boolean
            | null
            | undefined;
        value?: AtsUpdateApplicationRequestDtoValue | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AtsUpdateApplicationRequestDtoApplicationStatus
    > = z
        .object({
            sourceValue: z
                .nullable(
                    z.union([
                        z.lazy(() => AtsUpdateApplicationRequestDto4$.outboundSchema),
                        z.string(),
                        z.number(),
                        z.boolean(),
                    ])
                )
                .optional(),
            value: z.nullable(AtsUpdateApplicationRequestDtoValue$).optional(),
        })
        .transform((v) => {
            return {
                ...(v.sourceValue === undefined ? null : { source_value: v.sourceValue }),
                ...(v.value === undefined ? null : { value: v.value }),
            };
        });
}

/** @internal */
export namespace AtsUpdateApplicationRequestDtoCandidate$ {
    export type Inbound = {
        email?: string | null | undefined;
        first_name?: string | null | undefined;
        last_name?: string | null | undefined;
    };

    export const inboundSchema: z.ZodType<
        AtsUpdateApplicationRequestDtoCandidate,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            email: z.nullable(z.string()).optional(),
            first_name: z.nullable(z.string()).optional(),
            last_name: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.first_name === undefined ? null : { firstName: v.first_name }),
                ...(v.last_name === undefined ? null : { lastName: v.last_name }),
            };
        });

    export type Outbound = {
        email?: string | null | undefined;
        first_name?: string | null | undefined;
        last_name?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AtsUpdateApplicationRequestDtoCandidate
    > = z
        .object({
            email: z.nullable(z.string()).optional(),
            firstName: z.nullable(z.string()).optional(),
            lastName: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.firstName === undefined ? null : { first_name: v.firstName }),
                ...(v.lastName === undefined ? null : { last_name: v.lastName }),
            };
        });
}

/** @internal */
export namespace AtsUpdateApplicationRequestDto$ {
    export type Inbound = {
        application_status?:
            | AtsUpdateApplicationRequestDtoApplicationStatus$.Inbound
            | null
            | undefined;
        attachments?: Array<ApplicationAttachment$.Inbound> | null | undefined;
        candidate?: AtsUpdateApplicationRequestDtoCandidate$.Inbound | null | undefined;
        candidate_id?: string | null | undefined;
        id?: string | null | undefined;
        job_id?: string | null | undefined;
        location_ids?: Array<string> | null | undefined;
        questionnaires?: Array<Questionnaire$.Inbound> | null | undefined;
    };

    export const inboundSchema: z.ZodType<AtsUpdateApplicationRequestDto, z.ZodTypeDef, Inbound> = z
        .object({
            application_status: z
                .nullable(
                    z.lazy(() => AtsUpdateApplicationRequestDtoApplicationStatus$.inboundSchema)
                )
                .optional(),
            attachments: z.nullable(z.array(ApplicationAttachment$.inboundSchema)).optional(),
            candidate: z
                .nullable(z.lazy(() => AtsUpdateApplicationRequestDtoCandidate$.inboundSchema))
                .optional(),
            candidate_id: z.nullable(z.string()).optional(),
            id: z.nullable(z.string()).optional(),
            job_id: z.nullable(z.string()).optional(),
            location_ids: z.nullable(z.array(z.string())).optional(),
            questionnaires: z.nullable(z.array(Questionnaire$.inboundSchema)).optional(),
        })
        .transform((v) => {
            return {
                ...(v.application_status === undefined
                    ? null
                    : { applicationStatus: v.application_status }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.candidate === undefined ? null : { candidate: v.candidate }),
                ...(v.candidate_id === undefined ? null : { candidateId: v.candidate_id }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.job_id === undefined ? null : { jobId: v.job_id }),
                ...(v.location_ids === undefined ? null : { locationIds: v.location_ids }),
                ...(v.questionnaires === undefined ? null : { questionnaires: v.questionnaires }),
            };
        });

    export type Outbound = {
        application_status?:
            | AtsUpdateApplicationRequestDtoApplicationStatus$.Outbound
            | null
            | undefined;
        attachments?: Array<ApplicationAttachment$.Outbound> | null | undefined;
        candidate?: AtsUpdateApplicationRequestDtoCandidate$.Outbound | null | undefined;
        candidate_id?: string | null | undefined;
        id?: string | null | undefined;
        job_id?: string | null | undefined;
        location_ids?: Array<string> | null | undefined;
        questionnaires?: Array<Questionnaire$.Outbound> | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AtsUpdateApplicationRequestDto> =
        z
            .object({
                applicationStatus: z
                    .nullable(
                        z.lazy(
                            () => AtsUpdateApplicationRequestDtoApplicationStatus$.outboundSchema
                        )
                    )
                    .optional(),
                attachments: z.nullable(z.array(ApplicationAttachment$.outboundSchema)).optional(),
                candidate: z
                    .nullable(z.lazy(() => AtsUpdateApplicationRequestDtoCandidate$.outboundSchema))
                    .optional(),
                candidateId: z.nullable(z.string()).optional(),
                id: z.nullable(z.string()).optional(),
                jobId: z.nullable(z.string()).optional(),
                locationIds: z.nullable(z.array(z.string())).optional(),
                questionnaires: z.nullable(z.array(Questionnaire$.outboundSchema)).optional(),
            })
            .transform((v) => {
                return {
                    ...(v.applicationStatus === undefined
                        ? null
                        : { application_status: v.applicationStatus }),
                    ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                    ...(v.candidate === undefined ? null : { candidate: v.candidate }),
                    ...(v.candidateId === undefined ? null : { candidate_id: v.candidateId }),
                    ...(v.id === undefined ? null : { id: v.id }),
                    ...(v.jobId === undefined ? null : { job_id: v.jobId }),
                    ...(v.locationIds === undefined ? null : { location_ids: v.locationIds }),
                    ...(v.questionnaires === undefined
                        ? null
                        : { questionnaires: v.questionnaires }),
                };
            });
}
