/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives";
import { catchUnrecognizedEnum, OpenEnum, Unrecognized } from "../../types";
import * as z from "zod";

export type AtsUpdateApplicationRequestDto4 = {};

/**
 * The source value of the application status.
 */
export type AtsUpdateApplicationRequestDtoSourceValue =
    | AtsUpdateApplicationRequestDto4
    | string
    | number
    | boolean;

/**
 * The status of the application.
 */
export enum AtsUpdateApplicationRequestDtoValue {
    Active = "active",
    Assessment = "assessment",
    BackgroundCheck = "background_check",
    Converted = "converted",
    DeclinedByCandidate = "declined_by_candidate",
    Hired = "hired",
    Interview = "interview",
    Lead = "lead",
    Offer = "offer",
    ReferenceCheck = "reference_check",
    Rejected = "rejected",
    Review = "review",
    Screen = "screen",
    New = "new",
    Onboarding = "onboarding",
    Created = "created",
    Accepted = "accepted",
    ShortList = "short_list",
    Approved = "approved",
    UnmappedValue = "unmapped_value",
}
/**
 * The status of the application.
 */
export type AtsUpdateApplicationRequestDtoValueOpen = OpenEnum<
    typeof AtsUpdateApplicationRequestDtoValue
>;

export type AtsUpdateApplicationRequestDtoApplicationStatus = {
    /**
     * The source value of the application status.
     */
    sourceValue?: AtsUpdateApplicationRequestDto4 | string | number | boolean | null | undefined;
    /**
     * The status of the application.
     */
    value?: AtsUpdateApplicationRequestDtoValueOpen | null | undefined;
};

export type AtsUpdateApplicationRequestDtoSource = {
    /**
     * Unique identifier
     */
    id?: string | null | undefined;
    /**
     * The source of the application
     */
    name?: string | null | undefined;
    /**
     * Provider's unique identifier
     */
    remoteId?: string | null | undefined;
};

export type AtsUpdateApplicationRequestDto = {
    applicationStatus?: AtsUpdateApplicationRequestDtoApplicationStatus | null | undefined;
    /**
     * Unique identifier of the interview stage
     */
    interviewStageId?: string | null | undefined;
    /**
     * Value to pass through to the provider
     */
    passthrough?: { [k: string]: any } | null | undefined;
    /**
     * Unique identifier of the rejection reason, used only for write operations
     *
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    rejectedReasonId?: string | null | undefined;
    source?: AtsUpdateApplicationRequestDtoSource | null | undefined;
};

/** @internal */
export namespace AtsUpdateApplicationRequestDto4$ {
    export const inboundSchema: z.ZodType<AtsUpdateApplicationRequestDto4, z.ZodTypeDef, unknown> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AtsUpdateApplicationRequestDto4
    > = z.object({});
}

/** @internal */
export namespace AtsUpdateApplicationRequestDtoSourceValue$ {
    export const inboundSchema: z.ZodType<
        AtsUpdateApplicationRequestDtoSourceValue,
        z.ZodTypeDef,
        unknown
    > = z.union([
        z.lazy(() => AtsUpdateApplicationRequestDto4$.inboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
    ]);

    export type Outbound = AtsUpdateApplicationRequestDto4$.Outbound | string | number | boolean;
    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AtsUpdateApplicationRequestDtoSourceValue
    > = z.union([
        z.lazy(() => AtsUpdateApplicationRequestDto4$.outboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
    ]);
}

/** @internal */
export namespace AtsUpdateApplicationRequestDtoValue$ {
    export const inboundSchema: z.ZodType<
        AtsUpdateApplicationRequestDtoValueOpen,
        z.ZodTypeDef,
        unknown
    > = z.union([
        z.nativeEnum(AtsUpdateApplicationRequestDtoValue),
        z.string().transform(catchUnrecognizedEnum),
    ]);

    export const outboundSchema = z.union([
        z.nativeEnum(AtsUpdateApplicationRequestDtoValue),
        z.string().and(z.custom<Unrecognized<string>>()),
    ]);
}

/** @internal */
export namespace AtsUpdateApplicationRequestDtoApplicationStatus$ {
    export const inboundSchema: z.ZodType<
        AtsUpdateApplicationRequestDtoApplicationStatus,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            source_value: z
                .nullable(
                    z.union([
                        z.lazy(() => AtsUpdateApplicationRequestDto4$.inboundSchema),
                        z.string(),
                        z.number(),
                        z.boolean(),
                    ])
                )
                .optional(),
            value: z.nullable(AtsUpdateApplicationRequestDtoValue$.inboundSchema).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                source_value: "sourceValue",
            });
        });

    export type Outbound = {
        source_value?:
            | AtsUpdateApplicationRequestDto4$.Outbound
            | string
            | number
            | boolean
            | null
            | undefined;
        value?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AtsUpdateApplicationRequestDtoApplicationStatus
    > = z
        .object({
            sourceValue: z
                .nullable(
                    z.union([
                        z.lazy(() => AtsUpdateApplicationRequestDto4$.outboundSchema),
                        z.string(),
                        z.number(),
                        z.boolean(),
                    ])
                )
                .optional(),
            value: z.nullable(AtsUpdateApplicationRequestDtoValue$.outboundSchema).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                sourceValue: "source_value",
            });
        });
}

/** @internal */
export namespace AtsUpdateApplicationRequestDtoSource$ {
    export const inboundSchema: z.ZodType<
        AtsUpdateApplicationRequestDtoSource,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            id: z.nullable(z.string()).optional(),
            name: z.nullable(z.string()).optional(),
            remote_id: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                remote_id: "remoteId",
            });
        });

    export type Outbound = {
        id?: string | null | undefined;
        name?: string | null | undefined;
        remote_id?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AtsUpdateApplicationRequestDtoSource
    > = z
        .object({
            id: z.nullable(z.string()).optional(),
            name: z.nullable(z.string()).optional(),
            remoteId: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                remoteId: "remote_id",
            });
        });
}

/** @internal */
export namespace AtsUpdateApplicationRequestDto$ {
    export const inboundSchema: z.ZodType<AtsUpdateApplicationRequestDto, z.ZodTypeDef, unknown> = z
        .object({
            application_status: z
                .nullable(
                    z.lazy(() => AtsUpdateApplicationRequestDtoApplicationStatus$.inboundSchema)
                )
                .optional(),
            interview_stage_id: z.nullable(z.string()).optional(),
            passthrough: z.nullable(z.record(z.any())).optional(),
            rejected_reason_id: z.nullable(z.string()).optional(),
            source: z
                .nullable(z.lazy(() => AtsUpdateApplicationRequestDtoSource$.inboundSchema))
                .optional(),
        })
        .transform((v) => {
            return remap$(v, {
                application_status: "applicationStatus",
                interview_stage_id: "interviewStageId",
                rejected_reason_id: "rejectedReasonId",
            });
        });

    export type Outbound = {
        application_status?:
            | AtsUpdateApplicationRequestDtoApplicationStatus$.Outbound
            | null
            | undefined;
        interview_stage_id?: string | null | undefined;
        passthrough?: { [k: string]: any } | null | undefined;
        rejected_reason_id?: string | null | undefined;
        source?: AtsUpdateApplicationRequestDtoSource$.Outbound | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AtsUpdateApplicationRequestDto> =
        z
            .object({
                applicationStatus: z
                    .nullable(
                        z.lazy(
                            () => AtsUpdateApplicationRequestDtoApplicationStatus$.outboundSchema
                        )
                    )
                    .optional(),
                interviewStageId: z.nullable(z.string()).optional(),
                passthrough: z.nullable(z.record(z.any())).optional(),
                rejectedReasonId: z.nullable(z.string()).optional(),
                source: z
                    .nullable(z.lazy(() => AtsUpdateApplicationRequestDtoSource$.outboundSchema))
                    .optional(),
            })
            .transform((v) => {
                return remap$(v, {
                    applicationStatus: "application_status",
                    interviewStageId: "interview_stage_id",
                    rejectedReasonId: "rejected_reason_id",
                });
            });
}
