/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export enum ConnectSessionCreateCategories {
    Ats = "ats",
    Hris = "hris",
    HrisLegacy = "hris-legacy",
    Crm = "crm",
    Marketing = "marketing",
    Stackone = "stackone",
}

/**
 * The metadata for the connection
 */
export class Metadata extends SpeakeasyBase {}

export class ConnectSessionCreate extends SpeakeasyBase {
    /**
     * The categories of the provider to connect to
     */
    @SpeakeasyMetadata()
    @Expose({ name: "categories" })
    categories?: ConnectSessionCreateCategories[];

    /**
     * How long the session should be valid for in seconds
     */
    @SpeakeasyMetadata()
    @Expose({ name: "expires_in" })
    expiresIn?: number;

    /**
     * The metadata for the connection
     */
    @SpeakeasyMetadata()
    @Expose({ name: "metadata" })
    @Type(() => Metadata)
    metadata?: Metadata;

    /**
     * The origin owner identifier
     */
    @SpeakeasyMetadata()
    @Expose({ name: "origin_owner_id" })
    originOwnerId: string;

    /**
     * The origin owner name
     */
    @SpeakeasyMetadata()
    @Expose({ name: "origin_owner_name" })
    originOwnerName: string;

    /**
     * The origin username
     */
    @SpeakeasyMetadata()
    @Expose({ name: "origin_username" })
    originUsername?: string;

    /**
     * The provider to connect to
     */
    @SpeakeasyMetadata()
    @Expose({ name: "provider" })
    provider?: string;
}
