/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ChannelsEnum } from "./channelsenum";
import { Message } from "./message";
import { ScheduleTypeEnum } from "./scheduletypeenum";
import { StatusEnum } from "./statusenum";
import { Expose, Transform, Type } from "class-transformer";

export class Campaign extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "archived" })
    archived?: boolean;

    /**
     * channels of the Campaign
     */
    @SpeakeasyMetadata({ elemType: ChannelsEnum })
    @Expose({ name: "channels" })
    @Type(() => ChannelsEnum)
    channels?: ChannelsEnum[];

    /**
     * The created_at date
     */
    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "draft" })
    draft?: boolean;

    /**
     * The first_sent_at date
     */
    @SpeakeasyMetadata()
    @Expose({ name: "first_sent_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    firstSentAt?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * The last_sent_at date
     */
    @SpeakeasyMetadata()
    @Expose({ name: "last_sent_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    lastSentAt?: Date;

    @SpeakeasyMetadata({ elemType: Message })
    @Expose({ name: "messages" })
    @Type(() => Message)
    messages?: Message[];

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    /**
     * The schedule type
     */
    @SpeakeasyMetadata()
    @Expose({ name: "schedule_type" })
    @Type(() => ScheduleTypeEnum)
    scheduleType?: ScheduleTypeEnum;

    /**
     * Status of the Campaign
     */
    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    @Type(() => StatusEnum)
    status?: StatusEnum;

    @SpeakeasyMetadata()
    @Expose({ name: "tags" })
    tags?: string[];

    /**
     * The updated_at date
     */
    @SpeakeasyMetadata()
    @Expose({ name: "updated_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updatedAt?: Date;
}
