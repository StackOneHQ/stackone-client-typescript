/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Message } from "./message";
import { Expose, Type } from "class-transformer";

export enum Channels {
    Email = "email",
    Sms = "sms",
    WebPush = "web_push",
    IosPush = "ios_push",
    AndroidPush = "android_push",
    Unknown = "unknown",
    UnmappedValue = "unmapped_value",
}

export class Campaign extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "archived" })
    archived?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "channels" })
    channels?: Channels[];

    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    createdAt?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "draft" })
    draft?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "first_sent_at" })
    firstSentAt?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "last_sent_at" })
    lastSentAt?: string;

    @SpeakeasyMetadata({ elemType: Message })
    @Expose({ name: "messages" })
    @Type(() => Message)
    messages?: Message[];

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "tags" })
    tags?: string[];

    @SpeakeasyMetadata()
    @Expose({ name: "updated_at" })
    updatedAt?: string;
}
