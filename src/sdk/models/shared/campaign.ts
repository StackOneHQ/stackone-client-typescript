/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ChannelsEnum, ChannelsEnum$ } from "./channelsenum";
import { Message, Message$ } from "./message";
import { ScheduleTypeEnum, ScheduleTypeEnum$ } from "./scheduletypeenum";
import { StatusEnum, StatusEnum$ } from "./statusenum";
import { z } from "zod";

export type Campaign = {
    archived?: boolean | undefined;
    /**
     * channels of the Campaign
     */
    channels?: Array<ChannelsEnum> | undefined;
    /**
     * The created_at date
     */
    createdAt?: Date | undefined;
    description?: string | undefined;
    draft?: boolean | undefined;
    /**
     * The first_sent_at date
     */
    firstSentAt?: Date | undefined;
    id?: string | undefined;
    /**
     * The last_sent_at date
     */
    lastSentAt?: Date | undefined;
    messages?: Array<Message> | undefined;
    name: string;
    /**
     * The schedule type
     */
    scheduleType?: ScheduleTypeEnum | undefined;
    /**
     * Status of the Campaign
     */
    status?: StatusEnum | undefined;
    tags?: Array<string> | undefined;
    /**
     * The updated_at date
     */
    updatedAt?: Date | undefined;
};

/** @internal */
export namespace Campaign$ {
    export type Inbound = {
        archived?: boolean | undefined;
        channels?: Array<ChannelsEnum$.Inbound> | undefined;
        created_at?: string | undefined;
        description?: string | undefined;
        draft?: boolean | undefined;
        first_sent_at?: string | undefined;
        id?: string | undefined;
        last_sent_at?: string | undefined;
        messages?: Array<Message$.Inbound> | undefined;
        name: string;
        schedule_type?: ScheduleTypeEnum$.Inbound | undefined;
        status?: StatusEnum$.Inbound | undefined;
        tags?: Array<string> | undefined;
        updated_at?: string | undefined;
    };

    export const inboundSchema: z.ZodType<Campaign, z.ZodTypeDef, Inbound> = z
        .object({
            archived: z.boolean().optional(),
            channels: z.array(ChannelsEnum$.inboundSchema).optional(),
            created_at: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            description: z.string().optional(),
            draft: z.boolean().optional(),
            first_sent_at: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            id: z.string().optional(),
            last_sent_at: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            messages: z.array(Message$.inboundSchema).optional(),
            name: z.string(),
            schedule_type: ScheduleTypeEnum$.inboundSchema.optional(),
            status: StatusEnum$.inboundSchema.optional(),
            tags: z.array(z.string()).optional(),
            updated_at: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.archived === undefined ? null : { archived: v.archived }),
                ...(v.channels === undefined ? null : { channels: v.channels }),
                ...(v.created_at === undefined ? null : { createdAt: v.created_at }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.draft === undefined ? null : { draft: v.draft }),
                ...(v.first_sent_at === undefined ? null : { firstSentAt: v.first_sent_at }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.last_sent_at === undefined ? null : { lastSentAt: v.last_sent_at }),
                ...(v.messages === undefined ? null : { messages: v.messages }),
                name: v.name,
                ...(v.schedule_type === undefined ? null : { scheduleType: v.schedule_type }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.updated_at === undefined ? null : { updatedAt: v.updated_at }),
            };
        });

    export type Outbound = {
        archived?: boolean | undefined;
        channels?: Array<ChannelsEnum$.Outbound> | undefined;
        created_at?: string | undefined;
        description?: string | undefined;
        draft?: boolean | undefined;
        first_sent_at?: string | undefined;
        id?: string | undefined;
        last_sent_at?: string | undefined;
        messages?: Array<Message$.Outbound> | undefined;
        name: string;
        schedule_type?: ScheduleTypeEnum$.Outbound | undefined;
        status?: StatusEnum$.Outbound | undefined;
        tags?: Array<string> | undefined;
        updated_at?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Campaign> = z
        .object({
            archived: z.boolean().optional(),
            channels: z.array(ChannelsEnum$.outboundSchema).optional(),
            createdAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            description: z.string().optional(),
            draft: z.boolean().optional(),
            firstSentAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            id: z.string().optional(),
            lastSentAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            messages: z.array(Message$.outboundSchema).optional(),
            name: z.string(),
            scheduleType: ScheduleTypeEnum$.outboundSchema.optional(),
            status: StatusEnum$.outboundSchema.optional(),
            tags: z.array(z.string()).optional(),
            updatedAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.archived === undefined ? null : { archived: v.archived }),
                ...(v.channels === undefined ? null : { channels: v.channels }),
                ...(v.createdAt === undefined ? null : { created_at: v.createdAt }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.draft === undefined ? null : { draft: v.draft }),
                ...(v.firstSentAt === undefined ? null : { first_sent_at: v.firstSentAt }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.lastSentAt === undefined ? null : { last_sent_at: v.lastSentAt }),
                ...(v.messages === undefined ? null : { messages: v.messages }),
                name: v.name,
                ...(v.scheduleType === undefined ? null : { schedule_type: v.scheduleType }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.updatedAt === undefined ? null : { updated_at: v.updatedAt }),
            };
        });
}
