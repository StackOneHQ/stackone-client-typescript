/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ChannelsEnum, ChannelsEnum$ } from "./channelsenum";
import { Message, Message$ } from "./message";
import { z } from "zod";

/**
 * The schedule type of the campaign.
 */
export enum CampaignValue {
    Immediate = "immediate",
    Scheduled = "scheduled",
    Recurring = "recurring",
    Custom = "custom",
    Triggered = "triggered",
}

/**
 * The schedule type
 */
export type ScheduleType = {
    /**
     * The source value of the schedule type.
     */
    sourceValue: string;
    /**
     * The schedule type of the campaign.
     */
    value: CampaignValue;
};

/**
 * The Status of the campaign.
 */
export enum CampaignSchemasValue {
    Draft = "draft",
    Archived = "archived",
    Live = "live",
}

/**
 * Status of the Campaign
 */
export type Status = {
    /**
     * The source value of the Status.
     */
    sourceValue: string;
    /**
     * The Status of the campaign.
     */
    value: CampaignSchemasValue;
};

export type Campaign = {
    archived?: boolean | null | undefined;
    /**
     * channels of the Campaign
     */
    channels?: Array<ChannelsEnum> | null | undefined;
    /**
     * The created_at date
     */
    createdAt?: Date | null | undefined;
    description?: string | null | undefined;
    draft?: boolean | null | undefined;
    /**
     * The first_sent_at date
     */
    firstSentAt?: Date | null | undefined;
    id?: string | null | undefined;
    /**
     * The last_sent_at date
     */
    lastSentAt?: Date | null | undefined;
    messages?: Array<Message> | null | undefined;
    name: string;
    /**
     * The schedule type
     */
    scheduleType?: ScheduleType | null | undefined;
    /**
     * Status of the Campaign
     */
    status?: Status | null | undefined;
    tags?: Array<string> | null | undefined;
    /**
     * The updated_at date
     */
    updatedAt?: Date | null | undefined;
};

/** @internal */
export const CampaignValue$ = z.nativeEnum(CampaignValue);

/** @internal */
export namespace ScheduleType$ {
    export type Inbound = {
        source_value: string;
        value: CampaignValue;
    };

    export const inboundSchema: z.ZodType<ScheduleType, z.ZodTypeDef, Inbound> = z
        .object({
            source_value: z.string(),
            value: CampaignValue$,
        })
        .transform((v) => {
            return {
                sourceValue: v.source_value,
                value: v.value,
            };
        });

    export type Outbound = {
        source_value: string;
        value: CampaignValue;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ScheduleType> = z
        .object({
            sourceValue: z.string(),
            value: CampaignValue$,
        })
        .transform((v) => {
            return {
                source_value: v.sourceValue,
                value: v.value,
            };
        });
}

/** @internal */
export const CampaignSchemasValue$ = z.nativeEnum(CampaignSchemasValue);

/** @internal */
export namespace Status$ {
    export type Inbound = {
        source_value: string;
        value: CampaignSchemasValue;
    };

    export const inboundSchema: z.ZodType<Status, z.ZodTypeDef, Inbound> = z
        .object({
            source_value: z.string(),
            value: CampaignSchemasValue$,
        })
        .transform((v) => {
            return {
                sourceValue: v.source_value,
                value: v.value,
            };
        });

    export type Outbound = {
        source_value: string;
        value: CampaignSchemasValue;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Status> = z
        .object({
            sourceValue: z.string(),
            value: CampaignSchemasValue$,
        })
        .transform((v) => {
            return {
                source_value: v.sourceValue,
                value: v.value,
            };
        });
}

/** @internal */
export namespace Campaign$ {
    export type Inbound = {
        archived?: boolean | null | undefined;
        channels?: Array<ChannelsEnum$.Inbound> | null | undefined;
        created_at?: string | null | undefined;
        description?: string | null | undefined;
        draft?: boolean | null | undefined;
        first_sent_at?: string | null | undefined;
        id?: string | null | undefined;
        last_sent_at?: string | null | undefined;
        messages?: Array<Message$.Inbound> | null | undefined;
        name: string;
        schedule_type?: ScheduleType$.Inbound | null | undefined;
        status?: Status$.Inbound | null | undefined;
        tags?: Array<string> | null | undefined;
        updated_at?: string | null | undefined;
    };

    export const inboundSchema: z.ZodType<Campaign, z.ZodTypeDef, Inbound> = z
        .object({
            archived: z.boolean().nullable().optional(),
            channels: z.array(ChannelsEnum$.inboundSchema).nullable().optional(),
            created_at: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .nullable()
                .optional(),
            description: z.string().nullable().optional(),
            draft: z.boolean().nullable().optional(),
            first_sent_at: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .nullable()
                .optional(),
            id: z.string().nullable().optional(),
            last_sent_at: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .nullable()
                .optional(),
            messages: z.array(Message$.inboundSchema).nullable().optional(),
            name: z.string(),
            schedule_type: z
                .lazy(() => ScheduleType$.inboundSchema)
                .nullable()
                .optional(),
            status: z
                .lazy(() => Status$.inboundSchema)
                .nullable()
                .optional(),
            tags: z.array(z.string()).nullable().optional(),
            updated_at: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .nullable()
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.archived === undefined ? null : { archived: v.archived }),
                ...(v.channels === undefined ? null : { channels: v.channels }),
                ...(v.created_at === undefined ? null : { createdAt: v.created_at }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.draft === undefined ? null : { draft: v.draft }),
                ...(v.first_sent_at === undefined ? null : { firstSentAt: v.first_sent_at }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.last_sent_at === undefined ? null : { lastSentAt: v.last_sent_at }),
                ...(v.messages === undefined ? null : { messages: v.messages }),
                name: v.name,
                ...(v.schedule_type === undefined ? null : { scheduleType: v.schedule_type }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.updated_at === undefined ? null : { updatedAt: v.updated_at }),
            };
        });

    export type Outbound = {
        archived?: boolean | null | undefined;
        channels?: Array<ChannelsEnum$.Outbound> | null | undefined;
        created_at?: string | null | undefined;
        description?: string | null | undefined;
        draft?: boolean | null | undefined;
        first_sent_at?: string | null | undefined;
        id?: string | null | undefined;
        last_sent_at?: string | null | undefined;
        messages?: Array<Message$.Outbound> | null | undefined;
        name: string;
        schedule_type?: ScheduleType$.Outbound | null | undefined;
        status?: Status$.Outbound | null | undefined;
        tags?: Array<string> | null | undefined;
        updated_at?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Campaign> = z
        .object({
            archived: z.boolean().nullable().optional(),
            channels: z.array(ChannelsEnum$.outboundSchema).nullable().optional(),
            createdAt: z
                .date()
                .transform((v) => v.toISOString())
                .nullable()
                .optional(),
            description: z.string().nullable().optional(),
            draft: z.boolean().nullable().optional(),
            firstSentAt: z
                .date()
                .transform((v) => v.toISOString())
                .nullable()
                .optional(),
            id: z.string().nullable().optional(),
            lastSentAt: z
                .date()
                .transform((v) => v.toISOString())
                .nullable()
                .optional(),
            messages: z.array(Message$.outboundSchema).nullable().optional(),
            name: z.string(),
            scheduleType: z
                .lazy(() => ScheduleType$.outboundSchema)
                .nullable()
                .optional(),
            status: z
                .lazy(() => Status$.outboundSchema)
                .nullable()
                .optional(),
            tags: z.array(z.string()).nullable().optional(),
            updatedAt: z
                .date()
                .transform((v) => v.toISOString())
                .nullable()
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.archived === undefined ? null : { archived: v.archived }),
                ...(v.channels === undefined ? null : { channels: v.channels }),
                ...(v.createdAt === undefined ? null : { created_at: v.createdAt }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.draft === undefined ? null : { draft: v.draft }),
                ...(v.firstSentAt === undefined ? null : { first_sent_at: v.firstSentAt }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.lastSentAt === undefined ? null : { last_sent_at: v.lastSentAt }),
                ...(v.messages === undefined ? null : { messages: v.messages }),
                name: v.name,
                ...(v.scheduleType === undefined ? null : { schedule_type: v.scheduleType }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.updatedAt === undefined ? null : { updated_at: v.updatedAt }),
            };
        });
}
