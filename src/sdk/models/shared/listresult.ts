/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  List,
  List$inboundSchema,
  List$Outbound,
  List$outboundSchema,
} from "./list.js";
import {
  RawResponse,
  RawResponse$inboundSchema,
  RawResponse$Outbound,
  RawResponse$outboundSchema,
} from "./rawresponse.js";

export type ListResult = {
  data: List;
  raw?: Array<RawResponse> | null | undefined;
};

/** @internal */
export const ListResult$inboundSchema: z.ZodType<
  ListResult,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: List$inboundSchema,
  raw: z.nullable(z.array(RawResponse$inboundSchema)).optional(),
});

/** @internal */
export type ListResult$Outbound = {
  data: List$Outbound;
  raw?: Array<RawResponse$Outbound> | null | undefined;
};

/** @internal */
export const ListResult$outboundSchema: z.ZodType<
  ListResult$Outbound,
  z.ZodTypeDef,
  ListResult
> = z.object({
  data: List$outboundSchema,
  raw: z.nullable(z.array(RawResponse$outboundSchema)).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListResult$ {
  /** @deprecated use `ListResult$inboundSchema` instead. */
  export const inboundSchema = ListResult$inboundSchema;
  /** @deprecated use `ListResult$outboundSchema` instead. */
  export const outboundSchema = ListResult$outboundSchema;
  /** @deprecated use `ListResult$Outbound` instead. */
  export type Outbound = ListResult$Outbound;
}
