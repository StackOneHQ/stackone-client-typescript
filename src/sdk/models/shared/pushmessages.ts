/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type PushMessagesMessageContent = {
    body: string;
};

export enum PushMessagesValue {
    Email = "email",
    Sms = "sms",
    WebPush = "web_push",
    IosPush = "ios_push",
    AndroidPush = "android_push",
    AppPush = "app_push",
    OmniChannel = "omni_channel",
    Unknown = "unknown",
    UnmappedValue = "unmapped_value",
}

export type PushMessagesMessageType = {
    sourceValue: string;
    value: PushMessagesValue;
};

export type PushMessages = {
    id?: string | null | undefined;
    messageContent?: PushMessagesMessageContent | null | undefined;
    messageType?: PushMessagesMessageType | null | undefined;
    name?: string | null | undefined;
};

/** @internal */
export namespace PushMessagesMessageContent$ {
    export type Inbound = {
        body: string;
    };

    export const inboundSchema: z.ZodType<PushMessagesMessageContent, z.ZodTypeDef, Inbound> = z
        .object({
            body: z.string(),
        })
        .transform((v) => {
            return {
                body: v.body,
            };
        });

    export type Outbound = {
        body: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PushMessagesMessageContent> = z
        .object({
            body: z.string(),
        })
        .transform((v) => {
            return {
                body: v.body,
            };
        });
}

/** @internal */
export const PushMessagesValue$ = z.nativeEnum(PushMessagesValue);

/** @internal */
export namespace PushMessagesMessageType$ {
    export type Inbound = {
        source_value: string;
        value: PushMessagesValue;
    };

    export const inboundSchema: z.ZodType<PushMessagesMessageType, z.ZodTypeDef, Inbound> = z
        .object({
            source_value: z.string(),
            value: PushMessagesValue$,
        })
        .transform((v) => {
            return {
                sourceValue: v.source_value,
                value: v.value,
            };
        });

    export type Outbound = {
        source_value: string;
        value: PushMessagesValue;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PushMessagesMessageType> = z
        .object({
            sourceValue: z.string(),
            value: PushMessagesValue$,
        })
        .transform((v) => {
            return {
                source_value: v.sourceValue,
                value: v.value,
            };
        });
}

/** @internal */
export namespace PushMessages$ {
    export type Inbound = {
        id?: string | null | undefined;
        message_content?: PushMessagesMessageContent$.Inbound | null | undefined;
        message_type?: PushMessagesMessageType$.Inbound | null | undefined;
        name?: string | null | undefined;
    };

    export const inboundSchema: z.ZodType<PushMessages, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.nullable(z.string()).optional(),
            message_content: z
                .nullable(z.lazy(() => PushMessagesMessageContent$.inboundSchema))
                .optional(),
            message_type: z
                .nullable(z.lazy(() => PushMessagesMessageType$.inboundSchema))
                .optional(),
            name: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.message_content === undefined ? null : { messageContent: v.message_content }),
                ...(v.message_type === undefined ? null : { messageType: v.message_type }),
                ...(v.name === undefined ? null : { name: v.name }),
            };
        });

    export type Outbound = {
        id?: string | null | undefined;
        message_content?: PushMessagesMessageContent$.Outbound | null | undefined;
        message_type?: PushMessagesMessageType$.Outbound | null | undefined;
        name?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PushMessages> = z
        .object({
            id: z.nullable(z.string()).optional(),
            messageContent: z
                .nullable(z.lazy(() => PushMessagesMessageContent$.outboundSchema))
                .optional(),
            messageType: z
                .nullable(z.lazy(() => PushMessagesMessageType$.outboundSchema))
                .optional(),
            name: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.messageContent === undefined ? null : { message_content: v.messageContent }),
                ...(v.messageType === undefined ? null : { message_type: v.messageType }),
                ...(v.name === undefined ? null : { name: v.name }),
            };
        });
}
