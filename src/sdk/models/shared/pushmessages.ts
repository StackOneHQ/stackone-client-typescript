/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { MessageTypeEnum, MessageTypeEnum$ } from "./messagetypeenum";
import { PushMessageContents, PushMessageContents$ } from "./pushmessagecontents";
import { z } from "zod";

export type PushMessages = {
    id?: string | undefined;
    messageContent?: PushMessageContents | undefined;
    messageType?: MessageTypeEnum | undefined;
    name?: string | undefined;
};

/** @internal */
export namespace PushMessages$ {
    export type Inbound = {
        id?: string | undefined;
        message_content?: PushMessageContents$.Inbound | undefined;
        message_type?: MessageTypeEnum$.Inbound | undefined;
        name?: string | undefined;
    };

    export const inboundSchema: z.ZodType<PushMessages, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            message_content: PushMessageContents$.inboundSchema.optional(),
            message_type: MessageTypeEnum$.inboundSchema.optional(),
            name: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.message_content === undefined ? null : { messageContent: v.message_content }),
                ...(v.message_type === undefined ? null : { messageType: v.message_type }),
                ...(v.name === undefined ? null : { name: v.name }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        message_content?: PushMessageContents$.Outbound | undefined;
        message_type?: MessageTypeEnum$.Outbound | undefined;
        name?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PushMessages> = z
        .object({
            id: z.string().optional(),
            messageContent: PushMessageContents$.outboundSchema.optional(),
            messageType: MessageTypeEnum$.outboundSchema.optional(),
            name: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.messageContent === undefined ? null : { message_content: v.messageContent }),
                ...(v.messageType === undefined ? null : { message_type: v.messageType }),
                ...(v.name === undefined ? null : { name: v.name }),
            };
        });
}
