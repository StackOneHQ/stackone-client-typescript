/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type PushMessagesMessageContent = {
    body?: string | null | undefined;
};

export type PushMessages4 = {};

/**
 * The original value from the provider used to derive the unified message type.
 */
export type PushMessagesSourceValue = PushMessages4 | string | number | boolean;

/**
 * The unified message type.
 */
export type PushMessagesValue = {};

export type PushMessagesMessageType = {
    /**
     * The original value from the provider used to derive the unified message type.
     */
    sourceValue?: PushMessages4 | string | number | boolean | null | undefined;
    /**
     * The unified message type.
     */
    value?: PushMessagesValue | null | undefined;
};

export type PushMessages = {
    /**
     * Unique identifier
     */
    id?: string | null | undefined;
    messageContent?: PushMessagesMessageContent | null | undefined;
    messageType?: PushMessagesMessageType | null | undefined;
    name?: string | null | undefined;
    /**
     * Provider's unique identifier
     */
    remoteId?: string | null | undefined;
};

/** @internal */
export namespace PushMessagesMessageContent$ {
    export type Inbound = {
        body?: string | null | undefined;
    };

    export const inboundSchema: z.ZodType<PushMessagesMessageContent, z.ZodTypeDef, Inbound> = z
        .object({
            body: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.body === undefined ? null : { body: v.body }),
            };
        });

    export type Outbound = {
        body?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PushMessagesMessageContent> = z
        .object({
            body: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.body === undefined ? null : { body: v.body }),
            };
        });
}

/** @internal */
export namespace PushMessages4$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<PushMessages4, z.ZodTypeDef, Inbound> = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PushMessages4> = z.object({});
}

/** @internal */
export namespace PushMessagesSourceValue$ {
    export type Inbound = PushMessages4$.Inbound | string | number | boolean;

    export type Outbound = PushMessages4$.Outbound | string | number | boolean;
    export const inboundSchema: z.ZodType<PushMessagesSourceValue, z.ZodTypeDef, Inbound> = z.union(
        [z.lazy(() => PushMessages4$.inboundSchema), z.string(), z.number(), z.boolean()]
    );
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PushMessagesSourceValue> =
        z.union([z.lazy(() => PushMessages4$.outboundSchema), z.string(), z.number(), z.boolean()]);
}

/** @internal */
export namespace PushMessagesValue$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<PushMessagesValue, z.ZodTypeDef, Inbound> = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PushMessagesValue> = z.object(
        {}
    );
}

/** @internal */
export namespace PushMessagesMessageType$ {
    export type Inbound = {
        source_value?: PushMessages4$.Inbound | string | number | boolean | null | undefined;
        value?: PushMessagesValue$.Inbound | null | undefined;
    };

    export const inboundSchema: z.ZodType<PushMessagesMessageType, z.ZodTypeDef, Inbound> = z
        .object({
            source_value: z
                .nullable(
                    z.union([
                        z.lazy(() => PushMessages4$.inboundSchema),
                        z.string(),
                        z.number(),
                        z.boolean(),
                    ])
                )
                .optional(),
            value: z.nullable(z.lazy(() => PushMessagesValue$.inboundSchema)).optional(),
        })
        .transform((v) => {
            return {
                ...(v.source_value === undefined ? null : { sourceValue: v.source_value }),
                ...(v.value === undefined ? null : { value: v.value }),
            };
        });

    export type Outbound = {
        source_value?: PushMessages4$.Outbound | string | number | boolean | null | undefined;
        value?: PushMessagesValue$.Outbound | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PushMessagesMessageType> = z
        .object({
            sourceValue: z
                .nullable(
                    z.union([
                        z.lazy(() => PushMessages4$.outboundSchema),
                        z.string(),
                        z.number(),
                        z.boolean(),
                    ])
                )
                .optional(),
            value: z.nullable(z.lazy(() => PushMessagesValue$.outboundSchema)).optional(),
        })
        .transform((v) => {
            return {
                ...(v.sourceValue === undefined ? null : { source_value: v.sourceValue }),
                ...(v.value === undefined ? null : { value: v.value }),
            };
        });
}

/** @internal */
export namespace PushMessages$ {
    export type Inbound = {
        id?: string | null | undefined;
        message_content?: PushMessagesMessageContent$.Inbound | null | undefined;
        message_type?: PushMessagesMessageType$.Inbound | null | undefined;
        name?: string | null | undefined;
        remote_id?: string | null | undefined;
    };

    export const inboundSchema: z.ZodType<PushMessages, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.nullable(z.string()).optional(),
            message_content: z
                .nullable(z.lazy(() => PushMessagesMessageContent$.inboundSchema))
                .optional(),
            message_type: z
                .nullable(z.lazy(() => PushMessagesMessageType$.inboundSchema))
                .optional(),
            name: z.nullable(z.string()).optional(),
            remote_id: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.message_content === undefined ? null : { messageContent: v.message_content }),
                ...(v.message_type === undefined ? null : { messageType: v.message_type }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.remote_id === undefined ? null : { remoteId: v.remote_id }),
            };
        });

    export type Outbound = {
        id?: string | null | undefined;
        message_content?: PushMessagesMessageContent$.Outbound | null | undefined;
        message_type?: PushMessagesMessageType$.Outbound | null | undefined;
        name?: string | null | undefined;
        remote_id?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PushMessages> = z
        .object({
            id: z.nullable(z.string()).optional(),
            messageContent: z
                .nullable(z.lazy(() => PushMessagesMessageContent$.outboundSchema))
                .optional(),
            messageType: z
                .nullable(z.lazy(() => PushMessagesMessageType$.outboundSchema))
                .optional(),
            name: z.nullable(z.string()).optional(),
            remoteId: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.messageContent === undefined ? null : { message_content: v.messageContent }),
                ...(v.messageType === undefined ? null : { message_type: v.messageType }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.remoteId === undefined ? null : { remote_id: v.remoteId }),
            };
        });
}
