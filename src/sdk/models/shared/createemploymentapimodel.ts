/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateEmploymentApiModelSchemasContractType4 = {};

export type CreateEmploymentApiModelSchemasContractTypeSourceValue =
  | CreateEmploymentApiModelSchemasContractType4
  | string
  | number
  | boolean
  | Array<any>;

export enum CreateEmploymentApiModelSchemasContractTypeValue {
  FullTime = "full_time",
  Shifts = "shifts",
  PartTime = "part_time",
  UnmappedValue = "unmapped_value",
}
export type CreateEmploymentApiModelSchemasContractTypeValueOpen = OpenEnum<
  typeof CreateEmploymentApiModelSchemasContractTypeValue
>;

/**
 * The employment work schedule type (e.g., full-time, part-time)
 */
export type CreateEmploymentApiModelContractType = {
  sourceValue?:
    | CreateEmploymentApiModelSchemasContractType4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?:
    | CreateEmploymentApiModelSchemasContractTypeValueOpen
    | null
    | undefined;
};

/**
 * The employment work schedule type
 */
export type ContractType = {
  /**
   * The employment work schedule type (e.g., full-time, part-time)
   */
  contractType?: CreateEmploymentApiModelContractType | null | undefined;
  /**
   * Unique identifier
   */
  id?: string | null | undefined;
  /**
   * The label of the employment type
   */
  label?: string | null | undefined;
  /**
   * Provider's unique identifier
   */
  remoteId?: string | null | undefined;
};

export type CreateEmploymentApiModel4 = {};

export type CreateEmploymentApiModelSourceValue =
  | CreateEmploymentApiModel4
  | string
  | number
  | boolean
  | Array<any>;

export enum CreateEmploymentApiModelValue {
  FullTime = "full_time",
  Shifts = "shifts",
  PartTime = "part_time",
  UnmappedValue = "unmapped_value",
}
export type CreateEmploymentApiModelValueOpen = OpenEnum<
  typeof CreateEmploymentApiModelValue
>;

/**
 * The employment work schedule type (e.g., full-time, part-time)
 *
 * @deprecated class: This will be removed in a future release, please migrate away from it as soon as possible.
 */
export type EmploymentContractType = {
  sourceValue?:
    | CreateEmploymentApiModel4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: CreateEmploymentApiModelValueOpen | null | undefined;
};

export type CreateEmploymentApiModelSchemas4 = {};

/**
 * The source value of the employment type.
 */
export type CreateEmploymentApiModelSchemasSourceValue =
  | CreateEmploymentApiModelSchemas4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The type of the employment.
 */
export enum CreateEmploymentApiModelSchemasValue {
  Contractor = "contractor",
  Intern = "intern",
  Permanent = "permanent",
  Apprentice = "apprentice",
  Freelance = "freelance",
  Terminated = "terminated",
  Temporary = "temporary",
  Seasonal = "seasonal",
  Volunteer = "volunteer",
  Probation = "probation",
  Internal = "internal",
  External = "external",
  Expatriate = "expatriate",
  EmployerOfRecord = "employer_of_record",
  Casual = "casual",
  Programme = "Programme",
  UnmappedValue = "unmapped_value",
}
/**
 * The type of the employment.
 */
export type CreateEmploymentApiModelSchemasValueOpen = OpenEnum<
  typeof CreateEmploymentApiModelSchemasValue
>;

/**
 * The type of employment (e.g., contractor, permanent)
 *
 * @deprecated class: This will be removed in a future release, please migrate away from it as soon as possible.
 */
export type EmploymentType = {
  /**
   * The source value of the employment type.
   */
  sourceValue?:
    | CreateEmploymentApiModelSchemas4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The type of the employment.
   */
  value?: CreateEmploymentApiModelSchemasValueOpen | null | undefined;
};

/**
 * Represents the employeeâ€™s position within the organizational hierarchy.
 */
export type Grade = {
  /**
   * description of the grade
   */
  description?: string | null | undefined;
  /**
   * The reference id
   */
  id?: string | null | undefined;
  /**
   * The reference name
   */
  name?: string | null | undefined;
  /**
   * Provider's unique identifier
   */
  remoteId?: string | null | undefined;
};

export type CreateEmploymentApiModelSchemasPayFrequency4 = {};

/**
 * The source value of the pay frequency.
 */
export type CreateEmploymentApiModelSchemasPayFrequencySourceValue =
  | CreateEmploymentApiModelSchemasPayFrequency4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The pay frequency of the job postings.
 */
export enum CreateEmploymentApiModelSchemasPayFrequencyValue {
  Hourly = "hourly",
  Weekly = "weekly",
  BiWeekly = "bi_weekly",
  FourWeekly = "four_weekly",
  SemiMonthly = "semi_monthly",
  Monthly = "monthly",
  BiMonthly = "bi_monthly",
  Quarterly = "quarterly",
  SemiAnnually = "semi_annually",
  Yearly = "yearly",
  ThirteenMonthly = "thirteen_monthly",
  ProRata = "pro_rata",
  UnmappedValue = "unmapped_value",
  HalfYearly = "half_yearly",
  Daily = "daily",
}
/**
 * The pay frequency of the job postings.
 */
export type CreateEmploymentApiModelSchemasPayFrequencyValueOpen = OpenEnum<
  typeof CreateEmploymentApiModelSchemasPayFrequencyValue
>;

/**
 * The pay frequency
 */
export type PayFrequency = {
  /**
   * The source value of the pay frequency.
   */
  sourceValue?:
    | CreateEmploymentApiModelSchemasPayFrequency4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The pay frequency of the job postings.
   */
  value?:
    | CreateEmploymentApiModelSchemasPayFrequencyValueOpen
    | null
    | undefined;
};

export type CreateEmploymentApiModelSchemasPayPeriod4 = {};

/**
 * The source value of the pay period.
 */
export type CreateEmploymentApiModelSchemasPayPeriodSourceValue =
  | CreateEmploymentApiModelSchemasPayPeriod4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The pay period of the job postings.
 */
export enum CreateEmploymentApiModelSchemasPayPeriodValue {
  Hour = "hour",
  Day = "day",
  Week = "week",
  EveryTwoWeeks = "every_two_weeks",
  Month = "month",
  TwiceAMonth = "twice_a_month",
  EveryTwoMonths = "every_two_months",
  Quarter = "quarter",
  EverySixMonths = "every_six_months",
  Year = "year",
  OneOff = "one_off",
  None = "none",
  UnmappedValue = "unmapped_value",
}
/**
 * The pay period of the job postings.
 */
export type CreateEmploymentApiModelSchemasPayPeriodValueOpen = OpenEnum<
  typeof CreateEmploymentApiModelSchemasPayPeriodValue
>;

/**
 * The pay period
 */
export type PayPeriod = {
  /**
   * The source value of the pay period.
   */
  sourceValue?:
    | CreateEmploymentApiModelSchemasPayPeriod4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The pay period of the job postings.
   */
  value?: CreateEmploymentApiModelSchemasPayPeriodValueOpen | null | undefined;
};

export type CreateEmploymentApiModelSchemasType4 = {};

export type CreateEmploymentApiModelSchemasTypeSourceValue =
  | CreateEmploymentApiModelSchemasType4
  | string
  | number
  | boolean
  | Array<any>;

export enum CreateEmploymentApiModelSchemasTypeValue {
  Contractor = "contractor",
  Intern = "intern",
  Permanent = "permanent",
  Apprentice = "apprentice",
  Freelance = "freelance",
  Terminated = "terminated",
  Temporary = "temporary",
  Seasonal = "seasonal",
  Volunteer = "volunteer",
  Probation = "probation",
  Internal = "internal",
  External = "external",
  Expatriate = "expatriate",
  EmployerOfRecord = "employer_of_record",
  Casual = "casual",
  Programme = "Programme",
  UnmappedValue = "unmapped_value",
}
export type CreateEmploymentApiModelSchemasTypeValueOpen = OpenEnum<
  typeof CreateEmploymentApiModelSchemasTypeValue
>;

/**
 * The type of employment (e.g., contractor, permanent)
 */
export type CreateEmploymentApiModelSchemasType = {
  sourceValue?:
    | CreateEmploymentApiModelSchemasType4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: CreateEmploymentApiModelSchemasTypeValueOpen | null | undefined;
};

/**
 * The type of employment
 */
export type CreateEmploymentApiModelType = {
  /**
   * Unique identifier
   */
  id?: string | null | undefined;
  /**
   * The label of the employment type
   */
  label?: string | null | undefined;
  /**
   * Provider's unique identifier
   */
  remoteId?: string | null | undefined;
  /**
   * The type of employment (e.g., contractor, permanent)
   */
  type?: CreateEmploymentApiModelSchemasType | null | undefined;
};

export type CreateEmploymentApiModelSchemasWorkTime4 = {};

export type CreateEmploymentApiModelSchemasWorkTimeSourceValue =
  | CreateEmploymentApiModelSchemasWorkTime4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The unified value for the period.
 */
export enum CreateEmploymentApiModelSchemasWorkTimeValue {
  Day = "day",
  Week = "week",
  Month = "month",
  Year = "year",
  UnmappedValue = "unmapped_value",
}
/**
 * The unified value for the period.
 */
export type CreateEmploymentApiModelSchemasWorkTimeValueOpen = OpenEnum<
  typeof CreateEmploymentApiModelSchemasWorkTimeValue
>;

/**
 * The duration unit of the work time
 */
export type CreateEmploymentApiModelDurationUnit = {
  sourceValue?:
    | CreateEmploymentApiModelSchemasWorkTime4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The unified value for the period.
   */
  value?: CreateEmploymentApiModelSchemasWorkTimeValueOpen | null | undefined;
};

export type WorkTime = {
  /**
   * The work time duration in ISO 8601 duration format
   */
  duration?: string | null | undefined;
  /**
   * The duration unit of the work time
   */
  durationUnit?: CreateEmploymentApiModelDurationUnit | null | undefined;
};

export type CreateEmploymentApiModel = {
  /**
   * The employment work schedule type
   */
  contractType?: ContractType | null | undefined;
  /**
   * The effective date of the employment contract
   */
  effectiveDate?: Date | null | undefined;
  /**
   * The employment work schedule type (e.g., full-time, part-time)
   *
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  employmentContractType?: EmploymentContractType | null | undefined;
  /**
   * The type of employment (e.g., contractor, permanent)
   *
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  employmentType?: EmploymentType | null | undefined;
  /**
   * The end date of employment
   */
  endDate?: Date | null | undefined;
  /**
   * Represents the employeeâ€™s position within the organizational hierarchy.
   */
  grade?: Grade | null | undefined;
  /**
   * The employee job id
   */
  jobId?: string | null | undefined;
  /**
   * The job title of the employee
   */
  jobTitle?: string | null | undefined;
  /**
   * The currency used for pay
   */
  payCurrency?: string | null | undefined;
  /**
   * The pay frequency
   */
  payFrequency?: PayFrequency | null | undefined;
  /**
   * The pay period
   */
  payPeriod?: PayPeriod | null | undefined;
  /**
   * The pay rate for the employee
   */
  payRate?: string | null | undefined;
  /**
   * The payroll code of the employee
   */
  payrollCode?: string | null | undefined;
  /**
   * The type of employment
   */
  type?: CreateEmploymentApiModelType | null | undefined;
  /**
   * Custom Unified Fields configured in your StackOne project
   */
  unifiedCustomFields?: { [k: string]: any } | null | undefined;
  workTime?: WorkTime | null | undefined;
};

/** @internal */
export const CreateEmploymentApiModelSchemasContractType4$inboundSchema:
  z.ZodType<
    CreateEmploymentApiModelSchemasContractType4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type CreateEmploymentApiModelSchemasContractType4$Outbound = {};

/** @internal */
export const CreateEmploymentApiModelSchemasContractType4$outboundSchema:
  z.ZodType<
    CreateEmploymentApiModelSchemasContractType4$Outbound,
    z.ZodTypeDef,
    CreateEmploymentApiModelSchemasContractType4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEmploymentApiModelSchemasContractType4$ {
  /** @deprecated use `CreateEmploymentApiModelSchemasContractType4$inboundSchema` instead. */
  export const inboundSchema =
    CreateEmploymentApiModelSchemasContractType4$inboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemasContractType4$outboundSchema` instead. */
  export const outboundSchema =
    CreateEmploymentApiModelSchemasContractType4$outboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemasContractType4$Outbound` instead. */
  export type Outbound = CreateEmploymentApiModelSchemasContractType4$Outbound;
}

export function createEmploymentApiModelSchemasContractType4ToJSON(
  createEmploymentApiModelSchemasContractType4:
    CreateEmploymentApiModelSchemasContractType4,
): string {
  return JSON.stringify(
    CreateEmploymentApiModelSchemasContractType4$outboundSchema.parse(
      createEmploymentApiModelSchemasContractType4,
    ),
  );
}

export function createEmploymentApiModelSchemasContractType4FromJSON(
  jsonString: string,
): SafeParseResult<
  CreateEmploymentApiModelSchemasContractType4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEmploymentApiModelSchemasContractType4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateEmploymentApiModelSchemasContractType4' from JSON`,
  );
}

/** @internal */
export const CreateEmploymentApiModelSchemasContractTypeSourceValue$inboundSchema:
  z.ZodType<
    CreateEmploymentApiModelSchemasContractTypeSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => CreateEmploymentApiModelSchemasContractType4$inboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type CreateEmploymentApiModelSchemasContractTypeSourceValue$Outbound =
  | CreateEmploymentApiModelSchemasContractType4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const CreateEmploymentApiModelSchemasContractTypeSourceValue$outboundSchema:
  z.ZodType<
    CreateEmploymentApiModelSchemasContractTypeSourceValue$Outbound,
    z.ZodTypeDef,
    CreateEmploymentApiModelSchemasContractTypeSourceValue
  > = z.union([
    z.lazy(() => CreateEmploymentApiModelSchemasContractType4$outboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEmploymentApiModelSchemasContractTypeSourceValue$ {
  /** @deprecated use `CreateEmploymentApiModelSchemasContractTypeSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    CreateEmploymentApiModelSchemasContractTypeSourceValue$inboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemasContractTypeSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    CreateEmploymentApiModelSchemasContractTypeSourceValue$outboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemasContractTypeSourceValue$Outbound` instead. */
  export type Outbound =
    CreateEmploymentApiModelSchemasContractTypeSourceValue$Outbound;
}

export function createEmploymentApiModelSchemasContractTypeSourceValueToJSON(
  createEmploymentApiModelSchemasContractTypeSourceValue:
    CreateEmploymentApiModelSchemasContractTypeSourceValue,
): string {
  return JSON.stringify(
    CreateEmploymentApiModelSchemasContractTypeSourceValue$outboundSchema.parse(
      createEmploymentApiModelSchemasContractTypeSourceValue,
    ),
  );
}

export function createEmploymentApiModelSchemasContractTypeSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateEmploymentApiModelSchemasContractTypeSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEmploymentApiModelSchemasContractTypeSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'CreateEmploymentApiModelSchemasContractTypeSourceValue' from JSON`,
  );
}

/** @internal */
export const CreateEmploymentApiModelSchemasContractTypeValue$inboundSchema:
  z.ZodType<
    CreateEmploymentApiModelSchemasContractTypeValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(CreateEmploymentApiModelSchemasContractTypeValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const CreateEmploymentApiModelSchemasContractTypeValue$outboundSchema:
  z.ZodType<
    CreateEmploymentApiModelSchemasContractTypeValueOpen,
    z.ZodTypeDef,
    CreateEmploymentApiModelSchemasContractTypeValueOpen
  > = z.union([
    z.nativeEnum(CreateEmploymentApiModelSchemasContractTypeValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEmploymentApiModelSchemasContractTypeValue$ {
  /** @deprecated use `CreateEmploymentApiModelSchemasContractTypeValue$inboundSchema` instead. */
  export const inboundSchema =
    CreateEmploymentApiModelSchemasContractTypeValue$inboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemasContractTypeValue$outboundSchema` instead. */
  export const outboundSchema =
    CreateEmploymentApiModelSchemasContractTypeValue$outboundSchema;
}

/** @internal */
export const CreateEmploymentApiModelContractType$inboundSchema: z.ZodType<
  CreateEmploymentApiModelContractType,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() => CreateEmploymentApiModelSchemasContractType4$inboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    CreateEmploymentApiModelSchemasContractTypeValue$inboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type CreateEmploymentApiModelContractType$Outbound = {
  source_value?:
    | CreateEmploymentApiModelSchemasContractType4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const CreateEmploymentApiModelContractType$outboundSchema: z.ZodType<
  CreateEmploymentApiModelContractType$Outbound,
  z.ZodTypeDef,
  CreateEmploymentApiModelContractType
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() => CreateEmploymentApiModelSchemasContractType4$outboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    CreateEmploymentApiModelSchemasContractTypeValue$outboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEmploymentApiModelContractType$ {
  /** @deprecated use `CreateEmploymentApiModelContractType$inboundSchema` instead. */
  export const inboundSchema =
    CreateEmploymentApiModelContractType$inboundSchema;
  /** @deprecated use `CreateEmploymentApiModelContractType$outboundSchema` instead. */
  export const outboundSchema =
    CreateEmploymentApiModelContractType$outboundSchema;
  /** @deprecated use `CreateEmploymentApiModelContractType$Outbound` instead. */
  export type Outbound = CreateEmploymentApiModelContractType$Outbound;
}

export function createEmploymentApiModelContractTypeToJSON(
  createEmploymentApiModelContractType: CreateEmploymentApiModelContractType,
): string {
  return JSON.stringify(
    CreateEmploymentApiModelContractType$outboundSchema.parse(
      createEmploymentApiModelContractType,
    ),
  );
}

export function createEmploymentApiModelContractTypeFromJSON(
  jsonString: string,
): SafeParseResult<CreateEmploymentApiModelContractType, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEmploymentApiModelContractType$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEmploymentApiModelContractType' from JSON`,
  );
}

/** @internal */
export const ContractType$inboundSchema: z.ZodType<
  ContractType,
  z.ZodTypeDef,
  unknown
> = z.object({
  contract_type: z.nullable(
    z.lazy(() => CreateEmploymentApiModelContractType$inboundSchema),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  label: z.nullable(z.string()).optional(),
  remote_id: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "contract_type": "contractType",
    "remote_id": "remoteId",
  });
});

/** @internal */
export type ContractType$Outbound = {
  contract_type?:
    | CreateEmploymentApiModelContractType$Outbound
    | null
    | undefined;
  id?: string | null | undefined;
  label?: string | null | undefined;
  remote_id?: string | null | undefined;
};

/** @internal */
export const ContractType$outboundSchema: z.ZodType<
  ContractType$Outbound,
  z.ZodTypeDef,
  ContractType
> = z.object({
  contractType: z.nullable(
    z.lazy(() => CreateEmploymentApiModelContractType$outboundSchema),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  label: z.nullable(z.string()).optional(),
  remoteId: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    contractType: "contract_type",
    remoteId: "remote_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ContractType$ {
  /** @deprecated use `ContractType$inboundSchema` instead. */
  export const inboundSchema = ContractType$inboundSchema;
  /** @deprecated use `ContractType$outboundSchema` instead. */
  export const outboundSchema = ContractType$outboundSchema;
  /** @deprecated use `ContractType$Outbound` instead. */
  export type Outbound = ContractType$Outbound;
}

export function contractTypeToJSON(contractType: ContractType): string {
  return JSON.stringify(ContractType$outboundSchema.parse(contractType));
}

export function contractTypeFromJSON(
  jsonString: string,
): SafeParseResult<ContractType, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ContractType$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ContractType' from JSON`,
  );
}

/** @internal */
export const CreateEmploymentApiModel4$inboundSchema: z.ZodType<
  CreateEmploymentApiModel4,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type CreateEmploymentApiModel4$Outbound = {};

/** @internal */
export const CreateEmploymentApiModel4$outboundSchema: z.ZodType<
  CreateEmploymentApiModel4$Outbound,
  z.ZodTypeDef,
  CreateEmploymentApiModel4
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEmploymentApiModel4$ {
  /** @deprecated use `CreateEmploymentApiModel4$inboundSchema` instead. */
  export const inboundSchema = CreateEmploymentApiModel4$inboundSchema;
  /** @deprecated use `CreateEmploymentApiModel4$outboundSchema` instead. */
  export const outboundSchema = CreateEmploymentApiModel4$outboundSchema;
  /** @deprecated use `CreateEmploymentApiModel4$Outbound` instead. */
  export type Outbound = CreateEmploymentApiModel4$Outbound;
}

export function createEmploymentApiModel4ToJSON(
  createEmploymentApiModel4: CreateEmploymentApiModel4,
): string {
  return JSON.stringify(
    CreateEmploymentApiModel4$outboundSchema.parse(createEmploymentApiModel4),
  );
}

export function createEmploymentApiModel4FromJSON(
  jsonString: string,
): SafeParseResult<CreateEmploymentApiModel4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEmploymentApiModel4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEmploymentApiModel4' from JSON`,
  );
}

/** @internal */
export const CreateEmploymentApiModelSourceValue$inboundSchema: z.ZodType<
  CreateEmploymentApiModelSourceValue,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => CreateEmploymentApiModel4$inboundSchema),
  z.string(),
  z.number(),
  z.boolean(),
  z.array(z.any()),
]);

/** @internal */
export type CreateEmploymentApiModelSourceValue$Outbound =
  | CreateEmploymentApiModel4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const CreateEmploymentApiModelSourceValue$outboundSchema: z.ZodType<
  CreateEmploymentApiModelSourceValue$Outbound,
  z.ZodTypeDef,
  CreateEmploymentApiModelSourceValue
> = z.union([
  z.lazy(() => CreateEmploymentApiModel4$outboundSchema),
  z.string(),
  z.number(),
  z.boolean(),
  z.array(z.any()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEmploymentApiModelSourceValue$ {
  /** @deprecated use `CreateEmploymentApiModelSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    CreateEmploymentApiModelSourceValue$inboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    CreateEmploymentApiModelSourceValue$outboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSourceValue$Outbound` instead. */
  export type Outbound = CreateEmploymentApiModelSourceValue$Outbound;
}

export function createEmploymentApiModelSourceValueToJSON(
  createEmploymentApiModelSourceValue: CreateEmploymentApiModelSourceValue,
): string {
  return JSON.stringify(
    CreateEmploymentApiModelSourceValue$outboundSchema.parse(
      createEmploymentApiModelSourceValue,
    ),
  );
}

export function createEmploymentApiModelSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<CreateEmploymentApiModelSourceValue, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEmploymentApiModelSourceValue$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEmploymentApiModelSourceValue' from JSON`,
  );
}

/** @internal */
export const CreateEmploymentApiModelValue$inboundSchema: z.ZodType<
  CreateEmploymentApiModelValueOpen,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(CreateEmploymentApiModelValue),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const CreateEmploymentApiModelValue$outboundSchema: z.ZodType<
  CreateEmploymentApiModelValueOpen,
  z.ZodTypeDef,
  CreateEmploymentApiModelValueOpen
> = z.union([
  z.nativeEnum(CreateEmploymentApiModelValue),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEmploymentApiModelValue$ {
  /** @deprecated use `CreateEmploymentApiModelValue$inboundSchema` instead. */
  export const inboundSchema = CreateEmploymentApiModelValue$inboundSchema;
  /** @deprecated use `CreateEmploymentApiModelValue$outboundSchema` instead. */
  export const outboundSchema = CreateEmploymentApiModelValue$outboundSchema;
}

/** @internal */
export const EmploymentContractType$inboundSchema: z.ZodType<
  EmploymentContractType,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() => CreateEmploymentApiModel4$inboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(CreateEmploymentApiModelValue$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type EmploymentContractType$Outbound = {
  source_value?:
    | CreateEmploymentApiModel4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const EmploymentContractType$outboundSchema: z.ZodType<
  EmploymentContractType$Outbound,
  z.ZodTypeDef,
  EmploymentContractType
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() => CreateEmploymentApiModel4$outboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(CreateEmploymentApiModelValue$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EmploymentContractType$ {
  /** @deprecated use `EmploymentContractType$inboundSchema` instead. */
  export const inboundSchema = EmploymentContractType$inboundSchema;
  /** @deprecated use `EmploymentContractType$outboundSchema` instead. */
  export const outboundSchema = EmploymentContractType$outboundSchema;
  /** @deprecated use `EmploymentContractType$Outbound` instead. */
  export type Outbound = EmploymentContractType$Outbound;
}

export function employmentContractTypeToJSON(
  employmentContractType: EmploymentContractType,
): string {
  return JSON.stringify(
    EmploymentContractType$outboundSchema.parse(employmentContractType),
  );
}

export function employmentContractTypeFromJSON(
  jsonString: string,
): SafeParseResult<EmploymentContractType, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => EmploymentContractType$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EmploymentContractType' from JSON`,
  );
}

/** @internal */
export const CreateEmploymentApiModelSchemas4$inboundSchema: z.ZodType<
  CreateEmploymentApiModelSchemas4,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type CreateEmploymentApiModelSchemas4$Outbound = {};

/** @internal */
export const CreateEmploymentApiModelSchemas4$outboundSchema: z.ZodType<
  CreateEmploymentApiModelSchemas4$Outbound,
  z.ZodTypeDef,
  CreateEmploymentApiModelSchemas4
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEmploymentApiModelSchemas4$ {
  /** @deprecated use `CreateEmploymentApiModelSchemas4$inboundSchema` instead. */
  export const inboundSchema = CreateEmploymentApiModelSchemas4$inboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemas4$outboundSchema` instead. */
  export const outboundSchema = CreateEmploymentApiModelSchemas4$outboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemas4$Outbound` instead. */
  export type Outbound = CreateEmploymentApiModelSchemas4$Outbound;
}

export function createEmploymentApiModelSchemas4ToJSON(
  createEmploymentApiModelSchemas4: CreateEmploymentApiModelSchemas4,
): string {
  return JSON.stringify(
    CreateEmploymentApiModelSchemas4$outboundSchema.parse(
      createEmploymentApiModelSchemas4,
    ),
  );
}

export function createEmploymentApiModelSchemas4FromJSON(
  jsonString: string,
): SafeParseResult<CreateEmploymentApiModelSchemas4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEmploymentApiModelSchemas4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEmploymentApiModelSchemas4' from JSON`,
  );
}

/** @internal */
export const CreateEmploymentApiModelSchemasSourceValue$inboundSchema:
  z.ZodType<CreateEmploymentApiModelSchemasSourceValue, z.ZodTypeDef, unknown> =
    z.union([
      z.lazy(() => CreateEmploymentApiModelSchemas4$inboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]);

/** @internal */
export type CreateEmploymentApiModelSchemasSourceValue$Outbound =
  | CreateEmploymentApiModelSchemas4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const CreateEmploymentApiModelSchemasSourceValue$outboundSchema:
  z.ZodType<
    CreateEmploymentApiModelSchemasSourceValue$Outbound,
    z.ZodTypeDef,
    CreateEmploymentApiModelSchemasSourceValue
  > = z.union([
    z.lazy(() => CreateEmploymentApiModelSchemas4$outboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEmploymentApiModelSchemasSourceValue$ {
  /** @deprecated use `CreateEmploymentApiModelSchemasSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    CreateEmploymentApiModelSchemasSourceValue$inboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemasSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    CreateEmploymentApiModelSchemasSourceValue$outboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemasSourceValue$Outbound` instead. */
  export type Outbound = CreateEmploymentApiModelSchemasSourceValue$Outbound;
}

export function createEmploymentApiModelSchemasSourceValueToJSON(
  createEmploymentApiModelSchemasSourceValue:
    CreateEmploymentApiModelSchemasSourceValue,
): string {
  return JSON.stringify(
    CreateEmploymentApiModelSchemasSourceValue$outboundSchema.parse(
      createEmploymentApiModelSchemasSourceValue,
    ),
  );
}

export function createEmploymentApiModelSchemasSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateEmploymentApiModelSchemasSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEmploymentApiModelSchemasSourceValue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateEmploymentApiModelSchemasSourceValue' from JSON`,
  );
}

/** @internal */
export const CreateEmploymentApiModelSchemasValue$inboundSchema: z.ZodType<
  CreateEmploymentApiModelSchemasValueOpen,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(CreateEmploymentApiModelSchemasValue),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const CreateEmploymentApiModelSchemasValue$outboundSchema: z.ZodType<
  CreateEmploymentApiModelSchemasValueOpen,
  z.ZodTypeDef,
  CreateEmploymentApiModelSchemasValueOpen
> = z.union([
  z.nativeEnum(CreateEmploymentApiModelSchemasValue),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEmploymentApiModelSchemasValue$ {
  /** @deprecated use `CreateEmploymentApiModelSchemasValue$inboundSchema` instead. */
  export const inboundSchema =
    CreateEmploymentApiModelSchemasValue$inboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemasValue$outboundSchema` instead. */
  export const outboundSchema =
    CreateEmploymentApiModelSchemasValue$outboundSchema;
}

/** @internal */
export const EmploymentType$inboundSchema: z.ZodType<
  EmploymentType,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() => CreateEmploymentApiModelSchemas4$inboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(CreateEmploymentApiModelSchemasValue$inboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type EmploymentType$Outbound = {
  source_value?:
    | CreateEmploymentApiModelSchemas4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const EmploymentType$outboundSchema: z.ZodType<
  EmploymentType$Outbound,
  z.ZodTypeDef,
  EmploymentType
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() => CreateEmploymentApiModelSchemas4$outboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(CreateEmploymentApiModelSchemasValue$outboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EmploymentType$ {
  /** @deprecated use `EmploymentType$inboundSchema` instead. */
  export const inboundSchema = EmploymentType$inboundSchema;
  /** @deprecated use `EmploymentType$outboundSchema` instead. */
  export const outboundSchema = EmploymentType$outboundSchema;
  /** @deprecated use `EmploymentType$Outbound` instead. */
  export type Outbound = EmploymentType$Outbound;
}

export function employmentTypeToJSON(employmentType: EmploymentType): string {
  return JSON.stringify(EmploymentType$outboundSchema.parse(employmentType));
}

export function employmentTypeFromJSON(
  jsonString: string,
): SafeParseResult<EmploymentType, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => EmploymentType$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EmploymentType' from JSON`,
  );
}

/** @internal */
export const Grade$inboundSchema: z.ZodType<Grade, z.ZodTypeDef, unknown> = z
  .object({
    description: z.nullable(z.string()).optional(),
    id: z.nullable(z.string()).optional(),
    name: z.nullable(z.string()).optional(),
    remote_id: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      "remote_id": "remoteId",
    });
  });

/** @internal */
export type Grade$Outbound = {
  description?: string | null | undefined;
  id?: string | null | undefined;
  name?: string | null | undefined;
  remote_id?: string | null | undefined;
};

/** @internal */
export const Grade$outboundSchema: z.ZodType<
  Grade$Outbound,
  z.ZodTypeDef,
  Grade
> = z.object({
  description: z.nullable(z.string()).optional(),
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  remoteId: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    remoteId: "remote_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Grade$ {
  /** @deprecated use `Grade$inboundSchema` instead. */
  export const inboundSchema = Grade$inboundSchema;
  /** @deprecated use `Grade$outboundSchema` instead. */
  export const outboundSchema = Grade$outboundSchema;
  /** @deprecated use `Grade$Outbound` instead. */
  export type Outbound = Grade$Outbound;
}

export function gradeToJSON(grade: Grade): string {
  return JSON.stringify(Grade$outboundSchema.parse(grade));
}

export function gradeFromJSON(
  jsonString: string,
): SafeParseResult<Grade, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Grade$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Grade' from JSON`,
  );
}

/** @internal */
export const CreateEmploymentApiModelSchemasPayFrequency4$inboundSchema:
  z.ZodType<
    CreateEmploymentApiModelSchemasPayFrequency4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type CreateEmploymentApiModelSchemasPayFrequency4$Outbound = {};

/** @internal */
export const CreateEmploymentApiModelSchemasPayFrequency4$outboundSchema:
  z.ZodType<
    CreateEmploymentApiModelSchemasPayFrequency4$Outbound,
    z.ZodTypeDef,
    CreateEmploymentApiModelSchemasPayFrequency4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEmploymentApiModelSchemasPayFrequency4$ {
  /** @deprecated use `CreateEmploymentApiModelSchemasPayFrequency4$inboundSchema` instead. */
  export const inboundSchema =
    CreateEmploymentApiModelSchemasPayFrequency4$inboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemasPayFrequency4$outboundSchema` instead. */
  export const outboundSchema =
    CreateEmploymentApiModelSchemasPayFrequency4$outboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemasPayFrequency4$Outbound` instead. */
  export type Outbound = CreateEmploymentApiModelSchemasPayFrequency4$Outbound;
}

export function createEmploymentApiModelSchemasPayFrequency4ToJSON(
  createEmploymentApiModelSchemasPayFrequency4:
    CreateEmploymentApiModelSchemasPayFrequency4,
): string {
  return JSON.stringify(
    CreateEmploymentApiModelSchemasPayFrequency4$outboundSchema.parse(
      createEmploymentApiModelSchemasPayFrequency4,
    ),
  );
}

export function createEmploymentApiModelSchemasPayFrequency4FromJSON(
  jsonString: string,
): SafeParseResult<
  CreateEmploymentApiModelSchemasPayFrequency4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEmploymentApiModelSchemasPayFrequency4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateEmploymentApiModelSchemasPayFrequency4' from JSON`,
  );
}

/** @internal */
export const CreateEmploymentApiModelSchemasPayFrequencySourceValue$inboundSchema:
  z.ZodType<
    CreateEmploymentApiModelSchemasPayFrequencySourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => CreateEmploymentApiModelSchemasPayFrequency4$inboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type CreateEmploymentApiModelSchemasPayFrequencySourceValue$Outbound =
  | CreateEmploymentApiModelSchemasPayFrequency4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const CreateEmploymentApiModelSchemasPayFrequencySourceValue$outboundSchema:
  z.ZodType<
    CreateEmploymentApiModelSchemasPayFrequencySourceValue$Outbound,
    z.ZodTypeDef,
    CreateEmploymentApiModelSchemasPayFrequencySourceValue
  > = z.union([
    z.lazy(() => CreateEmploymentApiModelSchemasPayFrequency4$outboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEmploymentApiModelSchemasPayFrequencySourceValue$ {
  /** @deprecated use `CreateEmploymentApiModelSchemasPayFrequencySourceValue$inboundSchema` instead. */
  export const inboundSchema =
    CreateEmploymentApiModelSchemasPayFrequencySourceValue$inboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemasPayFrequencySourceValue$outboundSchema` instead. */
  export const outboundSchema =
    CreateEmploymentApiModelSchemasPayFrequencySourceValue$outboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemasPayFrequencySourceValue$Outbound` instead. */
  export type Outbound =
    CreateEmploymentApiModelSchemasPayFrequencySourceValue$Outbound;
}

export function createEmploymentApiModelSchemasPayFrequencySourceValueToJSON(
  createEmploymentApiModelSchemasPayFrequencySourceValue:
    CreateEmploymentApiModelSchemasPayFrequencySourceValue,
): string {
  return JSON.stringify(
    CreateEmploymentApiModelSchemasPayFrequencySourceValue$outboundSchema.parse(
      createEmploymentApiModelSchemasPayFrequencySourceValue,
    ),
  );
}

export function createEmploymentApiModelSchemasPayFrequencySourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateEmploymentApiModelSchemasPayFrequencySourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEmploymentApiModelSchemasPayFrequencySourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'CreateEmploymentApiModelSchemasPayFrequencySourceValue' from JSON`,
  );
}

/** @internal */
export const CreateEmploymentApiModelSchemasPayFrequencyValue$inboundSchema:
  z.ZodType<
    CreateEmploymentApiModelSchemasPayFrequencyValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(CreateEmploymentApiModelSchemasPayFrequencyValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const CreateEmploymentApiModelSchemasPayFrequencyValue$outboundSchema:
  z.ZodType<
    CreateEmploymentApiModelSchemasPayFrequencyValueOpen,
    z.ZodTypeDef,
    CreateEmploymentApiModelSchemasPayFrequencyValueOpen
  > = z.union([
    z.nativeEnum(CreateEmploymentApiModelSchemasPayFrequencyValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEmploymentApiModelSchemasPayFrequencyValue$ {
  /** @deprecated use `CreateEmploymentApiModelSchemasPayFrequencyValue$inboundSchema` instead. */
  export const inboundSchema =
    CreateEmploymentApiModelSchemasPayFrequencyValue$inboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemasPayFrequencyValue$outboundSchema` instead. */
  export const outboundSchema =
    CreateEmploymentApiModelSchemasPayFrequencyValue$outboundSchema;
}

/** @internal */
export const PayFrequency$inboundSchema: z.ZodType<
  PayFrequency,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() => CreateEmploymentApiModelSchemasPayFrequency4$inboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    CreateEmploymentApiModelSchemasPayFrequencyValue$inboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type PayFrequency$Outbound = {
  source_value?:
    | CreateEmploymentApiModelSchemasPayFrequency4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const PayFrequency$outboundSchema: z.ZodType<
  PayFrequency$Outbound,
  z.ZodTypeDef,
  PayFrequency
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() => CreateEmploymentApiModelSchemasPayFrequency4$outboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    CreateEmploymentApiModelSchemasPayFrequencyValue$outboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PayFrequency$ {
  /** @deprecated use `PayFrequency$inboundSchema` instead. */
  export const inboundSchema = PayFrequency$inboundSchema;
  /** @deprecated use `PayFrequency$outboundSchema` instead. */
  export const outboundSchema = PayFrequency$outboundSchema;
  /** @deprecated use `PayFrequency$Outbound` instead. */
  export type Outbound = PayFrequency$Outbound;
}

export function payFrequencyToJSON(payFrequency: PayFrequency): string {
  return JSON.stringify(PayFrequency$outboundSchema.parse(payFrequency));
}

export function payFrequencyFromJSON(
  jsonString: string,
): SafeParseResult<PayFrequency, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PayFrequency$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PayFrequency' from JSON`,
  );
}

/** @internal */
export const CreateEmploymentApiModelSchemasPayPeriod4$inboundSchema: z.ZodType<
  CreateEmploymentApiModelSchemasPayPeriod4,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type CreateEmploymentApiModelSchemasPayPeriod4$Outbound = {};

/** @internal */
export const CreateEmploymentApiModelSchemasPayPeriod4$outboundSchema:
  z.ZodType<
    CreateEmploymentApiModelSchemasPayPeriod4$Outbound,
    z.ZodTypeDef,
    CreateEmploymentApiModelSchemasPayPeriod4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEmploymentApiModelSchemasPayPeriod4$ {
  /** @deprecated use `CreateEmploymentApiModelSchemasPayPeriod4$inboundSchema` instead. */
  export const inboundSchema =
    CreateEmploymentApiModelSchemasPayPeriod4$inboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemasPayPeriod4$outboundSchema` instead. */
  export const outboundSchema =
    CreateEmploymentApiModelSchemasPayPeriod4$outboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemasPayPeriod4$Outbound` instead. */
  export type Outbound = CreateEmploymentApiModelSchemasPayPeriod4$Outbound;
}

export function createEmploymentApiModelSchemasPayPeriod4ToJSON(
  createEmploymentApiModelSchemasPayPeriod4:
    CreateEmploymentApiModelSchemasPayPeriod4,
): string {
  return JSON.stringify(
    CreateEmploymentApiModelSchemasPayPeriod4$outboundSchema.parse(
      createEmploymentApiModelSchemasPayPeriod4,
    ),
  );
}

export function createEmploymentApiModelSchemasPayPeriod4FromJSON(
  jsonString: string,
): SafeParseResult<
  CreateEmploymentApiModelSchemasPayPeriod4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEmploymentApiModelSchemasPayPeriod4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateEmploymentApiModelSchemasPayPeriod4' from JSON`,
  );
}

/** @internal */
export const CreateEmploymentApiModelSchemasPayPeriodSourceValue$inboundSchema:
  z.ZodType<
    CreateEmploymentApiModelSchemasPayPeriodSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => CreateEmploymentApiModelSchemasPayPeriod4$inboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type CreateEmploymentApiModelSchemasPayPeriodSourceValue$Outbound =
  | CreateEmploymentApiModelSchemasPayPeriod4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const CreateEmploymentApiModelSchemasPayPeriodSourceValue$outboundSchema:
  z.ZodType<
    CreateEmploymentApiModelSchemasPayPeriodSourceValue$Outbound,
    z.ZodTypeDef,
    CreateEmploymentApiModelSchemasPayPeriodSourceValue
  > = z.union([
    z.lazy(() => CreateEmploymentApiModelSchemasPayPeriod4$outboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEmploymentApiModelSchemasPayPeriodSourceValue$ {
  /** @deprecated use `CreateEmploymentApiModelSchemasPayPeriodSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    CreateEmploymentApiModelSchemasPayPeriodSourceValue$inboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemasPayPeriodSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    CreateEmploymentApiModelSchemasPayPeriodSourceValue$outboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemasPayPeriodSourceValue$Outbound` instead. */
  export type Outbound =
    CreateEmploymentApiModelSchemasPayPeriodSourceValue$Outbound;
}

export function createEmploymentApiModelSchemasPayPeriodSourceValueToJSON(
  createEmploymentApiModelSchemasPayPeriodSourceValue:
    CreateEmploymentApiModelSchemasPayPeriodSourceValue,
): string {
  return JSON.stringify(
    CreateEmploymentApiModelSchemasPayPeriodSourceValue$outboundSchema.parse(
      createEmploymentApiModelSchemasPayPeriodSourceValue,
    ),
  );
}

export function createEmploymentApiModelSchemasPayPeriodSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateEmploymentApiModelSchemasPayPeriodSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEmploymentApiModelSchemasPayPeriodSourceValue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateEmploymentApiModelSchemasPayPeriodSourceValue' from JSON`,
  );
}

/** @internal */
export const CreateEmploymentApiModelSchemasPayPeriodValue$inboundSchema:
  z.ZodType<
    CreateEmploymentApiModelSchemasPayPeriodValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(CreateEmploymentApiModelSchemasPayPeriodValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const CreateEmploymentApiModelSchemasPayPeriodValue$outboundSchema:
  z.ZodType<
    CreateEmploymentApiModelSchemasPayPeriodValueOpen,
    z.ZodTypeDef,
    CreateEmploymentApiModelSchemasPayPeriodValueOpen
  > = z.union([
    z.nativeEnum(CreateEmploymentApiModelSchemasPayPeriodValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEmploymentApiModelSchemasPayPeriodValue$ {
  /** @deprecated use `CreateEmploymentApiModelSchemasPayPeriodValue$inboundSchema` instead. */
  export const inboundSchema =
    CreateEmploymentApiModelSchemasPayPeriodValue$inboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemasPayPeriodValue$outboundSchema` instead. */
  export const outboundSchema =
    CreateEmploymentApiModelSchemasPayPeriodValue$outboundSchema;
}

/** @internal */
export const PayPeriod$inboundSchema: z.ZodType<
  PayPeriod,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() => CreateEmploymentApiModelSchemasPayPeriod4$inboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(CreateEmploymentApiModelSchemasPayPeriodValue$inboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type PayPeriod$Outbound = {
  source_value?:
    | CreateEmploymentApiModelSchemasPayPeriod4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const PayPeriod$outboundSchema: z.ZodType<
  PayPeriod$Outbound,
  z.ZodTypeDef,
  PayPeriod
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() => CreateEmploymentApiModelSchemasPayPeriod4$outboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    CreateEmploymentApiModelSchemasPayPeriodValue$outboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PayPeriod$ {
  /** @deprecated use `PayPeriod$inboundSchema` instead. */
  export const inboundSchema = PayPeriod$inboundSchema;
  /** @deprecated use `PayPeriod$outboundSchema` instead. */
  export const outboundSchema = PayPeriod$outboundSchema;
  /** @deprecated use `PayPeriod$Outbound` instead. */
  export type Outbound = PayPeriod$Outbound;
}

export function payPeriodToJSON(payPeriod: PayPeriod): string {
  return JSON.stringify(PayPeriod$outboundSchema.parse(payPeriod));
}

export function payPeriodFromJSON(
  jsonString: string,
): SafeParseResult<PayPeriod, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PayPeriod$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PayPeriod' from JSON`,
  );
}

/** @internal */
export const CreateEmploymentApiModelSchemasType4$inboundSchema: z.ZodType<
  CreateEmploymentApiModelSchemasType4,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type CreateEmploymentApiModelSchemasType4$Outbound = {};

/** @internal */
export const CreateEmploymentApiModelSchemasType4$outboundSchema: z.ZodType<
  CreateEmploymentApiModelSchemasType4$Outbound,
  z.ZodTypeDef,
  CreateEmploymentApiModelSchemasType4
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEmploymentApiModelSchemasType4$ {
  /** @deprecated use `CreateEmploymentApiModelSchemasType4$inboundSchema` instead. */
  export const inboundSchema =
    CreateEmploymentApiModelSchemasType4$inboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemasType4$outboundSchema` instead. */
  export const outboundSchema =
    CreateEmploymentApiModelSchemasType4$outboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemasType4$Outbound` instead. */
  export type Outbound = CreateEmploymentApiModelSchemasType4$Outbound;
}

export function createEmploymentApiModelSchemasType4ToJSON(
  createEmploymentApiModelSchemasType4: CreateEmploymentApiModelSchemasType4,
): string {
  return JSON.stringify(
    CreateEmploymentApiModelSchemasType4$outboundSchema.parse(
      createEmploymentApiModelSchemasType4,
    ),
  );
}

export function createEmploymentApiModelSchemasType4FromJSON(
  jsonString: string,
): SafeParseResult<CreateEmploymentApiModelSchemasType4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEmploymentApiModelSchemasType4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEmploymentApiModelSchemasType4' from JSON`,
  );
}

/** @internal */
export const CreateEmploymentApiModelSchemasTypeSourceValue$inboundSchema:
  z.ZodType<
    CreateEmploymentApiModelSchemasTypeSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => CreateEmploymentApiModelSchemasType4$inboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type CreateEmploymentApiModelSchemasTypeSourceValue$Outbound =
  | CreateEmploymentApiModelSchemasType4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const CreateEmploymentApiModelSchemasTypeSourceValue$outboundSchema:
  z.ZodType<
    CreateEmploymentApiModelSchemasTypeSourceValue$Outbound,
    z.ZodTypeDef,
    CreateEmploymentApiModelSchemasTypeSourceValue
  > = z.union([
    z.lazy(() => CreateEmploymentApiModelSchemasType4$outboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEmploymentApiModelSchemasTypeSourceValue$ {
  /** @deprecated use `CreateEmploymentApiModelSchemasTypeSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    CreateEmploymentApiModelSchemasTypeSourceValue$inboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemasTypeSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    CreateEmploymentApiModelSchemasTypeSourceValue$outboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemasTypeSourceValue$Outbound` instead. */
  export type Outbound =
    CreateEmploymentApiModelSchemasTypeSourceValue$Outbound;
}

export function createEmploymentApiModelSchemasTypeSourceValueToJSON(
  createEmploymentApiModelSchemasTypeSourceValue:
    CreateEmploymentApiModelSchemasTypeSourceValue,
): string {
  return JSON.stringify(
    CreateEmploymentApiModelSchemasTypeSourceValue$outboundSchema.parse(
      createEmploymentApiModelSchemasTypeSourceValue,
    ),
  );
}

export function createEmploymentApiModelSchemasTypeSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateEmploymentApiModelSchemasTypeSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEmploymentApiModelSchemasTypeSourceValue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateEmploymentApiModelSchemasTypeSourceValue' from JSON`,
  );
}

/** @internal */
export const CreateEmploymentApiModelSchemasTypeValue$inboundSchema: z.ZodType<
  CreateEmploymentApiModelSchemasTypeValueOpen,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(CreateEmploymentApiModelSchemasTypeValue),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const CreateEmploymentApiModelSchemasTypeValue$outboundSchema: z.ZodType<
  CreateEmploymentApiModelSchemasTypeValueOpen,
  z.ZodTypeDef,
  CreateEmploymentApiModelSchemasTypeValueOpen
> = z.union([
  z.nativeEnum(CreateEmploymentApiModelSchemasTypeValue),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEmploymentApiModelSchemasTypeValue$ {
  /** @deprecated use `CreateEmploymentApiModelSchemasTypeValue$inboundSchema` instead. */
  export const inboundSchema =
    CreateEmploymentApiModelSchemasTypeValue$inboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemasTypeValue$outboundSchema` instead. */
  export const outboundSchema =
    CreateEmploymentApiModelSchemasTypeValue$outboundSchema;
}

/** @internal */
export const CreateEmploymentApiModelSchemasType$inboundSchema: z.ZodType<
  CreateEmploymentApiModelSchemasType,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() => CreateEmploymentApiModelSchemasType4$inboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(CreateEmploymentApiModelSchemasTypeValue$inboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type CreateEmploymentApiModelSchemasType$Outbound = {
  source_value?:
    | CreateEmploymentApiModelSchemasType4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const CreateEmploymentApiModelSchemasType$outboundSchema: z.ZodType<
  CreateEmploymentApiModelSchemasType$Outbound,
  z.ZodTypeDef,
  CreateEmploymentApiModelSchemasType
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() => CreateEmploymentApiModelSchemasType4$outboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(CreateEmploymentApiModelSchemasTypeValue$outboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEmploymentApiModelSchemasType$ {
  /** @deprecated use `CreateEmploymentApiModelSchemasType$inboundSchema` instead. */
  export const inboundSchema =
    CreateEmploymentApiModelSchemasType$inboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemasType$outboundSchema` instead. */
  export const outboundSchema =
    CreateEmploymentApiModelSchemasType$outboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemasType$Outbound` instead. */
  export type Outbound = CreateEmploymentApiModelSchemasType$Outbound;
}

export function createEmploymentApiModelSchemasTypeToJSON(
  createEmploymentApiModelSchemasType: CreateEmploymentApiModelSchemasType,
): string {
  return JSON.stringify(
    CreateEmploymentApiModelSchemasType$outboundSchema.parse(
      createEmploymentApiModelSchemasType,
    ),
  );
}

export function createEmploymentApiModelSchemasTypeFromJSON(
  jsonString: string,
): SafeParseResult<CreateEmploymentApiModelSchemasType, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEmploymentApiModelSchemasType$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEmploymentApiModelSchemasType' from JSON`,
  );
}

/** @internal */
export const CreateEmploymentApiModelType$inboundSchema: z.ZodType<
  CreateEmploymentApiModelType,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.nullable(z.string()).optional(),
  label: z.nullable(z.string()).optional(),
  remote_id: z.nullable(z.string()).optional(),
  type: z.nullable(
    z.lazy(() => CreateEmploymentApiModelSchemasType$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "remote_id": "remoteId",
  });
});

/** @internal */
export type CreateEmploymentApiModelType$Outbound = {
  id?: string | null | undefined;
  label?: string | null | undefined;
  remote_id?: string | null | undefined;
  type?: CreateEmploymentApiModelSchemasType$Outbound | null | undefined;
};

/** @internal */
export const CreateEmploymentApiModelType$outboundSchema: z.ZodType<
  CreateEmploymentApiModelType$Outbound,
  z.ZodTypeDef,
  CreateEmploymentApiModelType
> = z.object({
  id: z.nullable(z.string()).optional(),
  label: z.nullable(z.string()).optional(),
  remoteId: z.nullable(z.string()).optional(),
  type: z.nullable(
    z.lazy(() => CreateEmploymentApiModelSchemasType$outboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    remoteId: "remote_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEmploymentApiModelType$ {
  /** @deprecated use `CreateEmploymentApiModelType$inboundSchema` instead. */
  export const inboundSchema = CreateEmploymentApiModelType$inboundSchema;
  /** @deprecated use `CreateEmploymentApiModelType$outboundSchema` instead. */
  export const outboundSchema = CreateEmploymentApiModelType$outboundSchema;
  /** @deprecated use `CreateEmploymentApiModelType$Outbound` instead. */
  export type Outbound = CreateEmploymentApiModelType$Outbound;
}

export function createEmploymentApiModelTypeToJSON(
  createEmploymentApiModelType: CreateEmploymentApiModelType,
): string {
  return JSON.stringify(
    CreateEmploymentApiModelType$outboundSchema.parse(
      createEmploymentApiModelType,
    ),
  );
}

export function createEmploymentApiModelTypeFromJSON(
  jsonString: string,
): SafeParseResult<CreateEmploymentApiModelType, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEmploymentApiModelType$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEmploymentApiModelType' from JSON`,
  );
}

/** @internal */
export const CreateEmploymentApiModelSchemasWorkTime4$inboundSchema: z.ZodType<
  CreateEmploymentApiModelSchemasWorkTime4,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type CreateEmploymentApiModelSchemasWorkTime4$Outbound = {};

/** @internal */
export const CreateEmploymentApiModelSchemasWorkTime4$outboundSchema: z.ZodType<
  CreateEmploymentApiModelSchemasWorkTime4$Outbound,
  z.ZodTypeDef,
  CreateEmploymentApiModelSchemasWorkTime4
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEmploymentApiModelSchemasWorkTime4$ {
  /** @deprecated use `CreateEmploymentApiModelSchemasWorkTime4$inboundSchema` instead. */
  export const inboundSchema =
    CreateEmploymentApiModelSchemasWorkTime4$inboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemasWorkTime4$outboundSchema` instead. */
  export const outboundSchema =
    CreateEmploymentApiModelSchemasWorkTime4$outboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemasWorkTime4$Outbound` instead. */
  export type Outbound = CreateEmploymentApiModelSchemasWorkTime4$Outbound;
}

export function createEmploymentApiModelSchemasWorkTime4ToJSON(
  createEmploymentApiModelSchemasWorkTime4:
    CreateEmploymentApiModelSchemasWorkTime4,
): string {
  return JSON.stringify(
    CreateEmploymentApiModelSchemasWorkTime4$outboundSchema.parse(
      createEmploymentApiModelSchemasWorkTime4,
    ),
  );
}

export function createEmploymentApiModelSchemasWorkTime4FromJSON(
  jsonString: string,
): SafeParseResult<
  CreateEmploymentApiModelSchemasWorkTime4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEmploymentApiModelSchemasWorkTime4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateEmploymentApiModelSchemasWorkTime4' from JSON`,
  );
}

/** @internal */
export const CreateEmploymentApiModelSchemasWorkTimeSourceValue$inboundSchema:
  z.ZodType<
    CreateEmploymentApiModelSchemasWorkTimeSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => CreateEmploymentApiModelSchemasWorkTime4$inboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type CreateEmploymentApiModelSchemasWorkTimeSourceValue$Outbound =
  | CreateEmploymentApiModelSchemasWorkTime4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const CreateEmploymentApiModelSchemasWorkTimeSourceValue$outboundSchema:
  z.ZodType<
    CreateEmploymentApiModelSchemasWorkTimeSourceValue$Outbound,
    z.ZodTypeDef,
    CreateEmploymentApiModelSchemasWorkTimeSourceValue
  > = z.union([
    z.lazy(() => CreateEmploymentApiModelSchemasWorkTime4$outboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEmploymentApiModelSchemasWorkTimeSourceValue$ {
  /** @deprecated use `CreateEmploymentApiModelSchemasWorkTimeSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    CreateEmploymentApiModelSchemasWorkTimeSourceValue$inboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemasWorkTimeSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    CreateEmploymentApiModelSchemasWorkTimeSourceValue$outboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemasWorkTimeSourceValue$Outbound` instead. */
  export type Outbound =
    CreateEmploymentApiModelSchemasWorkTimeSourceValue$Outbound;
}

export function createEmploymentApiModelSchemasWorkTimeSourceValueToJSON(
  createEmploymentApiModelSchemasWorkTimeSourceValue:
    CreateEmploymentApiModelSchemasWorkTimeSourceValue,
): string {
  return JSON.stringify(
    CreateEmploymentApiModelSchemasWorkTimeSourceValue$outboundSchema.parse(
      createEmploymentApiModelSchemasWorkTimeSourceValue,
    ),
  );
}

export function createEmploymentApiModelSchemasWorkTimeSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateEmploymentApiModelSchemasWorkTimeSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEmploymentApiModelSchemasWorkTimeSourceValue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateEmploymentApiModelSchemasWorkTimeSourceValue' from JSON`,
  );
}

/** @internal */
export const CreateEmploymentApiModelSchemasWorkTimeValue$inboundSchema:
  z.ZodType<
    CreateEmploymentApiModelSchemasWorkTimeValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(CreateEmploymentApiModelSchemasWorkTimeValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const CreateEmploymentApiModelSchemasWorkTimeValue$outboundSchema:
  z.ZodType<
    CreateEmploymentApiModelSchemasWorkTimeValueOpen,
    z.ZodTypeDef,
    CreateEmploymentApiModelSchemasWorkTimeValueOpen
  > = z.union([
    z.nativeEnum(CreateEmploymentApiModelSchemasWorkTimeValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEmploymentApiModelSchemasWorkTimeValue$ {
  /** @deprecated use `CreateEmploymentApiModelSchemasWorkTimeValue$inboundSchema` instead. */
  export const inboundSchema =
    CreateEmploymentApiModelSchemasWorkTimeValue$inboundSchema;
  /** @deprecated use `CreateEmploymentApiModelSchemasWorkTimeValue$outboundSchema` instead. */
  export const outboundSchema =
    CreateEmploymentApiModelSchemasWorkTimeValue$outboundSchema;
}

/** @internal */
export const CreateEmploymentApiModelDurationUnit$inboundSchema: z.ZodType<
  CreateEmploymentApiModelDurationUnit,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() => CreateEmploymentApiModelSchemasWorkTime4$inboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(CreateEmploymentApiModelSchemasWorkTimeValue$inboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type CreateEmploymentApiModelDurationUnit$Outbound = {
  source_value?:
    | CreateEmploymentApiModelSchemasWorkTime4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const CreateEmploymentApiModelDurationUnit$outboundSchema: z.ZodType<
  CreateEmploymentApiModelDurationUnit$Outbound,
  z.ZodTypeDef,
  CreateEmploymentApiModelDurationUnit
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() => CreateEmploymentApiModelSchemasWorkTime4$outboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(CreateEmploymentApiModelSchemasWorkTimeValue$outboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEmploymentApiModelDurationUnit$ {
  /** @deprecated use `CreateEmploymentApiModelDurationUnit$inboundSchema` instead. */
  export const inboundSchema =
    CreateEmploymentApiModelDurationUnit$inboundSchema;
  /** @deprecated use `CreateEmploymentApiModelDurationUnit$outboundSchema` instead. */
  export const outboundSchema =
    CreateEmploymentApiModelDurationUnit$outboundSchema;
  /** @deprecated use `CreateEmploymentApiModelDurationUnit$Outbound` instead. */
  export type Outbound = CreateEmploymentApiModelDurationUnit$Outbound;
}

export function createEmploymentApiModelDurationUnitToJSON(
  createEmploymentApiModelDurationUnit: CreateEmploymentApiModelDurationUnit,
): string {
  return JSON.stringify(
    CreateEmploymentApiModelDurationUnit$outboundSchema.parse(
      createEmploymentApiModelDurationUnit,
    ),
  );
}

export function createEmploymentApiModelDurationUnitFromJSON(
  jsonString: string,
): SafeParseResult<CreateEmploymentApiModelDurationUnit, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEmploymentApiModelDurationUnit$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEmploymentApiModelDurationUnit' from JSON`,
  );
}

/** @internal */
export const WorkTime$inboundSchema: z.ZodType<
  WorkTime,
  z.ZodTypeDef,
  unknown
> = z.object({
  duration: z.nullable(z.string()).optional(),
  duration_unit: z.nullable(
    z.lazy(() => CreateEmploymentApiModelDurationUnit$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "duration_unit": "durationUnit",
  });
});

/** @internal */
export type WorkTime$Outbound = {
  duration?: string | null | undefined;
  duration_unit?:
    | CreateEmploymentApiModelDurationUnit$Outbound
    | null
    | undefined;
};

/** @internal */
export const WorkTime$outboundSchema: z.ZodType<
  WorkTime$Outbound,
  z.ZodTypeDef,
  WorkTime
> = z.object({
  duration: z.nullable(z.string()).optional(),
  durationUnit: z.nullable(
    z.lazy(() => CreateEmploymentApiModelDurationUnit$outboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    durationUnit: "duration_unit",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WorkTime$ {
  /** @deprecated use `WorkTime$inboundSchema` instead. */
  export const inboundSchema = WorkTime$inboundSchema;
  /** @deprecated use `WorkTime$outboundSchema` instead. */
  export const outboundSchema = WorkTime$outboundSchema;
  /** @deprecated use `WorkTime$Outbound` instead. */
  export type Outbound = WorkTime$Outbound;
}

export function workTimeToJSON(workTime: WorkTime): string {
  return JSON.stringify(WorkTime$outboundSchema.parse(workTime));
}

export function workTimeFromJSON(
  jsonString: string,
): SafeParseResult<WorkTime, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => WorkTime$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'WorkTime' from JSON`,
  );
}

/** @internal */
export const CreateEmploymentApiModel$inboundSchema: z.ZodType<
  CreateEmploymentApiModel,
  z.ZodTypeDef,
  unknown
> = z.object({
  contract_type: z.nullable(z.lazy(() => ContractType$inboundSchema))
    .optional(),
  effective_date: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  employment_contract_type: z.nullable(
    z.lazy(() => EmploymentContractType$inboundSchema),
  ).optional(),
  employment_type: z.nullable(z.lazy(() => EmploymentType$inboundSchema))
    .optional(),
  end_date: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  grade: z.nullable(z.lazy(() => Grade$inboundSchema)).optional(),
  job_id: z.nullable(z.string()).optional(),
  job_title: z.nullable(z.string()).optional(),
  pay_currency: z.nullable(z.string()).optional(),
  pay_frequency: z.nullable(z.lazy(() => PayFrequency$inboundSchema))
    .optional(),
  pay_period: z.nullable(z.lazy(() => PayPeriod$inboundSchema)).optional(),
  pay_rate: z.nullable(z.string()).optional(),
  payroll_code: z.nullable(z.string()).optional(),
  type: z.nullable(z.lazy(() => CreateEmploymentApiModelType$inboundSchema))
    .optional(),
  unified_custom_fields: z.nullable(z.record(z.any())).optional(),
  work_time: z.nullable(z.lazy(() => WorkTime$inboundSchema)).optional(),
}).transform((v) => {
  return remap$(v, {
    "contract_type": "contractType",
    "effective_date": "effectiveDate",
    "employment_contract_type": "employmentContractType",
    "employment_type": "employmentType",
    "end_date": "endDate",
    "job_id": "jobId",
    "job_title": "jobTitle",
    "pay_currency": "payCurrency",
    "pay_frequency": "payFrequency",
    "pay_period": "payPeriod",
    "pay_rate": "payRate",
    "payroll_code": "payrollCode",
    "unified_custom_fields": "unifiedCustomFields",
    "work_time": "workTime",
  });
});

/** @internal */
export type CreateEmploymentApiModel$Outbound = {
  contract_type?: ContractType$Outbound | null | undefined;
  effective_date?: string | null | undefined;
  employment_contract_type?: EmploymentContractType$Outbound | null | undefined;
  employment_type?: EmploymentType$Outbound | null | undefined;
  end_date?: string | null | undefined;
  grade?: Grade$Outbound | null | undefined;
  job_id?: string | null | undefined;
  job_title?: string | null | undefined;
  pay_currency?: string | null | undefined;
  pay_frequency?: PayFrequency$Outbound | null | undefined;
  pay_period?: PayPeriod$Outbound | null | undefined;
  pay_rate?: string | null | undefined;
  payroll_code?: string | null | undefined;
  type?: CreateEmploymentApiModelType$Outbound | null | undefined;
  unified_custom_fields?: { [k: string]: any } | null | undefined;
  work_time?: WorkTime$Outbound | null | undefined;
};

/** @internal */
export const CreateEmploymentApiModel$outboundSchema: z.ZodType<
  CreateEmploymentApiModel$Outbound,
  z.ZodTypeDef,
  CreateEmploymentApiModel
> = z.object({
  contractType: z.nullable(z.lazy(() => ContractType$outboundSchema))
    .optional(),
  effectiveDate: z.nullable(z.date().transform(v => v.toISOString()))
    .optional(),
  employmentContractType: z.nullable(
    z.lazy(() => EmploymentContractType$outboundSchema),
  ).optional(),
  employmentType: z.nullable(z.lazy(() => EmploymentType$outboundSchema))
    .optional(),
  endDate: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  grade: z.nullable(z.lazy(() => Grade$outboundSchema)).optional(),
  jobId: z.nullable(z.string()).optional(),
  jobTitle: z.nullable(z.string()).optional(),
  payCurrency: z.nullable(z.string()).optional(),
  payFrequency: z.nullable(z.lazy(() => PayFrequency$outboundSchema))
    .optional(),
  payPeriod: z.nullable(z.lazy(() => PayPeriod$outboundSchema)).optional(),
  payRate: z.nullable(z.string()).optional(),
  payrollCode: z.nullable(z.string()).optional(),
  type: z.nullable(z.lazy(() => CreateEmploymentApiModelType$outboundSchema))
    .optional(),
  unifiedCustomFields: z.nullable(z.record(z.any())).optional(),
  workTime: z.nullable(z.lazy(() => WorkTime$outboundSchema)).optional(),
}).transform((v) => {
  return remap$(v, {
    contractType: "contract_type",
    effectiveDate: "effective_date",
    employmentContractType: "employment_contract_type",
    employmentType: "employment_type",
    endDate: "end_date",
    jobId: "job_id",
    jobTitle: "job_title",
    payCurrency: "pay_currency",
    payFrequency: "pay_frequency",
    payPeriod: "pay_period",
    payRate: "pay_rate",
    payrollCode: "payroll_code",
    unifiedCustomFields: "unified_custom_fields",
    workTime: "work_time",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEmploymentApiModel$ {
  /** @deprecated use `CreateEmploymentApiModel$inboundSchema` instead. */
  export const inboundSchema = CreateEmploymentApiModel$inboundSchema;
  /** @deprecated use `CreateEmploymentApiModel$outboundSchema` instead. */
  export const outboundSchema = CreateEmploymentApiModel$outboundSchema;
  /** @deprecated use `CreateEmploymentApiModel$Outbound` instead. */
  export type Outbound = CreateEmploymentApiModel$Outbound;
}

export function createEmploymentApiModelToJSON(
  createEmploymentApiModel: CreateEmploymentApiModel,
): string {
  return JSON.stringify(
    CreateEmploymentApiModel$outboundSchema.parse(createEmploymentApiModel),
  );
}

export function createEmploymentApiModelFromJSON(
  jsonString: string,
): SafeParseResult<CreateEmploymentApiModel, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEmploymentApiModel$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEmploymentApiModel' from JSON`,
  );
}
