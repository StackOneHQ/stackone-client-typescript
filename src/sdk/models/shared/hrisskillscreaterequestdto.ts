/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type HrisSkillsCreateRequestDto = {
  /**
   * The ID associated with this skill
   */
  id?: string | null | undefined;
  /**
   * The name associated with this skill
   */
  name?: string | null | undefined;
};

/** @internal */
export const HrisSkillsCreateRequestDto$inboundSchema: z.ZodType<
  HrisSkillsCreateRequestDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
});

/** @internal */
export type HrisSkillsCreateRequestDto$Outbound = {
  id?: string | null | undefined;
  name?: string | null | undefined;
};

/** @internal */
export const HrisSkillsCreateRequestDto$outboundSchema: z.ZodType<
  HrisSkillsCreateRequestDto$Outbound,
  z.ZodTypeDef,
  HrisSkillsCreateRequestDto
> = z.object({
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisSkillsCreateRequestDto$ {
  /** @deprecated use `HrisSkillsCreateRequestDto$inboundSchema` instead. */
  export const inboundSchema = HrisSkillsCreateRequestDto$inboundSchema;
  /** @deprecated use `HrisSkillsCreateRequestDto$outboundSchema` instead. */
  export const outboundSchema = HrisSkillsCreateRequestDto$outboundSchema;
  /** @deprecated use `HrisSkillsCreateRequestDto$Outbound` instead. */
  export type Outbound = HrisSkillsCreateRequestDto$Outbound;
}

export function hrisSkillsCreateRequestDtoToJSON(
  hrisSkillsCreateRequestDto: HrisSkillsCreateRequestDto,
): string {
  return JSON.stringify(
    HrisSkillsCreateRequestDto$outboundSchema.parse(hrisSkillsCreateRequestDto),
  );
}

export function hrisSkillsCreateRequestDtoFromJSON(
  jsonString: string,
): SafeParseResult<HrisSkillsCreateRequestDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HrisSkillsCreateRequestDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisSkillsCreateRequestDto' from JSON`,
  );
}
