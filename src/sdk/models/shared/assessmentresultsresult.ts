/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AssessmentResult,
  AssessmentResult$inboundSchema,
  AssessmentResult$Outbound,
  AssessmentResult$outboundSchema,
} from "./assessmentresult.js";
import {
  RawResponse,
  RawResponse$inboundSchema,
  RawResponse$Outbound,
  RawResponse$outboundSchema,
} from "./rawresponse.js";

export type AssessmentResultsResult = {
  data: AssessmentResult;
  raw?: Array<RawResponse> | null | undefined;
};

/** @internal */
export const AssessmentResultsResult$inboundSchema: z.ZodType<
  AssessmentResultsResult,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: AssessmentResult$inboundSchema,
  raw: z.nullable(z.array(RawResponse$inboundSchema)).optional(),
});

/** @internal */
export type AssessmentResultsResult$Outbound = {
  data: AssessmentResult$Outbound;
  raw?: Array<RawResponse$Outbound> | null | undefined;
};

/** @internal */
export const AssessmentResultsResult$outboundSchema: z.ZodType<
  AssessmentResultsResult$Outbound,
  z.ZodTypeDef,
  AssessmentResultsResult
> = z.object({
  data: AssessmentResult$outboundSchema,
  raw: z.nullable(z.array(RawResponse$outboundSchema)).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AssessmentResultsResult$ {
  /** @deprecated use `AssessmentResultsResult$inboundSchema` instead. */
  export const inboundSchema = AssessmentResultsResult$inboundSchema;
  /** @deprecated use `AssessmentResultsResult$outboundSchema` instead. */
  export const outboundSchema = AssessmentResultsResult$outboundSchema;
  /** @deprecated use `AssessmentResultsResult$Outbound` instead. */
  export type Outbound = AssessmentResultsResult$Outbound;
}

export function assessmentResultsResultToJSON(
  assessmentResultsResult: AssessmentResultsResult,
): string {
  return JSON.stringify(
    AssessmentResultsResult$outboundSchema.parse(assessmentResultsResult),
  );
}

export function assessmentResultsResultFromJSON(
  jsonString: string,
): SafeParseResult<AssessmentResultsResult, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AssessmentResultsResult$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AssessmentResultsResult' from JSON`,
  );
}
