/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type ApplicationCandidate = {
    /**
     * Email of the candidate
     */
    email?: string | undefined;
    /**
     * First name of the candidate
     */
    firstName?: string | undefined;
    /**
     * Last name of the candidate
     */
    lastName?: string | undefined;
};

/** @internal */
export namespace ApplicationCandidate$ {
    export type Inbound = {
        email?: string | undefined;
        first_name?: string | undefined;
        last_name?: string | undefined;
    };

    export const inboundSchema: z.ZodType<ApplicationCandidate, z.ZodTypeDef, Inbound> = z
        .object({
            email: z.string().optional(),
            first_name: z.string().optional(),
            last_name: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.first_name === undefined ? null : { firstName: v.first_name }),
                ...(v.last_name === undefined ? null : { lastName: v.last_name }),
            };
        });

    export type Outbound = {
        email?: string | undefined;
        first_name?: string | undefined;
        last_name?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ApplicationCandidate> = z
        .object({
            email: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.firstName === undefined ? null : { first_name: v.firstName }),
                ...(v.lastName === undefined ? null : { last_name: v.lastName }),
            };
        });
}
