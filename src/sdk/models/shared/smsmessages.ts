/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export type SmsMessagesMessageContent = {
    body?: string | null | undefined;
    from?: string | null | undefined;
};

export type SmsMessages4 = {};

/**
 * The original value from the provider used to derive the unified message type.
 */
export type SmsMessagesSourceValue = SmsMessages4 | string | number | boolean | Array<any>;

/**
 * The unified message type.
 */
export type SmsMessagesValue = {};

export type SmsMessagesMessageType = {
    /**
     * The original value from the provider used to derive the unified message type.
     */
    sourceValue?: SmsMessages4 | string | number | boolean | Array<any> | null | undefined;
    /**
     * The unified message type.
     */
    value?: SmsMessagesValue | null | undefined;
};

export type SmsMessages = {
    /**
     * Unique identifier
     */
    id?: string | null | undefined;
    messageContent?: SmsMessagesMessageContent | null | undefined;
    messageType?: SmsMessagesMessageType | null | undefined;
    name?: string | null | undefined;
    /**
     * Provider's unique identifier
     */
    remoteId?: string | null | undefined;
};

/** @internal */
export const SmsMessagesMessageContent$inboundSchema: z.ZodType<
    SmsMessagesMessageContent,
    z.ZodTypeDef,
    unknown
> = z.object({
    body: z.nullable(z.string()).optional(),
    from: z.nullable(z.string()).optional(),
});

/** @internal */
export type SmsMessagesMessageContent$Outbound = {
    body?: string | null | undefined;
    from?: string | null | undefined;
};

/** @internal */
export const SmsMessagesMessageContent$outboundSchema: z.ZodType<
    SmsMessagesMessageContent$Outbound,
    z.ZodTypeDef,
    SmsMessagesMessageContent
> = z.object({
    body: z.nullable(z.string()).optional(),
    from: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SmsMessagesMessageContent$ {
    /** @deprecated use `SmsMessagesMessageContent$inboundSchema` instead. */
    export const inboundSchema = SmsMessagesMessageContent$inboundSchema;
    /** @deprecated use `SmsMessagesMessageContent$outboundSchema` instead. */
    export const outboundSchema = SmsMessagesMessageContent$outboundSchema;
    /** @deprecated use `SmsMessagesMessageContent$Outbound` instead. */
    export type Outbound = SmsMessagesMessageContent$Outbound;
}

/** @internal */
export const SmsMessages4$inboundSchema: z.ZodType<SmsMessages4, z.ZodTypeDef, unknown> = z.object(
    {}
);

/** @internal */
export type SmsMessages4$Outbound = {};

/** @internal */
export const SmsMessages4$outboundSchema: z.ZodType<
    SmsMessages4$Outbound,
    z.ZodTypeDef,
    SmsMessages4
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SmsMessages4$ {
    /** @deprecated use `SmsMessages4$inboundSchema` instead. */
    export const inboundSchema = SmsMessages4$inboundSchema;
    /** @deprecated use `SmsMessages4$outboundSchema` instead. */
    export const outboundSchema = SmsMessages4$outboundSchema;
    /** @deprecated use `SmsMessages4$Outbound` instead. */
    export type Outbound = SmsMessages4$Outbound;
}

/** @internal */
export const SmsMessagesSourceValue$inboundSchema: z.ZodType<
    SmsMessagesSourceValue,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.lazy(() => SmsMessages4$inboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
]);

/** @internal */
export type SmsMessagesSourceValue$Outbound =
    | SmsMessages4$Outbound
    | string
    | number
    | boolean
    | Array<any>;

/** @internal */
export const SmsMessagesSourceValue$outboundSchema: z.ZodType<
    SmsMessagesSourceValue$Outbound,
    z.ZodTypeDef,
    SmsMessagesSourceValue
> = z.union([
    z.lazy(() => SmsMessages4$outboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SmsMessagesSourceValue$ {
    /** @deprecated use `SmsMessagesSourceValue$inboundSchema` instead. */
    export const inboundSchema = SmsMessagesSourceValue$inboundSchema;
    /** @deprecated use `SmsMessagesSourceValue$outboundSchema` instead. */
    export const outboundSchema = SmsMessagesSourceValue$outboundSchema;
    /** @deprecated use `SmsMessagesSourceValue$Outbound` instead. */
    export type Outbound = SmsMessagesSourceValue$Outbound;
}

/** @internal */
export const SmsMessagesValue$inboundSchema: z.ZodType<SmsMessagesValue, z.ZodTypeDef, unknown> =
    z.object({});

/** @internal */
export type SmsMessagesValue$Outbound = {};

/** @internal */
export const SmsMessagesValue$outboundSchema: z.ZodType<
    SmsMessagesValue$Outbound,
    z.ZodTypeDef,
    SmsMessagesValue
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SmsMessagesValue$ {
    /** @deprecated use `SmsMessagesValue$inboundSchema` instead. */
    export const inboundSchema = SmsMessagesValue$inboundSchema;
    /** @deprecated use `SmsMessagesValue$outboundSchema` instead. */
    export const outboundSchema = SmsMessagesValue$outboundSchema;
    /** @deprecated use `SmsMessagesValue$Outbound` instead. */
    export type Outbound = SmsMessagesValue$Outbound;
}

/** @internal */
export const SmsMessagesMessageType$inboundSchema: z.ZodType<
    SmsMessagesMessageType,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        source_value: z
            .nullable(
                z.union([
                    z.lazy(() => SmsMessages4$inboundSchema),
                    z.string(),
                    z.number(),
                    z.boolean(),
                    z.array(z.any()),
                ])
            )
            .optional(),
        value: z.nullable(z.lazy(() => SmsMessagesValue$inboundSchema)).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            source_value: "sourceValue",
        });
    });

/** @internal */
export type SmsMessagesMessageType$Outbound = {
    source_value?:
        | SmsMessages4$Outbound
        | string
        | number
        | boolean
        | Array<any>
        | null
        | undefined;
    value?: SmsMessagesValue$Outbound | null | undefined;
};

/** @internal */
export const SmsMessagesMessageType$outboundSchema: z.ZodType<
    SmsMessagesMessageType$Outbound,
    z.ZodTypeDef,
    SmsMessagesMessageType
> = z
    .object({
        sourceValue: z
            .nullable(
                z.union([
                    z.lazy(() => SmsMessages4$outboundSchema),
                    z.string(),
                    z.number(),
                    z.boolean(),
                    z.array(z.any()),
                ])
            )
            .optional(),
        value: z.nullable(z.lazy(() => SmsMessagesValue$outboundSchema)).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            sourceValue: "source_value",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SmsMessagesMessageType$ {
    /** @deprecated use `SmsMessagesMessageType$inboundSchema` instead. */
    export const inboundSchema = SmsMessagesMessageType$inboundSchema;
    /** @deprecated use `SmsMessagesMessageType$outboundSchema` instead. */
    export const outboundSchema = SmsMessagesMessageType$outboundSchema;
    /** @deprecated use `SmsMessagesMessageType$Outbound` instead. */
    export type Outbound = SmsMessagesMessageType$Outbound;
}

/** @internal */
export const SmsMessages$inboundSchema: z.ZodType<SmsMessages, z.ZodTypeDef, unknown> = z
    .object({
        id: z.nullable(z.string()).optional(),
        message_content: z
            .nullable(z.lazy(() => SmsMessagesMessageContent$inboundSchema))
            .optional(),
        message_type: z.nullable(z.lazy(() => SmsMessagesMessageType$inboundSchema)).optional(),
        name: z.nullable(z.string()).optional(),
        remote_id: z.nullable(z.string()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            message_content: "messageContent",
            message_type: "messageType",
            remote_id: "remoteId",
        });
    });

/** @internal */
export type SmsMessages$Outbound = {
    id?: string | null | undefined;
    message_content?: SmsMessagesMessageContent$Outbound | null | undefined;
    message_type?: SmsMessagesMessageType$Outbound | null | undefined;
    name?: string | null | undefined;
    remote_id?: string | null | undefined;
};

/** @internal */
export const SmsMessages$outboundSchema: z.ZodType<
    SmsMessages$Outbound,
    z.ZodTypeDef,
    SmsMessages
> = z
    .object({
        id: z.nullable(z.string()).optional(),
        messageContent: z
            .nullable(z.lazy(() => SmsMessagesMessageContent$outboundSchema))
            .optional(),
        messageType: z.nullable(z.lazy(() => SmsMessagesMessageType$outboundSchema)).optional(),
        name: z.nullable(z.string()).optional(),
        remoteId: z.nullable(z.string()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            messageContent: "message_content",
            messageType: "message_type",
            remoteId: "remote_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SmsMessages$ {
    /** @deprecated use `SmsMessages$inboundSchema` instead. */
    export const inboundSchema = SmsMessages$inboundSchema;
    /** @deprecated use `SmsMessages$outboundSchema` instead. */
    export const outboundSchema = SmsMessages$outboundSchema;
    /** @deprecated use `SmsMessages$Outbound` instead. */
    export type Outbound = SmsMessages$Outbound;
}
