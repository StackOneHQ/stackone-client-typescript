/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  CountryCodeEnum,
  CountryCodeEnum$inboundSchema,
  CountryCodeEnum$Outbound,
  CountryCodeEnum$outboundSchema,
} from "./countrycodeenum.js";
import {
  CreateHRISBenefit,
  CreateHRISBenefit$inboundSchema,
  CreateHRISBenefit$Outbound,
  CreateHRISBenefit$outboundSchema,
} from "./createhrisbenefit.js";
import {
  CustomFields,
  CustomFields$inboundSchema,
  CustomFields$Outbound,
  CustomFields$outboundSchema,
} from "./customfields.js";
import {
  NationalIdentityNumberApiModel,
  NationalIdentityNumberApiModel$inboundSchema,
  NationalIdentityNumberApiModel$Outbound,
  NationalIdentityNumberApiModel$outboundSchema,
} from "./nationalidentitynumberapimodel.js";

/**
 * The employee avatar
 */
export type UpdateEmployeeApiModelAvatar = {
  base64?: string | null | undefined;
  url?: string | null | undefined;
};

export type UpdateEmployeeApiModelSchemasEmploymentEmploymentContractType4 = {};

export type UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeSourceValue =
  | UpdateEmployeeApiModelSchemasEmploymentEmploymentContractType4
  | string
  | number
  | boolean
  | Array<any>;

export enum UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeValue {
  FullTime = "full_time",
  Shifts = "shifts",
  PartTime = "part_time",
  UnmappedValue = "unmapped_value",
}
export type UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeValueOpen =
  OpenEnum<
    typeof UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeValue
  >;

/**
 * The employment work schedule type (e.g., full-time, part-time)
 */
export type UpdateEmployeeApiModelSchemasEmploymentContractType = {
  sourceValue?:
    | UpdateEmployeeApiModelSchemasEmploymentEmploymentContractType4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?:
    | UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeValueOpen
    | null
    | undefined;
};

export type UpdateEmployeeApiModelSchemasEmploymentEmploymentType4 = {};

/**
 * The source value of the employment type.
 */
export type UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeSourceValue =
  | UpdateEmployeeApiModelSchemasEmploymentEmploymentType4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The type of the employment.
 */
export enum UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeValue {
  Contractor = "contractor",
  Intern = "intern",
  Permanent = "permanent",
  Apprentice = "apprentice",
  Freelance = "freelance",
  Terminated = "terminated",
  Temporary = "temporary",
  Seasonal = "seasonal",
  Volunteer = "volunteer",
  Probation = "probation",
  Internal = "internal",
  External = "external",
  Expatriate = "expatriate",
  EmployerOfRecord = "employer_of_record",
  Casual = "casual",
  Programme = "Programme",
  UnmappedValue = "unmapped_value",
}
/**
 * The type of the employment.
 */
export type UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeValueOpen =
  OpenEnum<typeof UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeValue>;

/**
 * The type of employment (e.g., contractor, permanent)
 */
export type UpdateEmployeeApiModelSchemasEmploymentType = {
  /**
   * The source value of the employment type.
   */
  sourceValue?:
    | UpdateEmployeeApiModelSchemasEmploymentEmploymentType4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The type of the employment.
   */
  value?:
    | UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeValueOpen
    | null
    | undefined;
};

export type UpdateEmployeeApiModelSchemasEmployment4 = {};

/**
 * The source value of the pay frequency.
 */
export type UpdateEmployeeApiModelSchemasEmploymentSourceValue =
  | UpdateEmployeeApiModelSchemasEmployment4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The pay frequency of the job postings.
 */
export enum UpdateEmployeeApiModelSchemasEmploymentValue {
  Hourly = "hourly",
  Weekly = "weekly",
  BiWeekly = "bi_weekly",
  FourWeekly = "four_weekly",
  SemiMonthly = "semi_monthly",
  Monthly = "monthly",
  BiMonthly = "bi_monthly",
  Quarterly = "quarterly",
  SemiAnnually = "semi_annually",
  Yearly = "yearly",
  ThirteenMonthly = "thirteen_monthly",
  ProRata = "pro_rata",
  UnmappedValue = "unmapped_value",
  HalfYearly = "half_yearly",
  Daily = "daily",
}
/**
 * The pay frequency of the job postings.
 */
export type UpdateEmployeeApiModelSchemasEmploymentValueOpen = OpenEnum<
  typeof UpdateEmployeeApiModelSchemasEmploymentValue
>;

/**
 * The pay frequency
 */
export type UpdateEmployeeApiModelPayFrequency = {
  /**
   * The source value of the pay frequency.
   */
  sourceValue?:
    | UpdateEmployeeApiModelSchemasEmployment4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The pay frequency of the job postings.
   */
  value?: UpdateEmployeeApiModelSchemasEmploymentValueOpen | null | undefined;
};

export type UpdateEmployeeApiModelSchemasEmploymentPayPeriod4 = {};

/**
 * The source value of the pay period.
 */
export type UpdateEmployeeApiModelSchemasEmploymentPayPeriodSourceValue =
  | UpdateEmployeeApiModelSchemasEmploymentPayPeriod4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The pay period of the job postings.
 */
export enum UpdateEmployeeApiModelSchemasEmploymentPayPeriodValue {
  Hour = "hour",
  Day = "day",
  Week = "week",
  EveryTwoWeeks = "every_two_weeks",
  Month = "month",
  TwiceAMonth = "twice_a_month",
  EveryTwoMonths = "every_two_months",
  Quarter = "quarter",
  EverySixMonths = "every_six_months",
  Year = "year",
  OneOff = "one_off",
  None = "none",
  UnmappedValue = "unmapped_value",
}
/**
 * The pay period of the job postings.
 */
export type UpdateEmployeeApiModelSchemasEmploymentPayPeriodValueOpen =
  OpenEnum<typeof UpdateEmployeeApiModelSchemasEmploymentPayPeriodValue>;

/**
 * The pay period
 */
export type UpdateEmployeeApiModelPayPeriod = {
  /**
   * The source value of the pay period.
   */
  sourceValue?:
    | UpdateEmployeeApiModelSchemasEmploymentPayPeriod4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The pay period of the job postings.
   */
  value?:
    | UpdateEmployeeApiModelSchemasEmploymentPayPeriodValueOpen
    | null
    | undefined;
};

/**
 * The employee employment
 */
export type UpdateEmployeeApiModelEmployment = {
  /**
   * The effective date of the employment contract
   *
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  effectiveDate?: Date | null | undefined;
  /**
   * The employment work schedule type (e.g., full-time, part-time)
   */
  employmentContractType?:
    | UpdateEmployeeApiModelSchemasEmploymentContractType
    | null
    | undefined;
  /**
   * The type of employment (e.g., contractor, permanent)
   */
  employmentType?:
    | UpdateEmployeeApiModelSchemasEmploymentType
    | null
    | undefined;
  /**
   * Unique identifier
   */
  id?: string | null | undefined;
  /**
   * The job title of the employee
   */
  jobTitle?: string | null | undefined;
  /**
   * The currency used for pay
   */
  payCurrency?: string | null | undefined;
  /**
   * The pay frequency
   */
  payFrequency?: UpdateEmployeeApiModelPayFrequency | null | undefined;
  /**
   * The pay period
   */
  payPeriod?: UpdateEmployeeApiModelPayPeriod | null | undefined;
  /**
   * The pay rate for the employee
   */
  payRate?: string | null | undefined;
  /**
   * The time worked for the employee in ISO 8601 duration format
   */
  timeWorked?: string | null | undefined;
  /**
   * Custom Unified Fields configured in your StackOne project
   */
  unifiedCustomFields?: { [k: string]: any } | null | undefined;
};

export type UpdateEmployeeApiModel4 = {};

export type UpdateEmployeeApiModelSourceValue =
  | UpdateEmployeeApiModel4
  | string
  | number
  | boolean
  | Array<any>;

export enum UpdateEmployeeApiModelValue {
  FullTime = "full_time",
  Shifts = "shifts",
  PartTime = "part_time",
  UnmappedValue = "unmapped_value",
}
export type UpdateEmployeeApiModelValueOpen = OpenEnum<
  typeof UpdateEmployeeApiModelValue
>;

/**
 * The employment work schedule type (e.g., full-time, part-time)
 */
export type UpdateEmployeeApiModelEmploymentContractType = {
  sourceValue?:
    | UpdateEmployeeApiModel4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: UpdateEmployeeApiModelValueOpen | null | undefined;
};

export type UpdateEmployeeApiModelSchemas4 = {};

export type UpdateEmployeeApiModelSchemasSourceValue =
  | UpdateEmployeeApiModelSchemas4
  | string
  | number
  | boolean
  | Array<any>;

export enum UpdateEmployeeApiModelSchemasValue {
  Active = "active",
  Pending = "pending",
  Terminated = "terminated",
  Leave = "leave",
  Inactive = "inactive",
  Unknown = "unknown",
  UnmappedValue = "unmapped_value",
}
export type UpdateEmployeeApiModelSchemasValueOpen = OpenEnum<
  typeof UpdateEmployeeApiModelSchemasValue
>;

/**
 * The employee employment status
 */
export type UpdateEmployeeApiModelEmploymentStatus = {
  sourceValue?:
    | UpdateEmployeeApiModelSchemas4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: UpdateEmployeeApiModelSchemasValueOpen | null | undefined;
};

export type UpdateEmployeeApiModelSchemasEmploymentType4 = {};

/**
 * The source value of the employment type.
 */
export type UpdateEmployeeApiModelSchemasEmploymentTypeSourceValue =
  | UpdateEmployeeApiModelSchemasEmploymentType4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The type of the employment.
 */
export enum UpdateEmployeeApiModelSchemasEmploymentTypeValue {
  Contractor = "contractor",
  Intern = "intern",
  Permanent = "permanent",
  Apprentice = "apprentice",
  Freelance = "freelance",
  Terminated = "terminated",
  Temporary = "temporary",
  Seasonal = "seasonal",
  Volunteer = "volunteer",
  Probation = "probation",
  Internal = "internal",
  External = "external",
  Expatriate = "expatriate",
  EmployerOfRecord = "employer_of_record",
  Casual = "casual",
  Programme = "Programme",
  UnmappedValue = "unmapped_value",
}
/**
 * The type of the employment.
 */
export type UpdateEmployeeApiModelSchemasEmploymentTypeValueOpen = OpenEnum<
  typeof UpdateEmployeeApiModelSchemasEmploymentTypeValue
>;

/**
 * The employee employment type
 */
export type UpdateEmployeeApiModelEmploymentType = {
  /**
   * The source value of the employment type.
   */
  sourceValue?:
    | UpdateEmployeeApiModelSchemasEmploymentType4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The type of the employment.
   */
  value?:
    | UpdateEmployeeApiModelSchemasEmploymentTypeValueOpen
    | null
    | undefined;
};

export type UpdateEmployeeApiModelSchemasEthnicity4 = {};

export type UpdateEmployeeApiModelSchemasEthnicitySourceValue =
  | UpdateEmployeeApiModelSchemasEthnicity4
  | string
  | number
  | boolean
  | Array<any>;

export enum UpdateEmployeeApiModelSchemasEthnicityValue {
  White = "white",
  BlackOrAfricanAmerican = "black_or_african_american",
  Asian = "asian",
  HispanicOrLatino = "hispanic_or_latino",
  AmericanIndianOrAlaskaNative = "american_indian_or_alaska_native",
  NativeHawaiianOrPacificIslander = "native_hawaiian_or_pacific_islander",
  TwoOrMoreRaces = "two_or_more_races",
  NotDisclosed = "not_disclosed",
  Other = "other",
  UnmappedValue = "unmapped_value",
}
export type UpdateEmployeeApiModelSchemasEthnicityValueOpen = OpenEnum<
  typeof UpdateEmployeeApiModelSchemasEthnicityValue
>;

/**
 * The employee ethnicity
 */
export type UpdateEmployeeApiModelEthnicity = {
  sourceValue?:
    | UpdateEmployeeApiModelSchemasEthnicity4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: UpdateEmployeeApiModelSchemasEthnicityValueOpen | null | undefined;
};

export type UpdateEmployeeApiModelSchemasGender4 = {};

export type UpdateEmployeeApiModelSchemasGenderSourceValue =
  | UpdateEmployeeApiModelSchemasGender4
  | string
  | number
  | boolean
  | Array<any>;

export enum UpdateEmployeeApiModelSchemasGenderValue {
  Male = "male",
  Female = "female",
  NonBinary = "non_binary",
  Other = "other",
  NotDisclosed = "not_disclosed",
  Diverse = "diverse",
  UnmappedValue = "unmapped_value",
}
export type UpdateEmployeeApiModelSchemasGenderValueOpen = OpenEnum<
  typeof UpdateEmployeeApiModelSchemasGenderValue
>;

/**
 * The employee gender
 */
export type UpdateEmployeeApiModelGender = {
  sourceValue?:
    | UpdateEmployeeApiModelSchemasGender4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: UpdateEmployeeApiModelSchemasGenderValueOpen | null | undefined;
};

export type UpdateEmployeeApiModelSchemasHomeLocation4 = {};

export type UpdateEmployeeApiModelSchemasHomeLocationSourceValue =
  | UpdateEmployeeApiModelSchemasHomeLocation4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The ISO3166-1 Alpha2 Code of the Country
 */
export enum UpdateEmployeeApiModelSchemasHomeLocationValue {
  Af = "AF",
  Al = "AL",
  Dz = "DZ",
  As = "AS",
  Ad = "AD",
  Ao = "AO",
  Ai = "AI",
  Aq = "AQ",
  Ag = "AG",
  Ar = "AR",
  Am = "AM",
  Aw = "AW",
  Au = "AU",
  At = "AT",
  Az = "AZ",
  Bs = "BS",
  Bh = "BH",
  Bd = "BD",
  Bb = "BB",
  By = "BY",
  Be = "BE",
  Bz = "BZ",
  Bj = "BJ",
  Bm = "BM",
  Bt = "BT",
  Bo = "BO",
  Bq = "BQ",
  Ba = "BA",
  Bw = "BW",
  Bv = "BV",
  Br = "BR",
  Io = "IO",
  Bn = "BN",
  Bg = "BG",
  Bf = "BF",
  Bi = "BI",
  Kh = "KH",
  Cm = "CM",
  Ca = "CA",
  Cv = "CV",
  Ky = "KY",
  Cf = "CF",
  Td = "TD",
  Cl = "CL",
  Cn = "CN",
  Cx = "CX",
  Cc = "CC",
  Co = "CO",
  Km = "KM",
  Cg = "CG",
  Cd = "CD",
  Ck = "CK",
  Cr = "CR",
  Hr = "HR",
  Cu = "CU",
  Cw = "CW",
  Cy = "CY",
  Cz = "CZ",
  Ci = "CI",
  Dk = "DK",
  Dj = "DJ",
  Dm = "DM",
  Do = "DO",
  Ec = "EC",
  Eg = "EG",
  Sv = "SV",
  Gq = "GQ",
  Er = "ER",
  Ee = "EE",
  Et = "ET",
  Fk = "FK",
  Fo = "FO",
  Fj = "FJ",
  Fi = "FI",
  Fr = "FR",
  Gf = "GF",
  Pf = "PF",
  Tf = "TF",
  Ga = "GA",
  Gm = "GM",
  Ge = "GE",
  De = "DE",
  Gh = "GH",
  Gi = "GI",
  Gr = "GR",
  Gl = "GL",
  Gd = "GD",
  Gp = "GP",
  Gu = "GU",
  Gt = "GT",
  Gg = "GG",
  Gn = "GN",
  Gw = "GW",
  Gy = "GY",
  Ht = "HT",
  Hm = "HM",
  Va = "VA",
  Hn = "HN",
  Hk = "HK",
  Hu = "HU",
  Is = "IS",
  In = "IN",
  Id = "ID",
  Ir = "IR",
  Iq = "IQ",
  Ie = "IE",
  Im = "IM",
  Il = "IL",
  It = "IT",
  Jm = "JM",
  Jp = "JP",
  Je = "JE",
  Jo = "JO",
  Kz = "KZ",
  Ke = "KE",
  Ki = "KI",
  Kp = "KP",
  Kr = "KR",
  Kw = "KW",
  Kg = "KG",
  La = "LA",
  Lv = "LV",
  Lb = "LB",
  Ls = "LS",
  Lr = "LR",
  Ly = "LY",
  Li = "LI",
  Lt = "LT",
  Lu = "LU",
  Mo = "MO",
  Mk = "MK",
  Mg = "MG",
  Mw = "MW",
  My = "MY",
  Mv = "MV",
  Ml = "ML",
  Mt = "MT",
  Mh = "MH",
  Mq = "MQ",
  Mr = "MR",
  Mu = "MU",
  Yt = "YT",
  Mx = "MX",
  Fm = "FM",
  Md = "MD",
  Mc = "MC",
  Mn = "MN",
  Me = "ME",
  Ms = "MS",
  Ma = "MA",
  Mz = "MZ",
  Mm = "MM",
  Na = "NA",
  Nr = "NR",
  Np = "NP",
  Nl = "NL",
  Nc = "NC",
  Nz = "NZ",
  Ni = "NI",
  Ne = "NE",
  Ng = "NG",
  Nu = "NU",
  Nf = "NF",
  Mp = "MP",
  No = "NO",
  Om = "OM",
  Pk = "PK",
  Pw = "PW",
  Ps = "PS",
  Pa = "PA",
  Pg = "PG",
  Py = "PY",
  Pe = "PE",
  Ph = "PH",
  Pn = "PN",
  Pl = "PL",
  Pt = "PT",
  Pr = "PR",
  Qa = "QA",
  Ro = "RO",
  Ru = "RU",
  Rw = "RW",
  Re = "RE",
  Bl = "BL",
  Sh = "SH",
  Kn = "KN",
  Lc = "LC",
  Mf = "MF",
  Pm = "PM",
  Vc = "VC",
  Ws = "WS",
  Sm = "SM",
  St = "ST",
  Sa = "SA",
  Sn = "SN",
  Rs = "RS",
  Sc = "SC",
  Sl = "SL",
  Sg = "SG",
  Sx = "SX",
  Sk = "SK",
  Si = "SI",
  Sb = "SB",
  So = "SO",
  Za = "ZA",
  Gs = "GS",
  Ss = "SS",
  Es = "ES",
  Lk = "LK",
  Sd = "SD",
  Sr = "SR",
  Sj = "SJ",
  Sz = "SZ",
  Se = "SE",
  Ch = "CH",
  Sy = "SY",
  Tw = "TW",
  Tj = "TJ",
  Tz = "TZ",
  Th = "TH",
  Tl = "TL",
  Tg = "TG",
  Tk = "TK",
  To = "TO",
  Tt = "TT",
  Tn = "TN",
  Tr = "TR",
  Tm = "TM",
  Tc = "TC",
  Tv = "TV",
  Ug = "UG",
  Ua = "UA",
  Ae = "AE",
  Gb = "GB",
  Us = "US",
  Um = "UM",
  Uy = "UY",
  Uz = "UZ",
  Vu = "VU",
  Ve = "VE",
  Vn = "VN",
  Vg = "VG",
  Vi = "VI",
  Wf = "WF",
  Eh = "EH",
  Ye = "YE",
  Zm = "ZM",
  Zw = "ZW",
  UnmappedValue = "unmapped_value",
}
/**
 * The ISO3166-1 Alpha2 Code of the Country
 */
export type UpdateEmployeeApiModelSchemasHomeLocationValueOpen = OpenEnum<
  typeof UpdateEmployeeApiModelSchemasHomeLocationValue
>;

/**
 * The country code
 */
export type UpdateEmployeeApiModelCountry = {
  sourceValue?:
    | UpdateEmployeeApiModelSchemasHomeLocation4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The ISO3166-1 Alpha2 Code of the Country
   */
  value?: UpdateEmployeeApiModelSchemasHomeLocationValueOpen | null | undefined;
};

export type UpdateEmployeeApiModelSchemasHomeLocationState4 = {};

export type UpdateEmployeeApiModelSchemasHomeLocationStateSourceValue =
  | UpdateEmployeeApiModelSchemasHomeLocationState4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The ISO3166-2 sub division where the location is situated
 */
export type UpdateEmployeeApiModelState = {
  sourceValue?:
    | UpdateEmployeeApiModelSchemasHomeLocationState4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * state (ISO3166-2 Sub Division Code) - value must be a valid enum value
   */
  value?: string | null | undefined;
};

/**
 * The employee home location
 */
export type UpdateEmployeeApiModelHomeLocation = {
  /**
   * The city where the location is situated
   */
  city?: string | null | undefined;
  /**
   * The country code
   */
  country?: UpdateEmployeeApiModelCountry | null | undefined;
  /**
   * Unique identifier
   */
  id?: string | null | undefined;
  /**
   * The name of the location
   */
  name?: string | null | undefined;
  /**
   * Value to pass through to the provider
   */
  passthrough?: { [k: string]: any } | null | undefined;
  /**
   * The phone number of the location
   */
  phoneNumber?: string | null | undefined;
  /**
   * The ISO3166-2 sub division where the location is situated
   */
  state?: UpdateEmployeeApiModelState | null | undefined;
  /**
   * The first line of the address
   */
  street1?: string | null | undefined;
  /**
   * The second line of the address
   */
  street2?: string | null | undefined;
  /**
   * The ZIP code/Postal code of the location
   */
  zipCode?: string | null | undefined;
};

export type UpdateEmployeeApiModelSchemasMaritalStatus4 = {};

export type UpdateEmployeeApiModelSchemasMaritalStatusSourceValue =
  | UpdateEmployeeApiModelSchemasMaritalStatus4
  | string
  | number
  | boolean
  | Array<any>;

export enum UpdateEmployeeApiModelSchemasMaritalStatusValue {
  Single = "single",
  Married = "married",
  CommonLaw = "common_law",
  Divorced = "divorced",
  Widowed = "widowed",
  DomesticPartnership = "domestic_partnership",
  Separated = "separated",
  Other = "other",
  NotDisclosed = "not_disclosed",
  UnmappedValue = "unmapped_value",
}
export type UpdateEmployeeApiModelSchemasMaritalStatusValueOpen = OpenEnum<
  typeof UpdateEmployeeApiModelSchemasMaritalStatusValue
>;

/**
 * The employee marital status
 */
export type UpdateEmployeeApiModelMaritalStatus = {
  sourceValue?:
    | UpdateEmployeeApiModelSchemasMaritalStatus4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?:
    | UpdateEmployeeApiModelSchemasMaritalStatusValueOpen
    | null
    | undefined;
};

export type UpdateEmployeeApiModelSchemasNationalIdentityNumber4 = {};

export type UpdateEmployeeApiModelSchemasNationalIdentityNumberSourceValue =
  | UpdateEmployeeApiModelSchemasNationalIdentityNumber4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The ISO3166-1 Alpha2 Code of the Country
 */
export enum UpdateEmployeeApiModelSchemasNationalIdentityNumberValue {
  Af = "AF",
  Al = "AL",
  Dz = "DZ",
  As = "AS",
  Ad = "AD",
  Ao = "AO",
  Ai = "AI",
  Aq = "AQ",
  Ag = "AG",
  Ar = "AR",
  Am = "AM",
  Aw = "AW",
  Au = "AU",
  At = "AT",
  Az = "AZ",
  Bs = "BS",
  Bh = "BH",
  Bd = "BD",
  Bb = "BB",
  By = "BY",
  Be = "BE",
  Bz = "BZ",
  Bj = "BJ",
  Bm = "BM",
  Bt = "BT",
  Bo = "BO",
  Bq = "BQ",
  Ba = "BA",
  Bw = "BW",
  Bv = "BV",
  Br = "BR",
  Io = "IO",
  Bn = "BN",
  Bg = "BG",
  Bf = "BF",
  Bi = "BI",
  Kh = "KH",
  Cm = "CM",
  Ca = "CA",
  Cv = "CV",
  Ky = "KY",
  Cf = "CF",
  Td = "TD",
  Cl = "CL",
  Cn = "CN",
  Cx = "CX",
  Cc = "CC",
  Co = "CO",
  Km = "KM",
  Cg = "CG",
  Cd = "CD",
  Ck = "CK",
  Cr = "CR",
  Hr = "HR",
  Cu = "CU",
  Cw = "CW",
  Cy = "CY",
  Cz = "CZ",
  Ci = "CI",
  Dk = "DK",
  Dj = "DJ",
  Dm = "DM",
  Do = "DO",
  Ec = "EC",
  Eg = "EG",
  Sv = "SV",
  Gq = "GQ",
  Er = "ER",
  Ee = "EE",
  Et = "ET",
  Fk = "FK",
  Fo = "FO",
  Fj = "FJ",
  Fi = "FI",
  Fr = "FR",
  Gf = "GF",
  Pf = "PF",
  Tf = "TF",
  Ga = "GA",
  Gm = "GM",
  Ge = "GE",
  De = "DE",
  Gh = "GH",
  Gi = "GI",
  Gr = "GR",
  Gl = "GL",
  Gd = "GD",
  Gp = "GP",
  Gu = "GU",
  Gt = "GT",
  Gg = "GG",
  Gn = "GN",
  Gw = "GW",
  Gy = "GY",
  Ht = "HT",
  Hm = "HM",
  Va = "VA",
  Hn = "HN",
  Hk = "HK",
  Hu = "HU",
  Is = "IS",
  In = "IN",
  Id = "ID",
  Ir = "IR",
  Iq = "IQ",
  Ie = "IE",
  Im = "IM",
  Il = "IL",
  It = "IT",
  Jm = "JM",
  Jp = "JP",
  Je = "JE",
  Jo = "JO",
  Kz = "KZ",
  Ke = "KE",
  Ki = "KI",
  Kp = "KP",
  Kr = "KR",
  Kw = "KW",
  Kg = "KG",
  La = "LA",
  Lv = "LV",
  Lb = "LB",
  Ls = "LS",
  Lr = "LR",
  Ly = "LY",
  Li = "LI",
  Lt = "LT",
  Lu = "LU",
  Mo = "MO",
  Mk = "MK",
  Mg = "MG",
  Mw = "MW",
  My = "MY",
  Mv = "MV",
  Ml = "ML",
  Mt = "MT",
  Mh = "MH",
  Mq = "MQ",
  Mr = "MR",
  Mu = "MU",
  Yt = "YT",
  Mx = "MX",
  Fm = "FM",
  Md = "MD",
  Mc = "MC",
  Mn = "MN",
  Me = "ME",
  Ms = "MS",
  Ma = "MA",
  Mz = "MZ",
  Mm = "MM",
  Na = "NA",
  Nr = "NR",
  Np = "NP",
  Nl = "NL",
  Nc = "NC",
  Nz = "NZ",
  Ni = "NI",
  Ne = "NE",
  Ng = "NG",
  Nu = "NU",
  Nf = "NF",
  Mp = "MP",
  No = "NO",
  Om = "OM",
  Pk = "PK",
  Pw = "PW",
  Ps = "PS",
  Pa = "PA",
  Pg = "PG",
  Py = "PY",
  Pe = "PE",
  Ph = "PH",
  Pn = "PN",
  Pl = "PL",
  Pt = "PT",
  Pr = "PR",
  Qa = "QA",
  Ro = "RO",
  Ru = "RU",
  Rw = "RW",
  Re = "RE",
  Bl = "BL",
  Sh = "SH",
  Kn = "KN",
  Lc = "LC",
  Mf = "MF",
  Pm = "PM",
  Vc = "VC",
  Ws = "WS",
  Sm = "SM",
  St = "ST",
  Sa = "SA",
  Sn = "SN",
  Rs = "RS",
  Sc = "SC",
  Sl = "SL",
  Sg = "SG",
  Sx = "SX",
  Sk = "SK",
  Si = "SI",
  Sb = "SB",
  So = "SO",
  Za = "ZA",
  Gs = "GS",
  Ss = "SS",
  Es = "ES",
  Lk = "LK",
  Sd = "SD",
  Sr = "SR",
  Sj = "SJ",
  Sz = "SZ",
  Se = "SE",
  Ch = "CH",
  Sy = "SY",
  Tw = "TW",
  Tj = "TJ",
  Tz = "TZ",
  Th = "TH",
  Tl = "TL",
  Tg = "TG",
  Tk = "TK",
  To = "TO",
  Tt = "TT",
  Tn = "TN",
  Tr = "TR",
  Tm = "TM",
  Tc = "TC",
  Tv = "TV",
  Ug = "UG",
  Ua = "UA",
  Ae = "AE",
  Gb = "GB",
  Us = "US",
  Um = "UM",
  Uy = "UY",
  Uz = "UZ",
  Vu = "VU",
  Ve = "VE",
  Vn = "VN",
  Vg = "VG",
  Vi = "VI",
  Wf = "WF",
  Eh = "EH",
  Ye = "YE",
  Zm = "ZM",
  Zw = "ZW",
  UnmappedValue = "unmapped_value",
}
/**
 * The ISO3166-1 Alpha2 Code of the Country
 */
export type UpdateEmployeeApiModelSchemasNationalIdentityNumberValueOpen =
  OpenEnum<typeof UpdateEmployeeApiModelSchemasNationalIdentityNumberValue>;

/**
 * The country code
 */
export type UpdateEmployeeApiModelSchemasCountry = {
  sourceValue?:
    | UpdateEmployeeApiModelSchemasNationalIdentityNumber4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The ISO3166-1 Alpha2 Code of the Country
   */
  value?:
    | UpdateEmployeeApiModelSchemasNationalIdentityNumberValueOpen
    | null
    | undefined;
};

export type UpdateEmployeeApiModelSchemasNationalIdentityNumberType4 = {};

export type UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeSourceValue =
  | UpdateEmployeeApiModelSchemasNationalIdentityNumberType4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The type of the national identity number
 */
export enum UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeValue {
  Ssn = "ssn",
  Nin = "nin",
  Sin = "sin",
  Nid = "nid",
  Pin = "pin",
  Pn = "pn",
  Umcn = "umcn",
  Pic = "pic",
  Ric = "ric",
  Idnum = "idnum",
  Cid = "cid",
  Nidnr = "nidnr",
  Pan = "pan",
  Aadhaar = "aadhaar",
  Epic = "epic",
  Ptn = "ptn",
  Itin = "itin",
  Tin = "tin",
  Uprc = "uprc",
  Pcode = "pcode",
  Ssi = "ssi",
  Cedula = "cedula",
  Passport = "passport",
  Voterid = "voterid",
  Ntin = "ntin",
  Bn = "bn",
  Fnr = "fnr",
  Mva = "mva",
  CivilId = "civil_id",
  Cnic = "cnic",
  Nric = "nric",
  Fin = "fin",
  Uen = "uen",
  Registrationnumber = "registrationnumber",
  Nic = "nic",
  Personnummer = "personnummer",
  Ahv = "ahv",
  Id = "id",
  Eid = "eid",
  Va = "va",
  Pid = "pid",
  Nrt = "nrt",
  Nipt = "nipt",
  Cbu = "cbu",
  Cuit = "cuit",
  Dni = "dni",
  Businessid = "businessid",
  Vnr = "vnr",
  Abn = "abn",
  Acn = "acn",
  Tfn = "tfn",
  Jmbg = "jmbg",
  Bis = "bis",
  Insz = "insz",
  Nn = "nn",
  Egn = "egn",
  Pnf = "pnf",
  Vat = "vat",
  Cnpj = "cnpj",
  Unp = "unp",
  Gst = "gst",
  Pst = "pst",
  Qst = "qst",
  Ni = "ni",
  Dic = "dic",
  Rc = "rc",
  Uid = "uid",
  Rut = "rut",
  Uscc = "uscc",
  Cpf = "cpf",
  Cpj = "cpj",
  Cr = "cr",
  Stnr = "stnr",
  Svnr = "svnr",
  Ncf = "ncf",
  Rnc = "rnc",
  Nif = "nif",
  Ci = "ci",
  Ik = "ik",
  Kmkr = "kmkr",
  Registrikood = "registrikood",
  Tn = "tn",
  Ruc = "ruc",
  Nit = "nit",
  Alv = "alv",
  Hetu = "hetu",
  Ytunnus = "ytunnus",
  Vn = "vn",
  Utr = "utr",
  Nifp = "nifp",
  Amka = "amka",
  Cui = "cui",
  Nir = "nir",
  Siren = "siren",
  Siret = "siret",
  Tva = "tva",
  Oib = "oib",
  Hkid = "hkid",
  Anum = "anum",
  Kennitala = "kennitala",
  Vsk = "vsk",
  Npwp = "npwp",
  Pps = "pps",
  Gstin = "gstin",
  Idnr = "idnr",
  Hr = "hr",
  Aic = "aic",
  Codicefiscale = "codicefiscale",
  Iva = "iva",
  Peid = "peid",
  Asmens = "asmens",
  Pvm = "pvm",
  Ctps = "ctps",
  Vrn = "vrn",
  Vtk = "vtk",
  Int = "int",
  Tk = "tk",
  Pas = "pas",
  Rne = "rne",
  Rg = "rg",
  Nci = "nci",
  Crnm = "crnm",
  Pis = "pis",
  Insee = "insee",
  Tax = "tax",
  Mpf = "mpf",
  Epfo = "epfo",
  Esi = "esi",
  Pran = "pran",
  Uan = "uan",
  Idk = "idk",
  Bsn = "bsn",
  Mid = "mid",
  Sss = "sss",
  Nie = "nie",
  Nss = "nss",
  Arc = "arc",
  Curp = "curp",
  Imss = "imss",
  Rfc = "rfc",
  Ein = "ein",
  Other = "other",
  Unknown = "unknown",
}
/**
 * The type of the national identity number
 */
export type UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeValueOpen =
  OpenEnum<typeof UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeValue>;

export type UpdateEmployeeApiModelType = {
  sourceValue?:
    | UpdateEmployeeApiModelSchemasNationalIdentityNumberType4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The type of the national identity number
   */
  value?:
    | UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeValueOpen
    | null
    | undefined;
};

/**
 * The national identity number
 *
 * @deprecated class: This will be removed in a future release, please migrate away from it as soon as possible.
 */
export type UpdateEmployeeApiModelNationalIdentityNumber = {
  /**
   * The country code
   */
  country?: UpdateEmployeeApiModelSchemasCountry | null | undefined;
  type?: UpdateEmployeeApiModelType | null | undefined;
  value?: string | null | undefined;
};

export type UpdateEmployeeApiModelSchemasPreferredLanguage4 = {};

export type UpdateEmployeeApiModelSchemasPreferredLanguageSourceValue =
  | UpdateEmployeeApiModelSchemasPreferredLanguage4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The ISO639-2 Code of the language
 */
export enum UpdateEmployeeApiModelSchemasPreferredLanguageValue {
  Aar = "aar",
  Afr = "afr",
  Amh = "amh",
  Ara = "ara",
  Aym = "aym",
  Aze = "aze",
  Bel = "bel",
  Bul = "bul",
  Bis = "bis",
  Ben = "ben",
  Bos = "bos",
  Byn = "byn",
  Cat = "cat",
  Cha = "cha",
  Ces = "ces",
  Deu = "deu",
  Div = "div",
  Dzo = "dzo",
  Ell = "ell",
  Eng = "eng",
  Spa = "spa",
  Est = "est",
  Fas = "fas",
  Fan = "fan",
  Ful = "ful",
  Fin = "fin",
  Fij = "fij",
  Fao = "fao",
  Fra = "fra",
  Gle = "gle",
  Grn = "grn",
  Glv = "glv",
  Heb = "heb",
  Hin = "hin",
  Hrv = "hrv",
  Hat = "hat",
  Hun = "hun",
  Hye = "hye",
  Ind = "ind",
  Isl = "isl",
  Ita = "ita",
  Jpn = "jpn",
  Kat = "kat",
  Kon = "kon",
  Kaz = "kaz",
  Kal = "kal",
  Khm = "khm",
  Kor = "kor",
  Kur = "kur",
  Kir = "kir",
  Lat = "lat",
  Ltz = "ltz",
  Lin = "lin",
  Lao = "lao",
  Lit = "lit",
  Lub = "lub",
  Lav = "lav",
  Mlg = "mlg",
  Mah = "mah",
  Mri = "mri",
  Mkd = "mkd",
  Msa = "msa",
  Mlt = "mlt",
  Mya = "mya",
  Nob = "nob",
  Nep = "nep",
  Nld = "nld",
  Nno = "nno",
  Nor = "nor",
  Nbl = "nbl",
  Nya = "nya",
  Pan = "pan",
  Pol = "pol",
  Pus = "pus",
  Por = "por",
  Rar = "rar",
  Roh = "roh",
  Rup = "rup",
  Ron = "ron",
  Rus = "rus",
  Kin = "kin",
  Sag = "sag",
  Sin = "sin",
  Slk = "slk",
  Smo = "smo",
  Sna = "sna",
  Som = "som",
  Sqi = "sqi",
  Srp = "srp",
  Ssw = "ssw",
  Swe = "swe",
  Swa = "swa",
  Tam = "tam",
  Tgk = "tgk",
  Tha = "tha",
  Tir = "tir",
  Tig = "tig",
  Zho = "zho",
  UnmappedValue = "unmapped_value",
}
/**
 * The ISO639-2 Code of the language
 */
export type UpdateEmployeeApiModelSchemasPreferredLanguageValueOpen = OpenEnum<
  typeof UpdateEmployeeApiModelSchemasPreferredLanguageValue
>;

/**
 * The employee preferred language
 */
export type UpdateEmployeeApiModelPreferredLanguage = {
  sourceValue?:
    | UpdateEmployeeApiModelSchemasPreferredLanguage4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The ISO639-2 Code of the language
   */
  value?:
    | UpdateEmployeeApiModelSchemasPreferredLanguageValueOpen
    | null
    | undefined;
};

export type UpdateEmployeeApiModelSchemasWorkLocation4 = {};

export type UpdateEmployeeApiModelSchemasWorkLocationSourceValue =
  | UpdateEmployeeApiModelSchemasWorkLocation4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The ISO3166-1 Alpha2 Code of the Country
 */
export enum UpdateEmployeeApiModelSchemasWorkLocationValue {
  Af = "AF",
  Al = "AL",
  Dz = "DZ",
  As = "AS",
  Ad = "AD",
  Ao = "AO",
  Ai = "AI",
  Aq = "AQ",
  Ag = "AG",
  Ar = "AR",
  Am = "AM",
  Aw = "AW",
  Au = "AU",
  At = "AT",
  Az = "AZ",
  Bs = "BS",
  Bh = "BH",
  Bd = "BD",
  Bb = "BB",
  By = "BY",
  Be = "BE",
  Bz = "BZ",
  Bj = "BJ",
  Bm = "BM",
  Bt = "BT",
  Bo = "BO",
  Bq = "BQ",
  Ba = "BA",
  Bw = "BW",
  Bv = "BV",
  Br = "BR",
  Io = "IO",
  Bn = "BN",
  Bg = "BG",
  Bf = "BF",
  Bi = "BI",
  Kh = "KH",
  Cm = "CM",
  Ca = "CA",
  Cv = "CV",
  Ky = "KY",
  Cf = "CF",
  Td = "TD",
  Cl = "CL",
  Cn = "CN",
  Cx = "CX",
  Cc = "CC",
  Co = "CO",
  Km = "KM",
  Cg = "CG",
  Cd = "CD",
  Ck = "CK",
  Cr = "CR",
  Hr = "HR",
  Cu = "CU",
  Cw = "CW",
  Cy = "CY",
  Cz = "CZ",
  Ci = "CI",
  Dk = "DK",
  Dj = "DJ",
  Dm = "DM",
  Do = "DO",
  Ec = "EC",
  Eg = "EG",
  Sv = "SV",
  Gq = "GQ",
  Er = "ER",
  Ee = "EE",
  Et = "ET",
  Fk = "FK",
  Fo = "FO",
  Fj = "FJ",
  Fi = "FI",
  Fr = "FR",
  Gf = "GF",
  Pf = "PF",
  Tf = "TF",
  Ga = "GA",
  Gm = "GM",
  Ge = "GE",
  De = "DE",
  Gh = "GH",
  Gi = "GI",
  Gr = "GR",
  Gl = "GL",
  Gd = "GD",
  Gp = "GP",
  Gu = "GU",
  Gt = "GT",
  Gg = "GG",
  Gn = "GN",
  Gw = "GW",
  Gy = "GY",
  Ht = "HT",
  Hm = "HM",
  Va = "VA",
  Hn = "HN",
  Hk = "HK",
  Hu = "HU",
  Is = "IS",
  In = "IN",
  Id = "ID",
  Ir = "IR",
  Iq = "IQ",
  Ie = "IE",
  Im = "IM",
  Il = "IL",
  It = "IT",
  Jm = "JM",
  Jp = "JP",
  Je = "JE",
  Jo = "JO",
  Kz = "KZ",
  Ke = "KE",
  Ki = "KI",
  Kp = "KP",
  Kr = "KR",
  Kw = "KW",
  Kg = "KG",
  La = "LA",
  Lv = "LV",
  Lb = "LB",
  Ls = "LS",
  Lr = "LR",
  Ly = "LY",
  Li = "LI",
  Lt = "LT",
  Lu = "LU",
  Mo = "MO",
  Mk = "MK",
  Mg = "MG",
  Mw = "MW",
  My = "MY",
  Mv = "MV",
  Ml = "ML",
  Mt = "MT",
  Mh = "MH",
  Mq = "MQ",
  Mr = "MR",
  Mu = "MU",
  Yt = "YT",
  Mx = "MX",
  Fm = "FM",
  Md = "MD",
  Mc = "MC",
  Mn = "MN",
  Me = "ME",
  Ms = "MS",
  Ma = "MA",
  Mz = "MZ",
  Mm = "MM",
  Na = "NA",
  Nr = "NR",
  Np = "NP",
  Nl = "NL",
  Nc = "NC",
  Nz = "NZ",
  Ni = "NI",
  Ne = "NE",
  Ng = "NG",
  Nu = "NU",
  Nf = "NF",
  Mp = "MP",
  No = "NO",
  Om = "OM",
  Pk = "PK",
  Pw = "PW",
  Ps = "PS",
  Pa = "PA",
  Pg = "PG",
  Py = "PY",
  Pe = "PE",
  Ph = "PH",
  Pn = "PN",
  Pl = "PL",
  Pt = "PT",
  Pr = "PR",
  Qa = "QA",
  Ro = "RO",
  Ru = "RU",
  Rw = "RW",
  Re = "RE",
  Bl = "BL",
  Sh = "SH",
  Kn = "KN",
  Lc = "LC",
  Mf = "MF",
  Pm = "PM",
  Vc = "VC",
  Ws = "WS",
  Sm = "SM",
  St = "ST",
  Sa = "SA",
  Sn = "SN",
  Rs = "RS",
  Sc = "SC",
  Sl = "SL",
  Sg = "SG",
  Sx = "SX",
  Sk = "SK",
  Si = "SI",
  Sb = "SB",
  So = "SO",
  Za = "ZA",
  Gs = "GS",
  Ss = "SS",
  Es = "ES",
  Lk = "LK",
  Sd = "SD",
  Sr = "SR",
  Sj = "SJ",
  Sz = "SZ",
  Se = "SE",
  Ch = "CH",
  Sy = "SY",
  Tw = "TW",
  Tj = "TJ",
  Tz = "TZ",
  Th = "TH",
  Tl = "TL",
  Tg = "TG",
  Tk = "TK",
  To = "TO",
  Tt = "TT",
  Tn = "TN",
  Tr = "TR",
  Tm = "TM",
  Tc = "TC",
  Tv = "TV",
  Ug = "UG",
  Ua = "UA",
  Ae = "AE",
  Gb = "GB",
  Us = "US",
  Um = "UM",
  Uy = "UY",
  Uz = "UZ",
  Vu = "VU",
  Ve = "VE",
  Vn = "VN",
  Vg = "VG",
  Vi = "VI",
  Wf = "WF",
  Eh = "EH",
  Ye = "YE",
  Zm = "ZM",
  Zw = "ZW",
  UnmappedValue = "unmapped_value",
}
/**
 * The ISO3166-1 Alpha2 Code of the Country
 */
export type UpdateEmployeeApiModelSchemasWorkLocationValueOpen = OpenEnum<
  typeof UpdateEmployeeApiModelSchemasWorkLocationValue
>;

/**
 * The country code
 */
export type UpdateEmployeeApiModelSchemasWorkLocationCountry = {
  sourceValue?:
    | UpdateEmployeeApiModelSchemasWorkLocation4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The ISO3166-1 Alpha2 Code of the Country
   */
  value?: UpdateEmployeeApiModelSchemasWorkLocationValueOpen | null | undefined;
};

export type UpdateEmployeeApiModelSchemasWorkLocationState4 = {};

export type UpdateEmployeeApiModelSchemasWorkLocationStateSourceValue =
  | UpdateEmployeeApiModelSchemasWorkLocationState4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The ISO3166-2 sub division where the location is situated
 */
export type UpdateEmployeeApiModelSchemasState = {
  sourceValue?:
    | UpdateEmployeeApiModelSchemasWorkLocationState4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * state (ISO3166-2 Sub Division Code) - value must be a valid enum value
   */
  value?: string | null | undefined;
};

/**
 * The employee work location
 */
export type UpdateEmployeeApiModelWorkLocation = {
  /**
   * The city where the location is situated
   */
  city?: string | null | undefined;
  /**
   * The country code
   */
  country?: UpdateEmployeeApiModelSchemasWorkLocationCountry | null | undefined;
  /**
   * Unique identifier
   */
  id?: string | null | undefined;
  /**
   * The name of the location
   */
  name?: string | null | undefined;
  /**
   * Value to pass through to the provider
   */
  passthrough?: { [k: string]: any } | null | undefined;
  /**
   * The phone number of the location
   */
  phoneNumber?: string | null | undefined;
  /**
   * The ISO3166-2 sub division where the location is situated
   */
  state?: UpdateEmployeeApiModelSchemasState | null | undefined;
  /**
   * The first line of the address
   */
  street1?: string | null | undefined;
  /**
   * The second line of the address
   */
  street2?: string | null | undefined;
  /**
   * The ZIP code/Postal code of the location
   */
  zipCode?: string | null | undefined;
};

export type UpdateEmployeeApiModel = {
  /**
   * The employee avatar
   */
  avatar?: UpdateEmployeeApiModelAvatar | null | undefined;
  /**
   * The employee avatar Url
   */
  avatarUrl?: string | null | undefined;
  /**
   * Current benefits of the employee
   */
  benefits?: Array<CreateHRISBenefit> | null | undefined;
  /**
   * The employee birthday
   */
  birthday?: Date | null | undefined;
  /**
   * The citizenships of the Employee
   */
  citizenships?: Array<CountryCodeEnum> | null | undefined;
  /**
   * The employee company id
   */
  companyId?: string | null | undefined;
  /**
   * The employee company name
   *
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  companyName?: string | null | undefined;
  /**
   * The employee custom fields
   */
  customFields?: Array<CustomFields> | null | undefined;
  /**
   * The employee date_of_birth
   */
  dateOfBirth?: Date | null | undefined;
  /**
   * The employee department
   */
  department?: string | null | undefined;
  /**
   * The employee department id
   */
  departmentId?: string | null | undefined;
  /**
   * The employee display name
   */
  displayName?: string | null | undefined;
  /**
   * The assigned employee number
   */
  employeeNumber?: string | null | undefined;
  /**
   * The employee employment
   */
  employment?: UpdateEmployeeApiModelEmployment | null | undefined;
  /**
   * The employment work schedule type (e.g., full-time, part-time)
   */
  employmentContractType?:
    | UpdateEmployeeApiModelEmploymentContractType
    | null
    | undefined;
  /**
   * The employee employment status
   */
  employmentStatus?: UpdateEmployeeApiModelEmploymentStatus | null | undefined;
  /**
   * The employee employment type
   */
  employmentType?: UpdateEmployeeApiModelEmploymentType | null | undefined;
  /**
   * The employee ethnicity
   */
  ethnicity?: UpdateEmployeeApiModelEthnicity | null | undefined;
  /**
   * The employee first name
   */
  firstName?: string | null | undefined;
  /**
   * The employee gender
   */
  gender?: UpdateEmployeeApiModelGender | null | undefined;
  /**
   * The employee hire date
   */
  hireDate?: Date | null | undefined;
  /**
   * The employee home location
   */
  homeLocation?: UpdateEmployeeApiModelHomeLocation | null | undefined;
  /**
   * The employee job id
   */
  jobId?: string | null | undefined;
  /**
   * The employee job title
   */
  jobTitle?: string | null | undefined;
  /**
   * The employee last name
   */
  lastName?: string | null | undefined;
  /**
   * The employee manager ID
   */
  managerId?: string | null | undefined;
  /**
   * The employee marital status
   */
  maritalStatus?: UpdateEmployeeApiModelMaritalStatus | null | undefined;
  /**
   * The employee name
   */
  name?: string | null | undefined;
  /**
   * The national identity number
   *
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  nationalIdentityNumber?:
    | UpdateEmployeeApiModelNationalIdentityNumber
    | null
    | undefined;
  /**
   * The national identity numbers
   */
  nationalIdentityNumbers?:
    | Array<NationalIdentityNumberApiModel>
    | null
    | undefined;
  /**
   * The employee personal email
   */
  personalEmail?: string | null | undefined;
  /**
   * The employee personal phone number
   */
  personalPhoneNumber?: string | null | undefined;
  /**
   * The employee preferred language
   */
  preferredLanguage?:
    | UpdateEmployeeApiModelPreferredLanguage
    | null
    | undefined;
  /**
   * The employee start date
   */
  startDate?: Date | null | undefined;
  /**
   * The employee team id
   */
  teamId?: string | null | undefined;
  /**
   * The employee termination date
   */
  terminationDate?: Date | null | undefined;
  /**
   * The employee work email
   */
  workEmail?: string | null | undefined;
  /**
   * The employee work location
   */
  workLocation?: UpdateEmployeeApiModelWorkLocation | null | undefined;
  /**
   * The employee work phone number
   */
  workPhoneNumber?: string | null | undefined;
};

/** @internal */
export const UpdateEmployeeApiModelAvatar$inboundSchema: z.ZodType<
  UpdateEmployeeApiModelAvatar,
  z.ZodTypeDef,
  unknown
> = z.object({
  base64: z.nullable(z.string()).optional(),
  url: z.nullable(z.string()).optional(),
});

/** @internal */
export type UpdateEmployeeApiModelAvatar$Outbound = {
  base64?: string | null | undefined;
  url?: string | null | undefined;
};

/** @internal */
export const UpdateEmployeeApiModelAvatar$outboundSchema: z.ZodType<
  UpdateEmployeeApiModelAvatar$Outbound,
  z.ZodTypeDef,
  UpdateEmployeeApiModelAvatar
> = z.object({
  base64: z.nullable(z.string()).optional(),
  url: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelAvatar$ {
  /** @deprecated use `UpdateEmployeeApiModelAvatar$inboundSchema` instead. */
  export const inboundSchema = UpdateEmployeeApiModelAvatar$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelAvatar$outboundSchema` instead. */
  export const outboundSchema = UpdateEmployeeApiModelAvatar$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelAvatar$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModelAvatar$Outbound;
}

export function updateEmployeeApiModelAvatarToJSON(
  updateEmployeeApiModelAvatar: UpdateEmployeeApiModelAvatar,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelAvatar$outboundSchema.parse(
      updateEmployeeApiModelAvatar,
    ),
  );
}

export function updateEmployeeApiModelAvatarFromJSON(
  jsonString: string,
): SafeParseResult<UpdateEmployeeApiModelAvatar, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateEmployeeApiModelAvatar$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModelAvatar' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentEmploymentContractType4$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentEmploymentContractType4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type UpdateEmployeeApiModelSchemasEmploymentEmploymentContractType4$Outbound =
  {};

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentEmploymentContractType4$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentEmploymentContractType4$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasEmploymentEmploymentContractType4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasEmploymentEmploymentContractType4$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentEmploymentContractType4$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentEmploymentContractType4$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentEmploymentContractType4$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentEmploymentContractType4$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentEmploymentContractType4$Outbound` instead. */
  export type Outbound =
    UpdateEmployeeApiModelSchemasEmploymentEmploymentContractType4$Outbound;
}

export function updateEmployeeApiModelSchemasEmploymentEmploymentContractType4ToJSON(
  updateEmployeeApiModelSchemasEmploymentEmploymentContractType4:
    UpdateEmployeeApiModelSchemasEmploymentEmploymentContractType4,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasEmploymentEmploymentContractType4$outboundSchema
      .parse(updateEmployeeApiModelSchemasEmploymentEmploymentContractType4),
  );
}

export function updateEmployeeApiModelSchemasEmploymentEmploymentContractType4FromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasEmploymentEmploymentContractType4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasEmploymentEmploymentContractType4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModelSchemasEmploymentEmploymentContractType4' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeSourceValue$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      UpdateEmployeeApiModelSchemasEmploymentEmploymentContractType4$inboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeSourceValue$Outbound =
  | UpdateEmployeeApiModelSchemasEmploymentEmploymentContractType4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeSourceValue$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeSourceValue$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeSourceValue
  > = z.union([
    z.lazy(() =>
      UpdateEmployeeApiModelSchemasEmploymentEmploymentContractType4$outboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeSourceValue$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeSourceValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeSourceValue$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeSourceValue$Outbound` instead. */
  export type Outbound =
    UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeSourceValue$Outbound;
}

export function updateEmployeeApiModelSchemasEmploymentEmploymentContractTypeSourceValueToJSON(
  updateEmployeeApiModelSchemasEmploymentEmploymentContractTypeSourceValue:
    UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeSourceValue,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeSourceValue$outboundSchema
      .parse(
        updateEmployeeApiModelSchemasEmploymentEmploymentContractTypeSourceValue,
      ),
  );
}

export function updateEmployeeApiModelSchemasEmploymentEmploymentContractTypeSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeSourceValue' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeValue$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(
        UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeValue,
      ),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeValue$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeValueOpen,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeValueOpen
  > = z.union([
    z.nativeEnum(
      UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeValue,
    ),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeValue$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeValue$outboundSchema;
}

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentContractType$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentContractType,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source_value: z.nullable(
      z.union([
        z.lazy(() =>
          UpdateEmployeeApiModelSchemasEmploymentEmploymentContractType4$inboundSchema
        ),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeValue$inboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "source_value": "sourceValue",
    });
  });

/** @internal */
export type UpdateEmployeeApiModelSchemasEmploymentContractType$Outbound = {
  source_value?:
    | UpdateEmployeeApiModelSchemasEmploymentEmploymentContractType4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentContractType$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentContractType$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasEmploymentContractType
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.lazy(() =>
          UpdateEmployeeApiModelSchemasEmploymentEmploymentContractType4$outboundSchema
        ),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      UpdateEmployeeApiModelSchemasEmploymentEmploymentContractTypeValue$outboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasEmploymentContractType$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentContractType$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentContractType$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentContractType$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentContractType$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentContractType$Outbound` instead. */
  export type Outbound =
    UpdateEmployeeApiModelSchemasEmploymentContractType$Outbound;
}

export function updateEmployeeApiModelSchemasEmploymentContractTypeToJSON(
  updateEmployeeApiModelSchemasEmploymentContractType:
    UpdateEmployeeApiModelSchemasEmploymentContractType,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasEmploymentContractType$outboundSchema.parse(
      updateEmployeeApiModelSchemasEmploymentContractType,
    ),
  );
}

export function updateEmployeeApiModelSchemasEmploymentContractTypeFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasEmploymentContractType,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasEmploymentContractType$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateEmployeeApiModelSchemasEmploymentContractType' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentEmploymentType4$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentEmploymentType4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type UpdateEmployeeApiModelSchemasEmploymentEmploymentType4$Outbound =
  {};

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentEmploymentType4$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentEmploymentType4$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasEmploymentEmploymentType4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasEmploymentEmploymentType4$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentEmploymentType4$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentEmploymentType4$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentEmploymentType4$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentEmploymentType4$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentEmploymentType4$Outbound` instead. */
  export type Outbound =
    UpdateEmployeeApiModelSchemasEmploymentEmploymentType4$Outbound;
}

export function updateEmployeeApiModelSchemasEmploymentEmploymentType4ToJSON(
  updateEmployeeApiModelSchemasEmploymentEmploymentType4:
    UpdateEmployeeApiModelSchemasEmploymentEmploymentType4,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasEmploymentEmploymentType4$outboundSchema.parse(
      updateEmployeeApiModelSchemasEmploymentEmploymentType4,
    ),
  );
}

export function updateEmployeeApiModelSchemasEmploymentEmploymentType4FromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasEmploymentEmploymentType4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasEmploymentEmploymentType4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModelSchemasEmploymentEmploymentType4' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeSourceValue$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      UpdateEmployeeApiModelSchemasEmploymentEmploymentType4$inboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeSourceValue$Outbound =
  | UpdateEmployeeApiModelSchemasEmploymentEmploymentType4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeSourceValue$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeSourceValue$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeSourceValue
  > = z.union([
    z.lazy(() =>
      UpdateEmployeeApiModelSchemasEmploymentEmploymentType4$outboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeSourceValue$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeSourceValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeSourceValue$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeSourceValue$Outbound` instead. */
  export type Outbound =
    UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeSourceValue$Outbound;
}

export function updateEmployeeApiModelSchemasEmploymentEmploymentTypeSourceValueToJSON(
  updateEmployeeApiModelSchemasEmploymentEmploymentTypeSourceValue:
    UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeSourceValue,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeSourceValue$outboundSchema
      .parse(updateEmployeeApiModelSchemasEmploymentEmploymentTypeSourceValue),
  );
}

export function updateEmployeeApiModelSchemasEmploymentEmploymentTypeSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeSourceValue' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeValue$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeValue$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeValueOpen,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeValueOpen
  > = z.union([
    z.nativeEnum(UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeValue$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeValue$outboundSchema;
}

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentType$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentType,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source_value: z.nullable(
      z.union([
        z.lazy(() =>
          UpdateEmployeeApiModelSchemasEmploymentEmploymentType4$inboundSchema
        ),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeValue$inboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "source_value": "sourceValue",
    });
  });

/** @internal */
export type UpdateEmployeeApiModelSchemasEmploymentType$Outbound = {
  source_value?:
    | UpdateEmployeeApiModelSchemasEmploymentEmploymentType4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentType$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentType$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasEmploymentType
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.lazy(() =>
          UpdateEmployeeApiModelSchemasEmploymentEmploymentType4$outboundSchema
        ),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      UpdateEmployeeApiModelSchemasEmploymentEmploymentTypeValue$outboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasEmploymentType$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentType$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentType$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentType$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentType$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentType$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModelSchemasEmploymentType$Outbound;
}

export function updateEmployeeApiModelSchemasEmploymentTypeToJSON(
  updateEmployeeApiModelSchemasEmploymentType:
    UpdateEmployeeApiModelSchemasEmploymentType,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasEmploymentType$outboundSchema.parse(
      updateEmployeeApiModelSchemasEmploymentType,
    ),
  );
}

export function updateEmployeeApiModelSchemasEmploymentTypeFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasEmploymentType,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasEmploymentType$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateEmployeeApiModelSchemasEmploymentType' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasEmployment4$inboundSchema: z.ZodType<
  UpdateEmployeeApiModelSchemasEmployment4,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type UpdateEmployeeApiModelSchemasEmployment4$Outbound = {};

/** @internal */
export const UpdateEmployeeApiModelSchemasEmployment4$outboundSchema: z.ZodType<
  UpdateEmployeeApiModelSchemasEmployment4$Outbound,
  z.ZodTypeDef,
  UpdateEmployeeApiModelSchemasEmployment4
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasEmployment4$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmployment4$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasEmployment4$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmployment4$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasEmployment4$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmployment4$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModelSchemasEmployment4$Outbound;
}

export function updateEmployeeApiModelSchemasEmployment4ToJSON(
  updateEmployeeApiModelSchemasEmployment4:
    UpdateEmployeeApiModelSchemasEmployment4,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasEmployment4$outboundSchema.parse(
      updateEmployeeApiModelSchemasEmployment4,
    ),
  );
}

export function updateEmployeeApiModelSchemasEmployment4FromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasEmployment4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasEmployment4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateEmployeeApiModelSchemasEmployment4' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentSourceValue$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => UpdateEmployeeApiModelSchemasEmployment4$inboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type UpdateEmployeeApiModelSchemasEmploymentSourceValue$Outbound =
  | UpdateEmployeeApiModelSchemasEmployment4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentSourceValue$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentSourceValue$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasEmploymentSourceValue
  > = z.union([
    z.lazy(() => UpdateEmployeeApiModelSchemasEmployment4$outboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasEmploymentSourceValue$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentSourceValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentSourceValue$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentSourceValue$Outbound` instead. */
  export type Outbound =
    UpdateEmployeeApiModelSchemasEmploymentSourceValue$Outbound;
}

export function updateEmployeeApiModelSchemasEmploymentSourceValueToJSON(
  updateEmployeeApiModelSchemasEmploymentSourceValue:
    UpdateEmployeeApiModelSchemasEmploymentSourceValue,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasEmploymentSourceValue$outboundSchema.parse(
      updateEmployeeApiModelSchemasEmploymentSourceValue,
    ),
  );
}

export function updateEmployeeApiModelSchemasEmploymentSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasEmploymentSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasEmploymentSourceValue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateEmployeeApiModelSchemasEmploymentSourceValue' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentValue$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(UpdateEmployeeApiModelSchemasEmploymentValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentValue$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentValueOpen,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasEmploymentValueOpen
  > = z.union([
    z.nativeEnum(UpdateEmployeeApiModelSchemasEmploymentValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasEmploymentValue$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentValue$outboundSchema;
}

/** @internal */
export const UpdateEmployeeApiModelPayFrequency$inboundSchema: z.ZodType<
  UpdateEmployeeApiModelPayFrequency,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() => UpdateEmployeeApiModelSchemasEmployment4$inboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(UpdateEmployeeApiModelSchemasEmploymentValue$inboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type UpdateEmployeeApiModelPayFrequency$Outbound = {
  source_value?:
    | UpdateEmployeeApiModelSchemasEmployment4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const UpdateEmployeeApiModelPayFrequency$outboundSchema: z.ZodType<
  UpdateEmployeeApiModelPayFrequency$Outbound,
  z.ZodTypeDef,
  UpdateEmployeeApiModelPayFrequency
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() => UpdateEmployeeApiModelSchemasEmployment4$outboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(UpdateEmployeeApiModelSchemasEmploymentValue$outboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelPayFrequency$ {
  /** @deprecated use `UpdateEmployeeApiModelPayFrequency$inboundSchema` instead. */
  export const inboundSchema = UpdateEmployeeApiModelPayFrequency$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelPayFrequency$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelPayFrequency$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelPayFrequency$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModelPayFrequency$Outbound;
}

export function updateEmployeeApiModelPayFrequencyToJSON(
  updateEmployeeApiModelPayFrequency: UpdateEmployeeApiModelPayFrequency,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelPayFrequency$outboundSchema.parse(
      updateEmployeeApiModelPayFrequency,
    ),
  );
}

export function updateEmployeeApiModelPayFrequencyFromJSON(
  jsonString: string,
): SafeParseResult<UpdateEmployeeApiModelPayFrequency, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelPayFrequency$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModelPayFrequency' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentPayPeriod4$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentPayPeriod4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type UpdateEmployeeApiModelSchemasEmploymentPayPeriod4$Outbound = {};

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentPayPeriod4$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentPayPeriod4$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasEmploymentPayPeriod4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasEmploymentPayPeriod4$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentPayPeriod4$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentPayPeriod4$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentPayPeriod4$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentPayPeriod4$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentPayPeriod4$Outbound` instead. */
  export type Outbound =
    UpdateEmployeeApiModelSchemasEmploymentPayPeriod4$Outbound;
}

export function updateEmployeeApiModelSchemasEmploymentPayPeriod4ToJSON(
  updateEmployeeApiModelSchemasEmploymentPayPeriod4:
    UpdateEmployeeApiModelSchemasEmploymentPayPeriod4,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasEmploymentPayPeriod4$outboundSchema.parse(
      updateEmployeeApiModelSchemasEmploymentPayPeriod4,
    ),
  );
}

export function updateEmployeeApiModelSchemasEmploymentPayPeriod4FromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasEmploymentPayPeriod4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasEmploymentPayPeriod4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateEmployeeApiModelSchemasEmploymentPayPeriod4' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentPayPeriodSourceValue$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentPayPeriodSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      UpdateEmployeeApiModelSchemasEmploymentPayPeriod4$inboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type UpdateEmployeeApiModelSchemasEmploymentPayPeriodSourceValue$Outbound =
  | UpdateEmployeeApiModelSchemasEmploymentPayPeriod4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentPayPeriodSourceValue$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentPayPeriodSourceValue$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasEmploymentPayPeriodSourceValue
  > = z.union([
    z.lazy(() =>
      UpdateEmployeeApiModelSchemasEmploymentPayPeriod4$outboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasEmploymentPayPeriodSourceValue$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentPayPeriodSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentPayPeriodSourceValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentPayPeriodSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentPayPeriodSourceValue$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentPayPeriodSourceValue$Outbound` instead. */
  export type Outbound =
    UpdateEmployeeApiModelSchemasEmploymentPayPeriodSourceValue$Outbound;
}

export function updateEmployeeApiModelSchemasEmploymentPayPeriodSourceValueToJSON(
  updateEmployeeApiModelSchemasEmploymentPayPeriodSourceValue:
    UpdateEmployeeApiModelSchemasEmploymentPayPeriodSourceValue,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasEmploymentPayPeriodSourceValue$outboundSchema
      .parse(updateEmployeeApiModelSchemasEmploymentPayPeriodSourceValue),
  );
}

export function updateEmployeeApiModelSchemasEmploymentPayPeriodSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasEmploymentPayPeriodSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasEmploymentPayPeriodSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModelSchemasEmploymentPayPeriodSourceValue' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentPayPeriodValue$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentPayPeriodValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(UpdateEmployeeApiModelSchemasEmploymentPayPeriodValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentPayPeriodValue$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentPayPeriodValueOpen,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasEmploymentPayPeriodValueOpen
  > = z.union([
    z.nativeEnum(UpdateEmployeeApiModelSchemasEmploymentPayPeriodValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasEmploymentPayPeriodValue$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentPayPeriodValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentPayPeriodValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentPayPeriodValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentPayPeriodValue$outboundSchema;
}

/** @internal */
export const UpdateEmployeeApiModelPayPeriod$inboundSchema: z.ZodType<
  UpdateEmployeeApiModelPayPeriod,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() =>
        UpdateEmployeeApiModelSchemasEmploymentPayPeriod4$inboundSchema
      ),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    UpdateEmployeeApiModelSchemasEmploymentPayPeriodValue$inboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type UpdateEmployeeApiModelPayPeriod$Outbound = {
  source_value?:
    | UpdateEmployeeApiModelSchemasEmploymentPayPeriod4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const UpdateEmployeeApiModelPayPeriod$outboundSchema: z.ZodType<
  UpdateEmployeeApiModelPayPeriod$Outbound,
  z.ZodTypeDef,
  UpdateEmployeeApiModelPayPeriod
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() =>
        UpdateEmployeeApiModelSchemasEmploymentPayPeriod4$outboundSchema
      ),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    UpdateEmployeeApiModelSchemasEmploymentPayPeriodValue$outboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelPayPeriod$ {
  /** @deprecated use `UpdateEmployeeApiModelPayPeriod$inboundSchema` instead. */
  export const inboundSchema = UpdateEmployeeApiModelPayPeriod$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelPayPeriod$outboundSchema` instead. */
  export const outboundSchema = UpdateEmployeeApiModelPayPeriod$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelPayPeriod$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModelPayPeriod$Outbound;
}

export function updateEmployeeApiModelPayPeriodToJSON(
  updateEmployeeApiModelPayPeriod: UpdateEmployeeApiModelPayPeriod,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelPayPeriod$outboundSchema.parse(
      updateEmployeeApiModelPayPeriod,
    ),
  );
}

export function updateEmployeeApiModelPayPeriodFromJSON(
  jsonString: string,
): SafeParseResult<UpdateEmployeeApiModelPayPeriod, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateEmployeeApiModelPayPeriod$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModelPayPeriod' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelEmployment$inboundSchema: z.ZodType<
  UpdateEmployeeApiModelEmployment,
  z.ZodTypeDef,
  unknown
> = z.object({
  effective_date: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  employment_contract_type: z.nullable(
    z.lazy(() =>
      UpdateEmployeeApiModelSchemasEmploymentContractType$inboundSchema
    ),
  ).optional(),
  employment_type: z.nullable(
    z.lazy(() => UpdateEmployeeApiModelSchemasEmploymentType$inboundSchema),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  job_title: z.nullable(z.string()).optional(),
  pay_currency: z.nullable(z.string()).optional(),
  pay_frequency: z.nullable(
    z.lazy(() => UpdateEmployeeApiModelPayFrequency$inboundSchema),
  ).optional(),
  pay_period: z.nullable(
    z.lazy(() => UpdateEmployeeApiModelPayPeriod$inboundSchema),
  ).optional(),
  pay_rate: z.nullable(z.string()).optional(),
  time_worked: z.nullable(z.string()).optional(),
  unified_custom_fields: z.nullable(z.record(z.any())).optional(),
}).transform((v) => {
  return remap$(v, {
    "effective_date": "effectiveDate",
    "employment_contract_type": "employmentContractType",
    "employment_type": "employmentType",
    "job_title": "jobTitle",
    "pay_currency": "payCurrency",
    "pay_frequency": "payFrequency",
    "pay_period": "payPeriod",
    "pay_rate": "payRate",
    "time_worked": "timeWorked",
    "unified_custom_fields": "unifiedCustomFields",
  });
});

/** @internal */
export type UpdateEmployeeApiModelEmployment$Outbound = {
  effective_date?: string | null | undefined;
  employment_contract_type?:
    | UpdateEmployeeApiModelSchemasEmploymentContractType$Outbound
    | null
    | undefined;
  employment_type?:
    | UpdateEmployeeApiModelSchemasEmploymentType$Outbound
    | null
    | undefined;
  id?: string | null | undefined;
  job_title?: string | null | undefined;
  pay_currency?: string | null | undefined;
  pay_frequency?:
    | UpdateEmployeeApiModelPayFrequency$Outbound
    | null
    | undefined;
  pay_period?: UpdateEmployeeApiModelPayPeriod$Outbound | null | undefined;
  pay_rate?: string | null | undefined;
  time_worked?: string | null | undefined;
  unified_custom_fields?: { [k: string]: any } | null | undefined;
};

/** @internal */
export const UpdateEmployeeApiModelEmployment$outboundSchema: z.ZodType<
  UpdateEmployeeApiModelEmployment$Outbound,
  z.ZodTypeDef,
  UpdateEmployeeApiModelEmployment
> = z.object({
  effectiveDate: z.nullable(z.date().transform(v => v.toISOString()))
    .optional(),
  employmentContractType: z.nullable(
    z.lazy(() =>
      UpdateEmployeeApiModelSchemasEmploymentContractType$outboundSchema
    ),
  ).optional(),
  employmentType: z.nullable(
    z.lazy(() => UpdateEmployeeApiModelSchemasEmploymentType$outboundSchema),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  jobTitle: z.nullable(z.string()).optional(),
  payCurrency: z.nullable(z.string()).optional(),
  payFrequency: z.nullable(
    z.lazy(() => UpdateEmployeeApiModelPayFrequency$outboundSchema),
  ).optional(),
  payPeriod: z.nullable(
    z.lazy(() => UpdateEmployeeApiModelPayPeriod$outboundSchema),
  ).optional(),
  payRate: z.nullable(z.string()).optional(),
  timeWorked: z.nullable(z.string()).optional(),
  unifiedCustomFields: z.nullable(z.record(z.any())).optional(),
}).transform((v) => {
  return remap$(v, {
    effectiveDate: "effective_date",
    employmentContractType: "employment_contract_type",
    employmentType: "employment_type",
    jobTitle: "job_title",
    payCurrency: "pay_currency",
    payFrequency: "pay_frequency",
    payPeriod: "pay_period",
    payRate: "pay_rate",
    timeWorked: "time_worked",
    unifiedCustomFields: "unified_custom_fields",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelEmployment$ {
  /** @deprecated use `UpdateEmployeeApiModelEmployment$inboundSchema` instead. */
  export const inboundSchema = UpdateEmployeeApiModelEmployment$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelEmployment$outboundSchema` instead. */
  export const outboundSchema = UpdateEmployeeApiModelEmployment$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelEmployment$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModelEmployment$Outbound;
}

export function updateEmployeeApiModelEmploymentToJSON(
  updateEmployeeApiModelEmployment: UpdateEmployeeApiModelEmployment,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelEmployment$outboundSchema.parse(
      updateEmployeeApiModelEmployment,
    ),
  );
}

export function updateEmployeeApiModelEmploymentFromJSON(
  jsonString: string,
): SafeParseResult<UpdateEmployeeApiModelEmployment, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateEmployeeApiModelEmployment$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModelEmployment' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModel4$inboundSchema: z.ZodType<
  UpdateEmployeeApiModel4,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type UpdateEmployeeApiModel4$Outbound = {};

/** @internal */
export const UpdateEmployeeApiModel4$outboundSchema: z.ZodType<
  UpdateEmployeeApiModel4$Outbound,
  z.ZodTypeDef,
  UpdateEmployeeApiModel4
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModel4$ {
  /** @deprecated use `UpdateEmployeeApiModel4$inboundSchema` instead. */
  export const inboundSchema = UpdateEmployeeApiModel4$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModel4$outboundSchema` instead. */
  export const outboundSchema = UpdateEmployeeApiModel4$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModel4$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModel4$Outbound;
}

export function updateEmployeeApiModel4ToJSON(
  updateEmployeeApiModel4: UpdateEmployeeApiModel4,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModel4$outboundSchema.parse(updateEmployeeApiModel4),
  );
}

export function updateEmployeeApiModel4FromJSON(
  jsonString: string,
): SafeParseResult<UpdateEmployeeApiModel4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateEmployeeApiModel4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModel4' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSourceValue$inboundSchema: z.ZodType<
  UpdateEmployeeApiModelSourceValue,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => UpdateEmployeeApiModel4$inboundSchema),
  z.string(),
  z.number(),
  z.boolean(),
  z.array(z.any()),
]);

/** @internal */
export type UpdateEmployeeApiModelSourceValue$Outbound =
  | UpdateEmployeeApiModel4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const UpdateEmployeeApiModelSourceValue$outboundSchema: z.ZodType<
  UpdateEmployeeApiModelSourceValue$Outbound,
  z.ZodTypeDef,
  UpdateEmployeeApiModelSourceValue
> = z.union([
  z.lazy(() => UpdateEmployeeApiModel4$outboundSchema),
  z.string(),
  z.number(),
  z.boolean(),
  z.array(z.any()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSourceValue$ {
  /** @deprecated use `UpdateEmployeeApiModelSourceValue$inboundSchema` instead. */
  export const inboundSchema = UpdateEmployeeApiModelSourceValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSourceValue$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSourceValue$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModelSourceValue$Outbound;
}

export function updateEmployeeApiModelSourceValueToJSON(
  updateEmployeeApiModelSourceValue: UpdateEmployeeApiModelSourceValue,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSourceValue$outboundSchema.parse(
      updateEmployeeApiModelSourceValue,
    ),
  );
}

export function updateEmployeeApiModelSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<UpdateEmployeeApiModelSourceValue, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateEmployeeApiModelSourceValue$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModelSourceValue' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelValue$inboundSchema: z.ZodType<
  UpdateEmployeeApiModelValueOpen,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(UpdateEmployeeApiModelValue),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const UpdateEmployeeApiModelValue$outboundSchema: z.ZodType<
  UpdateEmployeeApiModelValueOpen,
  z.ZodTypeDef,
  UpdateEmployeeApiModelValueOpen
> = z.union([
  z.nativeEnum(UpdateEmployeeApiModelValue),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelValue$ {
  /** @deprecated use `UpdateEmployeeApiModelValue$inboundSchema` instead. */
  export const inboundSchema = UpdateEmployeeApiModelValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelValue$outboundSchema` instead. */
  export const outboundSchema = UpdateEmployeeApiModelValue$outboundSchema;
}

/** @internal */
export const UpdateEmployeeApiModelEmploymentContractType$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelEmploymentContractType,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source_value: z.nullable(
      z.union([
        z.lazy(() => UpdateEmployeeApiModel4$inboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(UpdateEmployeeApiModelValue$inboundSchema).optional(),
  }).transform((v) => {
    return remap$(v, {
      "source_value": "sourceValue",
    });
  });

/** @internal */
export type UpdateEmployeeApiModelEmploymentContractType$Outbound = {
  source_value?:
    | UpdateEmployeeApiModel4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const UpdateEmployeeApiModelEmploymentContractType$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelEmploymentContractType$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelEmploymentContractType
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.lazy(() => UpdateEmployeeApiModel4$outboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(UpdateEmployeeApiModelValue$outboundSchema).optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelEmploymentContractType$ {
  /** @deprecated use `UpdateEmployeeApiModelEmploymentContractType$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelEmploymentContractType$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelEmploymentContractType$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelEmploymentContractType$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelEmploymentContractType$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModelEmploymentContractType$Outbound;
}

export function updateEmployeeApiModelEmploymentContractTypeToJSON(
  updateEmployeeApiModelEmploymentContractType:
    UpdateEmployeeApiModelEmploymentContractType,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelEmploymentContractType$outboundSchema.parse(
      updateEmployeeApiModelEmploymentContractType,
    ),
  );
}

export function updateEmployeeApiModelEmploymentContractTypeFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelEmploymentContractType,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelEmploymentContractType$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateEmployeeApiModelEmploymentContractType' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemas4$inboundSchema: z.ZodType<
  UpdateEmployeeApiModelSchemas4,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type UpdateEmployeeApiModelSchemas4$Outbound = {};

/** @internal */
export const UpdateEmployeeApiModelSchemas4$outboundSchema: z.ZodType<
  UpdateEmployeeApiModelSchemas4$Outbound,
  z.ZodTypeDef,
  UpdateEmployeeApiModelSchemas4
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemas4$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemas4$inboundSchema` instead. */
  export const inboundSchema = UpdateEmployeeApiModelSchemas4$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemas4$outboundSchema` instead. */
  export const outboundSchema = UpdateEmployeeApiModelSchemas4$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemas4$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModelSchemas4$Outbound;
}

export function updateEmployeeApiModelSchemas4ToJSON(
  updateEmployeeApiModelSchemas4: UpdateEmployeeApiModelSchemas4,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemas4$outboundSchema.parse(
      updateEmployeeApiModelSchemas4,
    ),
  );
}

export function updateEmployeeApiModelSchemas4FromJSON(
  jsonString: string,
): SafeParseResult<UpdateEmployeeApiModelSchemas4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateEmployeeApiModelSchemas4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModelSchemas4' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasSourceValue$inboundSchema: z.ZodType<
  UpdateEmployeeApiModelSchemasSourceValue,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => UpdateEmployeeApiModelSchemas4$inboundSchema),
  z.string(),
  z.number(),
  z.boolean(),
  z.array(z.any()),
]);

/** @internal */
export type UpdateEmployeeApiModelSchemasSourceValue$Outbound =
  | UpdateEmployeeApiModelSchemas4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const UpdateEmployeeApiModelSchemasSourceValue$outboundSchema: z.ZodType<
  UpdateEmployeeApiModelSchemasSourceValue$Outbound,
  z.ZodTypeDef,
  UpdateEmployeeApiModelSchemasSourceValue
> = z.union([
  z.lazy(() => UpdateEmployeeApiModelSchemas4$outboundSchema),
  z.string(),
  z.number(),
  z.boolean(),
  z.array(z.any()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasSourceValue$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasSourceValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasSourceValue$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasSourceValue$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModelSchemasSourceValue$Outbound;
}

export function updateEmployeeApiModelSchemasSourceValueToJSON(
  updateEmployeeApiModelSchemasSourceValue:
    UpdateEmployeeApiModelSchemasSourceValue,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasSourceValue$outboundSchema.parse(
      updateEmployeeApiModelSchemasSourceValue,
    ),
  );
}

export function updateEmployeeApiModelSchemasSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasSourceValue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateEmployeeApiModelSchemasSourceValue' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasValue$inboundSchema: z.ZodType<
  UpdateEmployeeApiModelSchemasValueOpen,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(UpdateEmployeeApiModelSchemasValue),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const UpdateEmployeeApiModelSchemasValue$outboundSchema: z.ZodType<
  UpdateEmployeeApiModelSchemasValueOpen,
  z.ZodTypeDef,
  UpdateEmployeeApiModelSchemasValueOpen
> = z.union([
  z.nativeEnum(UpdateEmployeeApiModelSchemasValue),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasValue$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasValue$inboundSchema` instead. */
  export const inboundSchema = UpdateEmployeeApiModelSchemasValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasValue$outboundSchema;
}

/** @internal */
export const UpdateEmployeeApiModelEmploymentStatus$inboundSchema: z.ZodType<
  UpdateEmployeeApiModelEmploymentStatus,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() => UpdateEmployeeApiModelSchemas4$inboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(UpdateEmployeeApiModelSchemasValue$inboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type UpdateEmployeeApiModelEmploymentStatus$Outbound = {
  source_value?:
    | UpdateEmployeeApiModelSchemas4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const UpdateEmployeeApiModelEmploymentStatus$outboundSchema: z.ZodType<
  UpdateEmployeeApiModelEmploymentStatus$Outbound,
  z.ZodTypeDef,
  UpdateEmployeeApiModelEmploymentStatus
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() => UpdateEmployeeApiModelSchemas4$outboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(UpdateEmployeeApiModelSchemasValue$outboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelEmploymentStatus$ {
  /** @deprecated use `UpdateEmployeeApiModelEmploymentStatus$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelEmploymentStatus$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelEmploymentStatus$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelEmploymentStatus$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelEmploymentStatus$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModelEmploymentStatus$Outbound;
}

export function updateEmployeeApiModelEmploymentStatusToJSON(
  updateEmployeeApiModelEmploymentStatus:
    UpdateEmployeeApiModelEmploymentStatus,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelEmploymentStatus$outboundSchema.parse(
      updateEmployeeApiModelEmploymentStatus,
    ),
  );
}

export function updateEmployeeApiModelEmploymentStatusFromJSON(
  jsonString: string,
): SafeParseResult<UpdateEmployeeApiModelEmploymentStatus, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelEmploymentStatus$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModelEmploymentStatus' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentType4$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentType4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type UpdateEmployeeApiModelSchemasEmploymentType4$Outbound = {};

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentType4$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentType4$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasEmploymentType4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasEmploymentType4$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentType4$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentType4$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentType4$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentType4$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentType4$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModelSchemasEmploymentType4$Outbound;
}

export function updateEmployeeApiModelSchemasEmploymentType4ToJSON(
  updateEmployeeApiModelSchemasEmploymentType4:
    UpdateEmployeeApiModelSchemasEmploymentType4,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasEmploymentType4$outboundSchema.parse(
      updateEmployeeApiModelSchemasEmploymentType4,
    ),
  );
}

export function updateEmployeeApiModelSchemasEmploymentType4FromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasEmploymentType4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasEmploymentType4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateEmployeeApiModelSchemasEmploymentType4' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentTypeSourceValue$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentTypeSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => UpdateEmployeeApiModelSchemasEmploymentType4$inboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type UpdateEmployeeApiModelSchemasEmploymentTypeSourceValue$Outbound =
  | UpdateEmployeeApiModelSchemasEmploymentType4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentTypeSourceValue$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentTypeSourceValue$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasEmploymentTypeSourceValue
  > = z.union([
    z.lazy(() => UpdateEmployeeApiModelSchemasEmploymentType4$outboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasEmploymentTypeSourceValue$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentTypeSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentTypeSourceValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentTypeSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentTypeSourceValue$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentTypeSourceValue$Outbound` instead. */
  export type Outbound =
    UpdateEmployeeApiModelSchemasEmploymentTypeSourceValue$Outbound;
}

export function updateEmployeeApiModelSchemasEmploymentTypeSourceValueToJSON(
  updateEmployeeApiModelSchemasEmploymentTypeSourceValue:
    UpdateEmployeeApiModelSchemasEmploymentTypeSourceValue,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasEmploymentTypeSourceValue$outboundSchema.parse(
      updateEmployeeApiModelSchemasEmploymentTypeSourceValue,
    ),
  );
}

export function updateEmployeeApiModelSchemasEmploymentTypeSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasEmploymentTypeSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasEmploymentTypeSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModelSchemasEmploymentTypeSourceValue' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentTypeValue$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentTypeValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(UpdateEmployeeApiModelSchemasEmploymentTypeValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const UpdateEmployeeApiModelSchemasEmploymentTypeValue$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEmploymentTypeValueOpen,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasEmploymentTypeValueOpen
  > = z.union([
    z.nativeEnum(UpdateEmployeeApiModelSchemasEmploymentTypeValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasEmploymentTypeValue$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentTypeValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentTypeValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEmploymentTypeValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasEmploymentTypeValue$outboundSchema;
}

/** @internal */
export const UpdateEmployeeApiModelEmploymentType$inboundSchema: z.ZodType<
  UpdateEmployeeApiModelEmploymentType,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() => UpdateEmployeeApiModelSchemasEmploymentType4$inboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    UpdateEmployeeApiModelSchemasEmploymentTypeValue$inboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type UpdateEmployeeApiModelEmploymentType$Outbound = {
  source_value?:
    | UpdateEmployeeApiModelSchemasEmploymentType4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const UpdateEmployeeApiModelEmploymentType$outboundSchema: z.ZodType<
  UpdateEmployeeApiModelEmploymentType$Outbound,
  z.ZodTypeDef,
  UpdateEmployeeApiModelEmploymentType
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() => UpdateEmployeeApiModelSchemasEmploymentType4$outboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    UpdateEmployeeApiModelSchemasEmploymentTypeValue$outboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelEmploymentType$ {
  /** @deprecated use `UpdateEmployeeApiModelEmploymentType$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelEmploymentType$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelEmploymentType$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelEmploymentType$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelEmploymentType$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModelEmploymentType$Outbound;
}

export function updateEmployeeApiModelEmploymentTypeToJSON(
  updateEmployeeApiModelEmploymentType: UpdateEmployeeApiModelEmploymentType,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelEmploymentType$outboundSchema.parse(
      updateEmployeeApiModelEmploymentType,
    ),
  );
}

export function updateEmployeeApiModelEmploymentTypeFromJSON(
  jsonString: string,
): SafeParseResult<UpdateEmployeeApiModelEmploymentType, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelEmploymentType$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModelEmploymentType' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasEthnicity4$inboundSchema: z.ZodType<
  UpdateEmployeeApiModelSchemasEthnicity4,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type UpdateEmployeeApiModelSchemasEthnicity4$Outbound = {};

/** @internal */
export const UpdateEmployeeApiModelSchemasEthnicity4$outboundSchema: z.ZodType<
  UpdateEmployeeApiModelSchemasEthnicity4$Outbound,
  z.ZodTypeDef,
  UpdateEmployeeApiModelSchemasEthnicity4
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasEthnicity4$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasEthnicity4$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasEthnicity4$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEthnicity4$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasEthnicity4$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEthnicity4$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModelSchemasEthnicity4$Outbound;
}

export function updateEmployeeApiModelSchemasEthnicity4ToJSON(
  updateEmployeeApiModelSchemasEthnicity4:
    UpdateEmployeeApiModelSchemasEthnicity4,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasEthnicity4$outboundSchema.parse(
      updateEmployeeApiModelSchemasEthnicity4,
    ),
  );
}

export function updateEmployeeApiModelSchemasEthnicity4FromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasEthnicity4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasEthnicity4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateEmployeeApiModelSchemasEthnicity4' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasEthnicitySourceValue$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEthnicitySourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => UpdateEmployeeApiModelSchemasEthnicity4$inboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type UpdateEmployeeApiModelSchemasEthnicitySourceValue$Outbound =
  | UpdateEmployeeApiModelSchemasEthnicity4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const UpdateEmployeeApiModelSchemasEthnicitySourceValue$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEthnicitySourceValue$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasEthnicitySourceValue
  > = z.union([
    z.lazy(() => UpdateEmployeeApiModelSchemasEthnicity4$outboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasEthnicitySourceValue$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasEthnicitySourceValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasEthnicitySourceValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEthnicitySourceValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasEthnicitySourceValue$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEthnicitySourceValue$Outbound` instead. */
  export type Outbound =
    UpdateEmployeeApiModelSchemasEthnicitySourceValue$Outbound;
}

export function updateEmployeeApiModelSchemasEthnicitySourceValueToJSON(
  updateEmployeeApiModelSchemasEthnicitySourceValue:
    UpdateEmployeeApiModelSchemasEthnicitySourceValue,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasEthnicitySourceValue$outboundSchema.parse(
      updateEmployeeApiModelSchemasEthnicitySourceValue,
    ),
  );
}

export function updateEmployeeApiModelSchemasEthnicitySourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasEthnicitySourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasEthnicitySourceValue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateEmployeeApiModelSchemasEthnicitySourceValue' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasEthnicityValue$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEthnicityValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(UpdateEmployeeApiModelSchemasEthnicityValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const UpdateEmployeeApiModelSchemasEthnicityValue$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasEthnicityValueOpen,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasEthnicityValueOpen
  > = z.union([
    z.nativeEnum(UpdateEmployeeApiModelSchemasEthnicityValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasEthnicityValue$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasEthnicityValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasEthnicityValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasEthnicityValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasEthnicityValue$outboundSchema;
}

/** @internal */
export const UpdateEmployeeApiModelEthnicity$inboundSchema: z.ZodType<
  UpdateEmployeeApiModelEthnicity,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() => UpdateEmployeeApiModelSchemasEthnicity4$inboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(UpdateEmployeeApiModelSchemasEthnicityValue$inboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type UpdateEmployeeApiModelEthnicity$Outbound = {
  source_value?:
    | UpdateEmployeeApiModelSchemasEthnicity4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const UpdateEmployeeApiModelEthnicity$outboundSchema: z.ZodType<
  UpdateEmployeeApiModelEthnicity$Outbound,
  z.ZodTypeDef,
  UpdateEmployeeApiModelEthnicity
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() => UpdateEmployeeApiModelSchemasEthnicity4$outboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(UpdateEmployeeApiModelSchemasEthnicityValue$outboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelEthnicity$ {
  /** @deprecated use `UpdateEmployeeApiModelEthnicity$inboundSchema` instead. */
  export const inboundSchema = UpdateEmployeeApiModelEthnicity$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelEthnicity$outboundSchema` instead. */
  export const outboundSchema = UpdateEmployeeApiModelEthnicity$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelEthnicity$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModelEthnicity$Outbound;
}

export function updateEmployeeApiModelEthnicityToJSON(
  updateEmployeeApiModelEthnicity: UpdateEmployeeApiModelEthnicity,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelEthnicity$outboundSchema.parse(
      updateEmployeeApiModelEthnicity,
    ),
  );
}

export function updateEmployeeApiModelEthnicityFromJSON(
  jsonString: string,
): SafeParseResult<UpdateEmployeeApiModelEthnicity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateEmployeeApiModelEthnicity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModelEthnicity' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasGender4$inboundSchema: z.ZodType<
  UpdateEmployeeApiModelSchemasGender4,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type UpdateEmployeeApiModelSchemasGender4$Outbound = {};

/** @internal */
export const UpdateEmployeeApiModelSchemasGender4$outboundSchema: z.ZodType<
  UpdateEmployeeApiModelSchemasGender4$Outbound,
  z.ZodTypeDef,
  UpdateEmployeeApiModelSchemasGender4
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasGender4$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasGender4$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasGender4$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasGender4$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasGender4$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasGender4$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModelSchemasGender4$Outbound;
}

export function updateEmployeeApiModelSchemasGender4ToJSON(
  updateEmployeeApiModelSchemasGender4: UpdateEmployeeApiModelSchemasGender4,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasGender4$outboundSchema.parse(
      updateEmployeeApiModelSchemasGender4,
    ),
  );
}

export function updateEmployeeApiModelSchemasGender4FromJSON(
  jsonString: string,
): SafeParseResult<UpdateEmployeeApiModelSchemasGender4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasGender4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModelSchemasGender4' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasGenderSourceValue$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasGenderSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => UpdateEmployeeApiModelSchemasGender4$inboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type UpdateEmployeeApiModelSchemasGenderSourceValue$Outbound =
  | UpdateEmployeeApiModelSchemasGender4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const UpdateEmployeeApiModelSchemasGenderSourceValue$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasGenderSourceValue$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasGenderSourceValue
  > = z.union([
    z.lazy(() => UpdateEmployeeApiModelSchemasGender4$outboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasGenderSourceValue$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasGenderSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasGenderSourceValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasGenderSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasGenderSourceValue$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasGenderSourceValue$Outbound` instead. */
  export type Outbound =
    UpdateEmployeeApiModelSchemasGenderSourceValue$Outbound;
}

export function updateEmployeeApiModelSchemasGenderSourceValueToJSON(
  updateEmployeeApiModelSchemasGenderSourceValue:
    UpdateEmployeeApiModelSchemasGenderSourceValue,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasGenderSourceValue$outboundSchema.parse(
      updateEmployeeApiModelSchemasGenderSourceValue,
    ),
  );
}

export function updateEmployeeApiModelSchemasGenderSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasGenderSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasGenderSourceValue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateEmployeeApiModelSchemasGenderSourceValue' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasGenderValue$inboundSchema: z.ZodType<
  UpdateEmployeeApiModelSchemasGenderValueOpen,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(UpdateEmployeeApiModelSchemasGenderValue),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const UpdateEmployeeApiModelSchemasGenderValue$outboundSchema: z.ZodType<
  UpdateEmployeeApiModelSchemasGenderValueOpen,
  z.ZodTypeDef,
  UpdateEmployeeApiModelSchemasGenderValueOpen
> = z.union([
  z.nativeEnum(UpdateEmployeeApiModelSchemasGenderValue),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasGenderValue$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasGenderValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasGenderValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasGenderValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasGenderValue$outboundSchema;
}

/** @internal */
export const UpdateEmployeeApiModelGender$inboundSchema: z.ZodType<
  UpdateEmployeeApiModelGender,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() => UpdateEmployeeApiModelSchemasGender4$inboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(UpdateEmployeeApiModelSchemasGenderValue$inboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type UpdateEmployeeApiModelGender$Outbound = {
  source_value?:
    | UpdateEmployeeApiModelSchemasGender4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const UpdateEmployeeApiModelGender$outboundSchema: z.ZodType<
  UpdateEmployeeApiModelGender$Outbound,
  z.ZodTypeDef,
  UpdateEmployeeApiModelGender
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() => UpdateEmployeeApiModelSchemasGender4$outboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(UpdateEmployeeApiModelSchemasGenderValue$outboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelGender$ {
  /** @deprecated use `UpdateEmployeeApiModelGender$inboundSchema` instead. */
  export const inboundSchema = UpdateEmployeeApiModelGender$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelGender$outboundSchema` instead. */
  export const outboundSchema = UpdateEmployeeApiModelGender$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelGender$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModelGender$Outbound;
}

export function updateEmployeeApiModelGenderToJSON(
  updateEmployeeApiModelGender: UpdateEmployeeApiModelGender,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelGender$outboundSchema.parse(
      updateEmployeeApiModelGender,
    ),
  );
}

export function updateEmployeeApiModelGenderFromJSON(
  jsonString: string,
): SafeParseResult<UpdateEmployeeApiModelGender, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateEmployeeApiModelGender$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModelGender' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasHomeLocation4$inboundSchema:
  z.ZodType<UpdateEmployeeApiModelSchemasHomeLocation4, z.ZodTypeDef, unknown> =
    z.object({});

/** @internal */
export type UpdateEmployeeApiModelSchemasHomeLocation4$Outbound = {};

/** @internal */
export const UpdateEmployeeApiModelSchemasHomeLocation4$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasHomeLocation4$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasHomeLocation4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasHomeLocation4$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasHomeLocation4$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasHomeLocation4$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasHomeLocation4$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasHomeLocation4$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasHomeLocation4$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModelSchemasHomeLocation4$Outbound;
}

export function updateEmployeeApiModelSchemasHomeLocation4ToJSON(
  updateEmployeeApiModelSchemasHomeLocation4:
    UpdateEmployeeApiModelSchemasHomeLocation4,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasHomeLocation4$outboundSchema.parse(
      updateEmployeeApiModelSchemasHomeLocation4,
    ),
  );
}

export function updateEmployeeApiModelSchemasHomeLocation4FromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasHomeLocation4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasHomeLocation4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateEmployeeApiModelSchemasHomeLocation4' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasHomeLocationSourceValue$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasHomeLocationSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => UpdateEmployeeApiModelSchemasHomeLocation4$inboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type UpdateEmployeeApiModelSchemasHomeLocationSourceValue$Outbound =
  | UpdateEmployeeApiModelSchemasHomeLocation4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const UpdateEmployeeApiModelSchemasHomeLocationSourceValue$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasHomeLocationSourceValue$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasHomeLocationSourceValue
  > = z.union([
    z.lazy(() => UpdateEmployeeApiModelSchemasHomeLocation4$outboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasHomeLocationSourceValue$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasHomeLocationSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasHomeLocationSourceValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasHomeLocationSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasHomeLocationSourceValue$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasHomeLocationSourceValue$Outbound` instead. */
  export type Outbound =
    UpdateEmployeeApiModelSchemasHomeLocationSourceValue$Outbound;
}

export function updateEmployeeApiModelSchemasHomeLocationSourceValueToJSON(
  updateEmployeeApiModelSchemasHomeLocationSourceValue:
    UpdateEmployeeApiModelSchemasHomeLocationSourceValue,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasHomeLocationSourceValue$outboundSchema.parse(
      updateEmployeeApiModelSchemasHomeLocationSourceValue,
    ),
  );
}

export function updateEmployeeApiModelSchemasHomeLocationSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasHomeLocationSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasHomeLocationSourceValue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateEmployeeApiModelSchemasHomeLocationSourceValue' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasHomeLocationValue$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasHomeLocationValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(UpdateEmployeeApiModelSchemasHomeLocationValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const UpdateEmployeeApiModelSchemasHomeLocationValue$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasHomeLocationValueOpen,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasHomeLocationValueOpen
  > = z.union([
    z.nativeEnum(UpdateEmployeeApiModelSchemasHomeLocationValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasHomeLocationValue$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasHomeLocationValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasHomeLocationValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasHomeLocationValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasHomeLocationValue$outboundSchema;
}

/** @internal */
export const UpdateEmployeeApiModelCountry$inboundSchema: z.ZodType<
  UpdateEmployeeApiModelCountry,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() => UpdateEmployeeApiModelSchemasHomeLocation4$inboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    UpdateEmployeeApiModelSchemasHomeLocationValue$inboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type UpdateEmployeeApiModelCountry$Outbound = {
  source_value?:
    | UpdateEmployeeApiModelSchemasHomeLocation4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const UpdateEmployeeApiModelCountry$outboundSchema: z.ZodType<
  UpdateEmployeeApiModelCountry$Outbound,
  z.ZodTypeDef,
  UpdateEmployeeApiModelCountry
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() => UpdateEmployeeApiModelSchemasHomeLocation4$outboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    UpdateEmployeeApiModelSchemasHomeLocationValue$outboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelCountry$ {
  /** @deprecated use `UpdateEmployeeApiModelCountry$inboundSchema` instead. */
  export const inboundSchema = UpdateEmployeeApiModelCountry$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelCountry$outboundSchema` instead. */
  export const outboundSchema = UpdateEmployeeApiModelCountry$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelCountry$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModelCountry$Outbound;
}

export function updateEmployeeApiModelCountryToJSON(
  updateEmployeeApiModelCountry: UpdateEmployeeApiModelCountry,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelCountry$outboundSchema.parse(
      updateEmployeeApiModelCountry,
    ),
  );
}

export function updateEmployeeApiModelCountryFromJSON(
  jsonString: string,
): SafeParseResult<UpdateEmployeeApiModelCountry, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateEmployeeApiModelCountry$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModelCountry' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasHomeLocationState4$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasHomeLocationState4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type UpdateEmployeeApiModelSchemasHomeLocationState4$Outbound = {};

/** @internal */
export const UpdateEmployeeApiModelSchemasHomeLocationState4$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasHomeLocationState4$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasHomeLocationState4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasHomeLocationState4$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasHomeLocationState4$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasHomeLocationState4$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasHomeLocationState4$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasHomeLocationState4$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasHomeLocationState4$Outbound` instead. */
  export type Outbound =
    UpdateEmployeeApiModelSchemasHomeLocationState4$Outbound;
}

export function updateEmployeeApiModelSchemasHomeLocationState4ToJSON(
  updateEmployeeApiModelSchemasHomeLocationState4:
    UpdateEmployeeApiModelSchemasHomeLocationState4,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasHomeLocationState4$outboundSchema.parse(
      updateEmployeeApiModelSchemasHomeLocationState4,
    ),
  );
}

export function updateEmployeeApiModelSchemasHomeLocationState4FromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasHomeLocationState4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasHomeLocationState4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateEmployeeApiModelSchemasHomeLocationState4' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasHomeLocationStateSourceValue$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasHomeLocationStateSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => UpdateEmployeeApiModelSchemasHomeLocationState4$inboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type UpdateEmployeeApiModelSchemasHomeLocationStateSourceValue$Outbound =
  | UpdateEmployeeApiModelSchemasHomeLocationState4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const UpdateEmployeeApiModelSchemasHomeLocationStateSourceValue$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasHomeLocationStateSourceValue$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasHomeLocationStateSourceValue
  > = z.union([
    z.lazy(() =>
      UpdateEmployeeApiModelSchemasHomeLocationState4$outboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasHomeLocationStateSourceValue$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasHomeLocationStateSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasHomeLocationStateSourceValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasHomeLocationStateSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasHomeLocationStateSourceValue$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasHomeLocationStateSourceValue$Outbound` instead. */
  export type Outbound =
    UpdateEmployeeApiModelSchemasHomeLocationStateSourceValue$Outbound;
}

export function updateEmployeeApiModelSchemasHomeLocationStateSourceValueToJSON(
  updateEmployeeApiModelSchemasHomeLocationStateSourceValue:
    UpdateEmployeeApiModelSchemasHomeLocationStateSourceValue,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasHomeLocationStateSourceValue$outboundSchema
      .parse(updateEmployeeApiModelSchemasHomeLocationStateSourceValue),
  );
}

export function updateEmployeeApiModelSchemasHomeLocationStateSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasHomeLocationStateSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasHomeLocationStateSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModelSchemasHomeLocationStateSourceValue' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelState$inboundSchema: z.ZodType<
  UpdateEmployeeApiModelState,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() =>
        UpdateEmployeeApiModelSchemasHomeLocationState4$inboundSchema
      ),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type UpdateEmployeeApiModelState$Outbound = {
  source_value?:
    | UpdateEmployeeApiModelSchemasHomeLocationState4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const UpdateEmployeeApiModelState$outboundSchema: z.ZodType<
  UpdateEmployeeApiModelState$Outbound,
  z.ZodTypeDef,
  UpdateEmployeeApiModelState
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() =>
        UpdateEmployeeApiModelSchemasHomeLocationState4$outboundSchema
      ),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelState$ {
  /** @deprecated use `UpdateEmployeeApiModelState$inboundSchema` instead. */
  export const inboundSchema = UpdateEmployeeApiModelState$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelState$outboundSchema` instead. */
  export const outboundSchema = UpdateEmployeeApiModelState$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelState$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModelState$Outbound;
}

export function updateEmployeeApiModelStateToJSON(
  updateEmployeeApiModelState: UpdateEmployeeApiModelState,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelState$outboundSchema.parse(
      updateEmployeeApiModelState,
    ),
  );
}

export function updateEmployeeApiModelStateFromJSON(
  jsonString: string,
): SafeParseResult<UpdateEmployeeApiModelState, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateEmployeeApiModelState$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModelState' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelHomeLocation$inboundSchema: z.ZodType<
  UpdateEmployeeApiModelHomeLocation,
  z.ZodTypeDef,
  unknown
> = z.object({
  city: z.nullable(z.string()).optional(),
  country: z.nullable(z.lazy(() => UpdateEmployeeApiModelCountry$inboundSchema))
    .optional(),
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  phone_number: z.nullable(z.string()).optional(),
  state: z.nullable(z.lazy(() => UpdateEmployeeApiModelState$inboundSchema))
    .optional(),
  street_1: z.nullable(z.string()).optional(),
  street_2: z.nullable(z.string()).optional(),
  zip_code: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "phone_number": "phoneNumber",
    "street_1": "street1",
    "street_2": "street2",
    "zip_code": "zipCode",
  });
});

/** @internal */
export type UpdateEmployeeApiModelHomeLocation$Outbound = {
  city?: string | null | undefined;
  country?: UpdateEmployeeApiModelCountry$Outbound | null | undefined;
  id?: string | null | undefined;
  name?: string | null | undefined;
  passthrough?: { [k: string]: any } | null | undefined;
  phone_number?: string | null | undefined;
  state?: UpdateEmployeeApiModelState$Outbound | null | undefined;
  street_1?: string | null | undefined;
  street_2?: string | null | undefined;
  zip_code?: string | null | undefined;
};

/** @internal */
export const UpdateEmployeeApiModelHomeLocation$outboundSchema: z.ZodType<
  UpdateEmployeeApiModelHomeLocation$Outbound,
  z.ZodTypeDef,
  UpdateEmployeeApiModelHomeLocation
> = z.object({
  city: z.nullable(z.string()).optional(),
  country: z.nullable(
    z.lazy(() => UpdateEmployeeApiModelCountry$outboundSchema),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  phoneNumber: z.nullable(z.string()).optional(),
  state: z.nullable(z.lazy(() => UpdateEmployeeApiModelState$outboundSchema))
    .optional(),
  street1: z.nullable(z.string()).optional(),
  street2: z.nullable(z.string()).optional(),
  zipCode: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    phoneNumber: "phone_number",
    street1: "street_1",
    street2: "street_2",
    zipCode: "zip_code",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelHomeLocation$ {
  /** @deprecated use `UpdateEmployeeApiModelHomeLocation$inboundSchema` instead. */
  export const inboundSchema = UpdateEmployeeApiModelHomeLocation$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelHomeLocation$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelHomeLocation$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelHomeLocation$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModelHomeLocation$Outbound;
}

export function updateEmployeeApiModelHomeLocationToJSON(
  updateEmployeeApiModelHomeLocation: UpdateEmployeeApiModelHomeLocation,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelHomeLocation$outboundSchema.parse(
      updateEmployeeApiModelHomeLocation,
    ),
  );
}

export function updateEmployeeApiModelHomeLocationFromJSON(
  jsonString: string,
): SafeParseResult<UpdateEmployeeApiModelHomeLocation, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelHomeLocation$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModelHomeLocation' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasMaritalStatus4$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasMaritalStatus4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type UpdateEmployeeApiModelSchemasMaritalStatus4$Outbound = {};

/** @internal */
export const UpdateEmployeeApiModelSchemasMaritalStatus4$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasMaritalStatus4$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasMaritalStatus4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasMaritalStatus4$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasMaritalStatus4$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasMaritalStatus4$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasMaritalStatus4$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasMaritalStatus4$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasMaritalStatus4$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModelSchemasMaritalStatus4$Outbound;
}

export function updateEmployeeApiModelSchemasMaritalStatus4ToJSON(
  updateEmployeeApiModelSchemasMaritalStatus4:
    UpdateEmployeeApiModelSchemasMaritalStatus4,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasMaritalStatus4$outboundSchema.parse(
      updateEmployeeApiModelSchemasMaritalStatus4,
    ),
  );
}

export function updateEmployeeApiModelSchemasMaritalStatus4FromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasMaritalStatus4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasMaritalStatus4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateEmployeeApiModelSchemasMaritalStatus4' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasMaritalStatusSourceValue$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasMaritalStatusSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => UpdateEmployeeApiModelSchemasMaritalStatus4$inboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type UpdateEmployeeApiModelSchemasMaritalStatusSourceValue$Outbound =
  | UpdateEmployeeApiModelSchemasMaritalStatus4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const UpdateEmployeeApiModelSchemasMaritalStatusSourceValue$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasMaritalStatusSourceValue$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasMaritalStatusSourceValue
  > = z.union([
    z.lazy(() => UpdateEmployeeApiModelSchemasMaritalStatus4$outboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasMaritalStatusSourceValue$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasMaritalStatusSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasMaritalStatusSourceValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasMaritalStatusSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasMaritalStatusSourceValue$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasMaritalStatusSourceValue$Outbound` instead. */
  export type Outbound =
    UpdateEmployeeApiModelSchemasMaritalStatusSourceValue$Outbound;
}

export function updateEmployeeApiModelSchemasMaritalStatusSourceValueToJSON(
  updateEmployeeApiModelSchemasMaritalStatusSourceValue:
    UpdateEmployeeApiModelSchemasMaritalStatusSourceValue,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasMaritalStatusSourceValue$outboundSchema.parse(
      updateEmployeeApiModelSchemasMaritalStatusSourceValue,
    ),
  );
}

export function updateEmployeeApiModelSchemasMaritalStatusSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasMaritalStatusSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasMaritalStatusSourceValue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateEmployeeApiModelSchemasMaritalStatusSourceValue' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasMaritalStatusValue$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasMaritalStatusValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(UpdateEmployeeApiModelSchemasMaritalStatusValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const UpdateEmployeeApiModelSchemasMaritalStatusValue$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasMaritalStatusValueOpen,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasMaritalStatusValueOpen
  > = z.union([
    z.nativeEnum(UpdateEmployeeApiModelSchemasMaritalStatusValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasMaritalStatusValue$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasMaritalStatusValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasMaritalStatusValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasMaritalStatusValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasMaritalStatusValue$outboundSchema;
}

/** @internal */
export const UpdateEmployeeApiModelMaritalStatus$inboundSchema: z.ZodType<
  UpdateEmployeeApiModelMaritalStatus,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() => UpdateEmployeeApiModelSchemasMaritalStatus4$inboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    UpdateEmployeeApiModelSchemasMaritalStatusValue$inboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type UpdateEmployeeApiModelMaritalStatus$Outbound = {
  source_value?:
    | UpdateEmployeeApiModelSchemasMaritalStatus4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const UpdateEmployeeApiModelMaritalStatus$outboundSchema: z.ZodType<
  UpdateEmployeeApiModelMaritalStatus$Outbound,
  z.ZodTypeDef,
  UpdateEmployeeApiModelMaritalStatus
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() => UpdateEmployeeApiModelSchemasMaritalStatus4$outboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    UpdateEmployeeApiModelSchemasMaritalStatusValue$outboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelMaritalStatus$ {
  /** @deprecated use `UpdateEmployeeApiModelMaritalStatus$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelMaritalStatus$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelMaritalStatus$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelMaritalStatus$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelMaritalStatus$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModelMaritalStatus$Outbound;
}

export function updateEmployeeApiModelMaritalStatusToJSON(
  updateEmployeeApiModelMaritalStatus: UpdateEmployeeApiModelMaritalStatus,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelMaritalStatus$outboundSchema.parse(
      updateEmployeeApiModelMaritalStatus,
    ),
  );
}

export function updateEmployeeApiModelMaritalStatusFromJSON(
  jsonString: string,
): SafeParseResult<UpdateEmployeeApiModelMaritalStatus, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelMaritalStatus$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModelMaritalStatus' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasNationalIdentityNumber4$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasNationalIdentityNumber4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type UpdateEmployeeApiModelSchemasNationalIdentityNumber4$Outbound = {};

/** @internal */
export const UpdateEmployeeApiModelSchemasNationalIdentityNumber4$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasNationalIdentityNumber4$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasNationalIdentityNumber4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasNationalIdentityNumber4$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasNationalIdentityNumber4$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasNationalIdentityNumber4$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasNationalIdentityNumber4$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasNationalIdentityNumber4$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasNationalIdentityNumber4$Outbound` instead. */
  export type Outbound =
    UpdateEmployeeApiModelSchemasNationalIdentityNumber4$Outbound;
}

export function updateEmployeeApiModelSchemasNationalIdentityNumber4ToJSON(
  updateEmployeeApiModelSchemasNationalIdentityNumber4:
    UpdateEmployeeApiModelSchemasNationalIdentityNumber4,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasNationalIdentityNumber4$outboundSchema.parse(
      updateEmployeeApiModelSchemasNationalIdentityNumber4,
    ),
  );
}

export function updateEmployeeApiModelSchemasNationalIdentityNumber4FromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasNationalIdentityNumber4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasNationalIdentityNumber4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateEmployeeApiModelSchemasNationalIdentityNumber4' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasNationalIdentityNumberSourceValue$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasNationalIdentityNumberSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      UpdateEmployeeApiModelSchemasNationalIdentityNumber4$inboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type UpdateEmployeeApiModelSchemasNationalIdentityNumberSourceValue$Outbound =
  | UpdateEmployeeApiModelSchemasNationalIdentityNumber4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const UpdateEmployeeApiModelSchemasNationalIdentityNumberSourceValue$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasNationalIdentityNumberSourceValue$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasNationalIdentityNumberSourceValue
  > = z.union([
    z.lazy(() =>
      UpdateEmployeeApiModelSchemasNationalIdentityNumber4$outboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasNationalIdentityNumberSourceValue$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasNationalIdentityNumberSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasNationalIdentityNumberSourceValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasNationalIdentityNumberSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasNationalIdentityNumberSourceValue$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasNationalIdentityNumberSourceValue$Outbound` instead. */
  export type Outbound =
    UpdateEmployeeApiModelSchemasNationalIdentityNumberSourceValue$Outbound;
}

export function updateEmployeeApiModelSchemasNationalIdentityNumberSourceValueToJSON(
  updateEmployeeApiModelSchemasNationalIdentityNumberSourceValue:
    UpdateEmployeeApiModelSchemasNationalIdentityNumberSourceValue,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasNationalIdentityNumberSourceValue$outboundSchema
      .parse(updateEmployeeApiModelSchemasNationalIdentityNumberSourceValue),
  );
}

export function updateEmployeeApiModelSchemasNationalIdentityNumberSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasNationalIdentityNumberSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasNationalIdentityNumberSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModelSchemasNationalIdentityNumberSourceValue' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasNationalIdentityNumberValue$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasNationalIdentityNumberValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(UpdateEmployeeApiModelSchemasNationalIdentityNumberValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const UpdateEmployeeApiModelSchemasNationalIdentityNumberValue$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasNationalIdentityNumberValueOpen,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasNationalIdentityNumberValueOpen
  > = z.union([
    z.nativeEnum(UpdateEmployeeApiModelSchemasNationalIdentityNumberValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasNationalIdentityNumberValue$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasNationalIdentityNumberValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasNationalIdentityNumberValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasNationalIdentityNumberValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasNationalIdentityNumberValue$outboundSchema;
}

/** @internal */
export const UpdateEmployeeApiModelSchemasCountry$inboundSchema: z.ZodType<
  UpdateEmployeeApiModelSchemasCountry,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() =>
        UpdateEmployeeApiModelSchemasNationalIdentityNumber4$inboundSchema
      ),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    UpdateEmployeeApiModelSchemasNationalIdentityNumberValue$inboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type UpdateEmployeeApiModelSchemasCountry$Outbound = {
  source_value?:
    | UpdateEmployeeApiModelSchemasNationalIdentityNumber4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const UpdateEmployeeApiModelSchemasCountry$outboundSchema: z.ZodType<
  UpdateEmployeeApiModelSchemasCountry$Outbound,
  z.ZodTypeDef,
  UpdateEmployeeApiModelSchemasCountry
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() =>
        UpdateEmployeeApiModelSchemasNationalIdentityNumber4$outboundSchema
      ),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    UpdateEmployeeApiModelSchemasNationalIdentityNumberValue$outboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasCountry$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasCountry$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasCountry$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasCountry$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasCountry$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasCountry$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModelSchemasCountry$Outbound;
}

export function updateEmployeeApiModelSchemasCountryToJSON(
  updateEmployeeApiModelSchemasCountry: UpdateEmployeeApiModelSchemasCountry,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasCountry$outboundSchema.parse(
      updateEmployeeApiModelSchemasCountry,
    ),
  );
}

export function updateEmployeeApiModelSchemasCountryFromJSON(
  jsonString: string,
): SafeParseResult<UpdateEmployeeApiModelSchemasCountry, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasCountry$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModelSchemasCountry' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasNationalIdentityNumberType4$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasNationalIdentityNumberType4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type UpdateEmployeeApiModelSchemasNationalIdentityNumberType4$Outbound =
  {};

/** @internal */
export const UpdateEmployeeApiModelSchemasNationalIdentityNumberType4$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasNationalIdentityNumberType4$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasNationalIdentityNumberType4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasNationalIdentityNumberType4$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasNationalIdentityNumberType4$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasNationalIdentityNumberType4$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasNationalIdentityNumberType4$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasNationalIdentityNumberType4$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasNationalIdentityNumberType4$Outbound` instead. */
  export type Outbound =
    UpdateEmployeeApiModelSchemasNationalIdentityNumberType4$Outbound;
}

export function updateEmployeeApiModelSchemasNationalIdentityNumberType4ToJSON(
  updateEmployeeApiModelSchemasNationalIdentityNumberType4:
    UpdateEmployeeApiModelSchemasNationalIdentityNumberType4,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasNationalIdentityNumberType4$outboundSchema
      .parse(updateEmployeeApiModelSchemasNationalIdentityNumberType4),
  );
}

export function updateEmployeeApiModelSchemasNationalIdentityNumberType4FromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasNationalIdentityNumberType4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasNationalIdentityNumberType4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModelSchemasNationalIdentityNumberType4' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeSourceValue$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      UpdateEmployeeApiModelSchemasNationalIdentityNumberType4$inboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeSourceValue$Outbound =
  | UpdateEmployeeApiModelSchemasNationalIdentityNumberType4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeSourceValue$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeSourceValue$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeSourceValue
  > = z.union([
    z.lazy(() =>
      UpdateEmployeeApiModelSchemasNationalIdentityNumberType4$outboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeSourceValue$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeSourceValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeSourceValue$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeSourceValue$Outbound` instead. */
  export type Outbound =
    UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeSourceValue$Outbound;
}

export function updateEmployeeApiModelSchemasNationalIdentityNumberTypeSourceValueToJSON(
  updateEmployeeApiModelSchemasNationalIdentityNumberTypeSourceValue:
    UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeSourceValue,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeSourceValue$outboundSchema
      .parse(
        updateEmployeeApiModelSchemasNationalIdentityNumberTypeSourceValue,
      ),
  );
}

export function updateEmployeeApiModelSchemasNationalIdentityNumberTypeSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeSourceValue' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeValue$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(
        UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeValue,
      ),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeValue$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeValueOpen,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeValueOpen
  > = z.union([
    z.nativeEnum(UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeValue$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeValue$outboundSchema;
}

/** @internal */
export const UpdateEmployeeApiModelType$inboundSchema: z.ZodType<
  UpdateEmployeeApiModelType,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() =>
        UpdateEmployeeApiModelSchemasNationalIdentityNumberType4$inboundSchema
      ),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeValue$inboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type UpdateEmployeeApiModelType$Outbound = {
  source_value?:
    | UpdateEmployeeApiModelSchemasNationalIdentityNumberType4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const UpdateEmployeeApiModelType$outboundSchema: z.ZodType<
  UpdateEmployeeApiModelType$Outbound,
  z.ZodTypeDef,
  UpdateEmployeeApiModelType
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() =>
        UpdateEmployeeApiModelSchemasNationalIdentityNumberType4$outboundSchema
      ),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    UpdateEmployeeApiModelSchemasNationalIdentityNumberTypeValue$outboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelType$ {
  /** @deprecated use `UpdateEmployeeApiModelType$inboundSchema` instead. */
  export const inboundSchema = UpdateEmployeeApiModelType$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelType$outboundSchema` instead. */
  export const outboundSchema = UpdateEmployeeApiModelType$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelType$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModelType$Outbound;
}

export function updateEmployeeApiModelTypeToJSON(
  updateEmployeeApiModelType: UpdateEmployeeApiModelType,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelType$outboundSchema.parse(updateEmployeeApiModelType),
  );
}

export function updateEmployeeApiModelTypeFromJSON(
  jsonString: string,
): SafeParseResult<UpdateEmployeeApiModelType, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateEmployeeApiModelType$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModelType' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelNationalIdentityNumber$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelNationalIdentityNumber,
    z.ZodTypeDef,
    unknown
  > = z.object({
    country: z.nullable(
      z.lazy(() => UpdateEmployeeApiModelSchemasCountry$inboundSchema),
    ).optional(),
    type: z.nullable(z.lazy(() => UpdateEmployeeApiModelType$inboundSchema))
      .optional(),
    value: z.nullable(z.string()).optional(),
  });

/** @internal */
export type UpdateEmployeeApiModelNationalIdentityNumber$Outbound = {
  country?: UpdateEmployeeApiModelSchemasCountry$Outbound | null | undefined;
  type?: UpdateEmployeeApiModelType$Outbound | null | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const UpdateEmployeeApiModelNationalIdentityNumber$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelNationalIdentityNumber$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelNationalIdentityNumber
  > = z.object({
    country: z.nullable(
      z.lazy(() => UpdateEmployeeApiModelSchemasCountry$outboundSchema),
    ).optional(),
    type: z.nullable(z.lazy(() => UpdateEmployeeApiModelType$outboundSchema))
      .optional(),
    value: z.nullable(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelNationalIdentityNumber$ {
  /** @deprecated use `UpdateEmployeeApiModelNationalIdentityNumber$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelNationalIdentityNumber$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelNationalIdentityNumber$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelNationalIdentityNumber$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelNationalIdentityNumber$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModelNationalIdentityNumber$Outbound;
}

export function updateEmployeeApiModelNationalIdentityNumberToJSON(
  updateEmployeeApiModelNationalIdentityNumber:
    UpdateEmployeeApiModelNationalIdentityNumber,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelNationalIdentityNumber$outboundSchema.parse(
      updateEmployeeApiModelNationalIdentityNumber,
    ),
  );
}

export function updateEmployeeApiModelNationalIdentityNumberFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelNationalIdentityNumber,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelNationalIdentityNumber$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateEmployeeApiModelNationalIdentityNumber' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasPreferredLanguage4$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasPreferredLanguage4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type UpdateEmployeeApiModelSchemasPreferredLanguage4$Outbound = {};

/** @internal */
export const UpdateEmployeeApiModelSchemasPreferredLanguage4$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasPreferredLanguage4$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasPreferredLanguage4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasPreferredLanguage4$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasPreferredLanguage4$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasPreferredLanguage4$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasPreferredLanguage4$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasPreferredLanguage4$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasPreferredLanguage4$Outbound` instead. */
  export type Outbound =
    UpdateEmployeeApiModelSchemasPreferredLanguage4$Outbound;
}

export function updateEmployeeApiModelSchemasPreferredLanguage4ToJSON(
  updateEmployeeApiModelSchemasPreferredLanguage4:
    UpdateEmployeeApiModelSchemasPreferredLanguage4,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasPreferredLanguage4$outboundSchema.parse(
      updateEmployeeApiModelSchemasPreferredLanguage4,
    ),
  );
}

export function updateEmployeeApiModelSchemasPreferredLanguage4FromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasPreferredLanguage4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasPreferredLanguage4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateEmployeeApiModelSchemasPreferredLanguage4' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasPreferredLanguageSourceValue$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasPreferredLanguageSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => UpdateEmployeeApiModelSchemasPreferredLanguage4$inboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type UpdateEmployeeApiModelSchemasPreferredLanguageSourceValue$Outbound =
  | UpdateEmployeeApiModelSchemasPreferredLanguage4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const UpdateEmployeeApiModelSchemasPreferredLanguageSourceValue$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasPreferredLanguageSourceValue$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasPreferredLanguageSourceValue
  > = z.union([
    z.lazy(() =>
      UpdateEmployeeApiModelSchemasPreferredLanguage4$outboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasPreferredLanguageSourceValue$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasPreferredLanguageSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasPreferredLanguageSourceValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasPreferredLanguageSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasPreferredLanguageSourceValue$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasPreferredLanguageSourceValue$Outbound` instead. */
  export type Outbound =
    UpdateEmployeeApiModelSchemasPreferredLanguageSourceValue$Outbound;
}

export function updateEmployeeApiModelSchemasPreferredLanguageSourceValueToJSON(
  updateEmployeeApiModelSchemasPreferredLanguageSourceValue:
    UpdateEmployeeApiModelSchemasPreferredLanguageSourceValue,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasPreferredLanguageSourceValue$outboundSchema
      .parse(updateEmployeeApiModelSchemasPreferredLanguageSourceValue),
  );
}

export function updateEmployeeApiModelSchemasPreferredLanguageSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasPreferredLanguageSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasPreferredLanguageSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModelSchemasPreferredLanguageSourceValue' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasPreferredLanguageValue$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasPreferredLanguageValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(UpdateEmployeeApiModelSchemasPreferredLanguageValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const UpdateEmployeeApiModelSchemasPreferredLanguageValue$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasPreferredLanguageValueOpen,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasPreferredLanguageValueOpen
  > = z.union([
    z.nativeEnum(UpdateEmployeeApiModelSchemasPreferredLanguageValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasPreferredLanguageValue$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasPreferredLanguageValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasPreferredLanguageValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasPreferredLanguageValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasPreferredLanguageValue$outboundSchema;
}

/** @internal */
export const UpdateEmployeeApiModelPreferredLanguage$inboundSchema: z.ZodType<
  UpdateEmployeeApiModelPreferredLanguage,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() =>
        UpdateEmployeeApiModelSchemasPreferredLanguage4$inboundSchema
      ),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    UpdateEmployeeApiModelSchemasPreferredLanguageValue$inboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type UpdateEmployeeApiModelPreferredLanguage$Outbound = {
  source_value?:
    | UpdateEmployeeApiModelSchemasPreferredLanguage4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const UpdateEmployeeApiModelPreferredLanguage$outboundSchema: z.ZodType<
  UpdateEmployeeApiModelPreferredLanguage$Outbound,
  z.ZodTypeDef,
  UpdateEmployeeApiModelPreferredLanguage
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() =>
        UpdateEmployeeApiModelSchemasPreferredLanguage4$outboundSchema
      ),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    UpdateEmployeeApiModelSchemasPreferredLanguageValue$outboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelPreferredLanguage$ {
  /** @deprecated use `UpdateEmployeeApiModelPreferredLanguage$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelPreferredLanguage$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelPreferredLanguage$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelPreferredLanguage$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelPreferredLanguage$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModelPreferredLanguage$Outbound;
}

export function updateEmployeeApiModelPreferredLanguageToJSON(
  updateEmployeeApiModelPreferredLanguage:
    UpdateEmployeeApiModelPreferredLanguage,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelPreferredLanguage$outboundSchema.parse(
      updateEmployeeApiModelPreferredLanguage,
    ),
  );
}

export function updateEmployeeApiModelPreferredLanguageFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelPreferredLanguage,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelPreferredLanguage$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateEmployeeApiModelPreferredLanguage' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasWorkLocation4$inboundSchema:
  z.ZodType<UpdateEmployeeApiModelSchemasWorkLocation4, z.ZodTypeDef, unknown> =
    z.object({});

/** @internal */
export type UpdateEmployeeApiModelSchemasWorkLocation4$Outbound = {};

/** @internal */
export const UpdateEmployeeApiModelSchemasWorkLocation4$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasWorkLocation4$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasWorkLocation4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasWorkLocation4$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasWorkLocation4$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasWorkLocation4$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasWorkLocation4$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasWorkLocation4$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasWorkLocation4$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModelSchemasWorkLocation4$Outbound;
}

export function updateEmployeeApiModelSchemasWorkLocation4ToJSON(
  updateEmployeeApiModelSchemasWorkLocation4:
    UpdateEmployeeApiModelSchemasWorkLocation4,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasWorkLocation4$outboundSchema.parse(
      updateEmployeeApiModelSchemasWorkLocation4,
    ),
  );
}

export function updateEmployeeApiModelSchemasWorkLocation4FromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasWorkLocation4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasWorkLocation4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateEmployeeApiModelSchemasWorkLocation4' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasWorkLocationSourceValue$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasWorkLocationSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => UpdateEmployeeApiModelSchemasWorkLocation4$inboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type UpdateEmployeeApiModelSchemasWorkLocationSourceValue$Outbound =
  | UpdateEmployeeApiModelSchemasWorkLocation4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const UpdateEmployeeApiModelSchemasWorkLocationSourceValue$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasWorkLocationSourceValue$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasWorkLocationSourceValue
  > = z.union([
    z.lazy(() => UpdateEmployeeApiModelSchemasWorkLocation4$outboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasWorkLocationSourceValue$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasWorkLocationSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasWorkLocationSourceValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasWorkLocationSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasWorkLocationSourceValue$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasWorkLocationSourceValue$Outbound` instead. */
  export type Outbound =
    UpdateEmployeeApiModelSchemasWorkLocationSourceValue$Outbound;
}

export function updateEmployeeApiModelSchemasWorkLocationSourceValueToJSON(
  updateEmployeeApiModelSchemasWorkLocationSourceValue:
    UpdateEmployeeApiModelSchemasWorkLocationSourceValue,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasWorkLocationSourceValue$outboundSchema.parse(
      updateEmployeeApiModelSchemasWorkLocationSourceValue,
    ),
  );
}

export function updateEmployeeApiModelSchemasWorkLocationSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasWorkLocationSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasWorkLocationSourceValue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateEmployeeApiModelSchemasWorkLocationSourceValue' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasWorkLocationValue$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasWorkLocationValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(UpdateEmployeeApiModelSchemasWorkLocationValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const UpdateEmployeeApiModelSchemasWorkLocationValue$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasWorkLocationValueOpen,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasWorkLocationValueOpen
  > = z.union([
    z.nativeEnum(UpdateEmployeeApiModelSchemasWorkLocationValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasWorkLocationValue$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasWorkLocationValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasWorkLocationValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasWorkLocationValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasWorkLocationValue$outboundSchema;
}

/** @internal */
export const UpdateEmployeeApiModelSchemasWorkLocationCountry$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasWorkLocationCountry,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source_value: z.nullable(
      z.union([
        z.lazy(() => UpdateEmployeeApiModelSchemasWorkLocation4$inboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      UpdateEmployeeApiModelSchemasWorkLocationValue$inboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "source_value": "sourceValue",
    });
  });

/** @internal */
export type UpdateEmployeeApiModelSchemasWorkLocationCountry$Outbound = {
  source_value?:
    | UpdateEmployeeApiModelSchemasWorkLocation4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const UpdateEmployeeApiModelSchemasWorkLocationCountry$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasWorkLocationCountry$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasWorkLocationCountry
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.lazy(() => UpdateEmployeeApiModelSchemasWorkLocation4$outboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      UpdateEmployeeApiModelSchemasWorkLocationValue$outboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasWorkLocationCountry$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasWorkLocationCountry$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasWorkLocationCountry$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasWorkLocationCountry$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasWorkLocationCountry$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasWorkLocationCountry$Outbound` instead. */
  export type Outbound =
    UpdateEmployeeApiModelSchemasWorkLocationCountry$Outbound;
}

export function updateEmployeeApiModelSchemasWorkLocationCountryToJSON(
  updateEmployeeApiModelSchemasWorkLocationCountry:
    UpdateEmployeeApiModelSchemasWorkLocationCountry,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasWorkLocationCountry$outboundSchema.parse(
      updateEmployeeApiModelSchemasWorkLocationCountry,
    ),
  );
}

export function updateEmployeeApiModelSchemasWorkLocationCountryFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasWorkLocationCountry,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasWorkLocationCountry$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateEmployeeApiModelSchemasWorkLocationCountry' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasWorkLocationState4$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasWorkLocationState4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type UpdateEmployeeApiModelSchemasWorkLocationState4$Outbound = {};

/** @internal */
export const UpdateEmployeeApiModelSchemasWorkLocationState4$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasWorkLocationState4$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasWorkLocationState4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasWorkLocationState4$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasWorkLocationState4$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasWorkLocationState4$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasWorkLocationState4$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasWorkLocationState4$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasWorkLocationState4$Outbound` instead. */
  export type Outbound =
    UpdateEmployeeApiModelSchemasWorkLocationState4$Outbound;
}

export function updateEmployeeApiModelSchemasWorkLocationState4ToJSON(
  updateEmployeeApiModelSchemasWorkLocationState4:
    UpdateEmployeeApiModelSchemasWorkLocationState4,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasWorkLocationState4$outboundSchema.parse(
      updateEmployeeApiModelSchemasWorkLocationState4,
    ),
  );
}

export function updateEmployeeApiModelSchemasWorkLocationState4FromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasWorkLocationState4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasWorkLocationState4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateEmployeeApiModelSchemasWorkLocationState4' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasWorkLocationStateSourceValue$inboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasWorkLocationStateSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => UpdateEmployeeApiModelSchemasWorkLocationState4$inboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type UpdateEmployeeApiModelSchemasWorkLocationStateSourceValue$Outbound =
  | UpdateEmployeeApiModelSchemasWorkLocationState4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const UpdateEmployeeApiModelSchemasWorkLocationStateSourceValue$outboundSchema:
  z.ZodType<
    UpdateEmployeeApiModelSchemasWorkLocationStateSourceValue$Outbound,
    z.ZodTypeDef,
    UpdateEmployeeApiModelSchemasWorkLocationStateSourceValue
  > = z.union([
    z.lazy(() =>
      UpdateEmployeeApiModelSchemasWorkLocationState4$outboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasWorkLocationStateSourceValue$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasWorkLocationStateSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    UpdateEmployeeApiModelSchemasWorkLocationStateSourceValue$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasWorkLocationStateSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasWorkLocationStateSourceValue$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasWorkLocationStateSourceValue$Outbound` instead. */
  export type Outbound =
    UpdateEmployeeApiModelSchemasWorkLocationStateSourceValue$Outbound;
}

export function updateEmployeeApiModelSchemasWorkLocationStateSourceValueToJSON(
  updateEmployeeApiModelSchemasWorkLocationStateSourceValue:
    UpdateEmployeeApiModelSchemasWorkLocationStateSourceValue,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasWorkLocationStateSourceValue$outboundSchema
      .parse(updateEmployeeApiModelSchemasWorkLocationStateSourceValue),
  );
}

export function updateEmployeeApiModelSchemasWorkLocationStateSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateEmployeeApiModelSchemasWorkLocationStateSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasWorkLocationStateSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModelSchemasWorkLocationStateSourceValue' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelSchemasState$inboundSchema: z.ZodType<
  UpdateEmployeeApiModelSchemasState,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() =>
        UpdateEmployeeApiModelSchemasWorkLocationState4$inboundSchema
      ),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type UpdateEmployeeApiModelSchemasState$Outbound = {
  source_value?:
    | UpdateEmployeeApiModelSchemasWorkLocationState4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const UpdateEmployeeApiModelSchemasState$outboundSchema: z.ZodType<
  UpdateEmployeeApiModelSchemasState$Outbound,
  z.ZodTypeDef,
  UpdateEmployeeApiModelSchemasState
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() =>
        UpdateEmployeeApiModelSchemasWorkLocationState4$outboundSchema
      ),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelSchemasState$ {
  /** @deprecated use `UpdateEmployeeApiModelSchemasState$inboundSchema` instead. */
  export const inboundSchema = UpdateEmployeeApiModelSchemasState$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasState$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelSchemasState$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelSchemasState$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModelSchemasState$Outbound;
}

export function updateEmployeeApiModelSchemasStateToJSON(
  updateEmployeeApiModelSchemasState: UpdateEmployeeApiModelSchemasState,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelSchemasState$outboundSchema.parse(
      updateEmployeeApiModelSchemasState,
    ),
  );
}

export function updateEmployeeApiModelSchemasStateFromJSON(
  jsonString: string,
): SafeParseResult<UpdateEmployeeApiModelSchemasState, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelSchemasState$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModelSchemasState' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModelWorkLocation$inboundSchema: z.ZodType<
  UpdateEmployeeApiModelWorkLocation,
  z.ZodTypeDef,
  unknown
> = z.object({
  city: z.nullable(z.string()).optional(),
  country: z.nullable(
    z.lazy(() =>
      UpdateEmployeeApiModelSchemasWorkLocationCountry$inboundSchema
    ),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  phone_number: z.nullable(z.string()).optional(),
  state: z.nullable(
    z.lazy(() => UpdateEmployeeApiModelSchemasState$inboundSchema),
  ).optional(),
  street_1: z.nullable(z.string()).optional(),
  street_2: z.nullable(z.string()).optional(),
  zip_code: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "phone_number": "phoneNumber",
    "street_1": "street1",
    "street_2": "street2",
    "zip_code": "zipCode",
  });
});

/** @internal */
export type UpdateEmployeeApiModelWorkLocation$Outbound = {
  city?: string | null | undefined;
  country?:
    | UpdateEmployeeApiModelSchemasWorkLocationCountry$Outbound
    | null
    | undefined;
  id?: string | null | undefined;
  name?: string | null | undefined;
  passthrough?: { [k: string]: any } | null | undefined;
  phone_number?: string | null | undefined;
  state?: UpdateEmployeeApiModelSchemasState$Outbound | null | undefined;
  street_1?: string | null | undefined;
  street_2?: string | null | undefined;
  zip_code?: string | null | undefined;
};

/** @internal */
export const UpdateEmployeeApiModelWorkLocation$outboundSchema: z.ZodType<
  UpdateEmployeeApiModelWorkLocation$Outbound,
  z.ZodTypeDef,
  UpdateEmployeeApiModelWorkLocation
> = z.object({
  city: z.nullable(z.string()).optional(),
  country: z.nullable(
    z.lazy(() =>
      UpdateEmployeeApiModelSchemasWorkLocationCountry$outboundSchema
    ),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  phoneNumber: z.nullable(z.string()).optional(),
  state: z.nullable(
    z.lazy(() => UpdateEmployeeApiModelSchemasState$outboundSchema),
  ).optional(),
  street1: z.nullable(z.string()).optional(),
  street2: z.nullable(z.string()).optional(),
  zipCode: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    phoneNumber: "phone_number",
    street1: "street_1",
    street2: "street_2",
    zipCode: "zip_code",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModelWorkLocation$ {
  /** @deprecated use `UpdateEmployeeApiModelWorkLocation$inboundSchema` instead. */
  export const inboundSchema = UpdateEmployeeApiModelWorkLocation$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelWorkLocation$outboundSchema` instead. */
  export const outboundSchema =
    UpdateEmployeeApiModelWorkLocation$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModelWorkLocation$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModelWorkLocation$Outbound;
}

export function updateEmployeeApiModelWorkLocationToJSON(
  updateEmployeeApiModelWorkLocation: UpdateEmployeeApiModelWorkLocation,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModelWorkLocation$outboundSchema.parse(
      updateEmployeeApiModelWorkLocation,
    ),
  );
}

export function updateEmployeeApiModelWorkLocationFromJSON(
  jsonString: string,
): SafeParseResult<UpdateEmployeeApiModelWorkLocation, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateEmployeeApiModelWorkLocation$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModelWorkLocation' from JSON`,
  );
}

/** @internal */
export const UpdateEmployeeApiModel$inboundSchema: z.ZodType<
  UpdateEmployeeApiModel,
  z.ZodTypeDef,
  unknown
> = z.object({
  avatar: z.nullable(z.lazy(() => UpdateEmployeeApiModelAvatar$inboundSchema))
    .optional(),
  avatar_url: z.nullable(z.string()).optional(),
  benefits: z.nullable(z.array(CreateHRISBenefit$inboundSchema)).optional(),
  birthday: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  citizenships: z.nullable(z.array(CountryCodeEnum$inboundSchema)).optional(),
  company_id: z.nullable(z.string()).optional(),
  company_name: z.nullable(z.string()).optional(),
  custom_fields: z.nullable(z.array(CustomFields$inboundSchema)).optional(),
  date_of_birth: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  department: z.nullable(z.string()).optional(),
  department_id: z.nullable(z.string()).optional(),
  display_name: z.nullable(z.string()).optional(),
  employee_number: z.nullable(z.string()).optional(),
  employment: z.nullable(
    z.lazy(() => UpdateEmployeeApiModelEmployment$inboundSchema),
  ).optional(),
  employment_contract_type: z.nullable(
    z.lazy(() => UpdateEmployeeApiModelEmploymentContractType$inboundSchema),
  ).optional(),
  employment_status: z.nullable(
    z.lazy(() => UpdateEmployeeApiModelEmploymentStatus$inboundSchema),
  ).optional(),
  employment_type: z.nullable(
    z.lazy(() => UpdateEmployeeApiModelEmploymentType$inboundSchema),
  ).optional(),
  ethnicity: z.nullable(
    z.lazy(() => UpdateEmployeeApiModelEthnicity$inboundSchema),
  ).optional(),
  first_name: z.nullable(z.string()).optional(),
  gender: z.nullable(z.lazy(() => UpdateEmployeeApiModelGender$inboundSchema))
    .optional(),
  hire_date: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  home_location: z.nullable(
    z.lazy(() => UpdateEmployeeApiModelHomeLocation$inboundSchema),
  ).optional(),
  job_id: z.nullable(z.string()).optional(),
  job_title: z.nullable(z.string()).optional(),
  last_name: z.nullable(z.string()).optional(),
  manager_id: z.nullable(z.string()).optional(),
  marital_status: z.nullable(
    z.lazy(() => UpdateEmployeeApiModelMaritalStatus$inboundSchema),
  ).optional(),
  name: z.nullable(z.string()).optional(),
  national_identity_number: z.nullable(
    z.lazy(() => UpdateEmployeeApiModelNationalIdentityNumber$inboundSchema),
  ).optional(),
  national_identity_numbers: z.nullable(
    z.array(NationalIdentityNumberApiModel$inboundSchema),
  ).optional(),
  personal_email: z.nullable(z.string()).optional(),
  personal_phone_number: z.nullable(z.string()).optional(),
  preferred_language: z.nullable(
    z.lazy(() => UpdateEmployeeApiModelPreferredLanguage$inboundSchema),
  ).optional(),
  start_date: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  team_id: z.nullable(z.string()).optional(),
  termination_date: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  work_email: z.nullable(z.string()).optional(),
  work_location: z.nullable(
    z.lazy(() => UpdateEmployeeApiModelWorkLocation$inboundSchema),
  ).optional(),
  work_phone_number: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "avatar_url": "avatarUrl",
    "company_id": "companyId",
    "company_name": "companyName",
    "custom_fields": "customFields",
    "date_of_birth": "dateOfBirth",
    "department_id": "departmentId",
    "display_name": "displayName",
    "employee_number": "employeeNumber",
    "employment_contract_type": "employmentContractType",
    "employment_status": "employmentStatus",
    "employment_type": "employmentType",
    "first_name": "firstName",
    "hire_date": "hireDate",
    "home_location": "homeLocation",
    "job_id": "jobId",
    "job_title": "jobTitle",
    "last_name": "lastName",
    "manager_id": "managerId",
    "marital_status": "maritalStatus",
    "national_identity_number": "nationalIdentityNumber",
    "national_identity_numbers": "nationalIdentityNumbers",
    "personal_email": "personalEmail",
    "personal_phone_number": "personalPhoneNumber",
    "preferred_language": "preferredLanguage",
    "start_date": "startDate",
    "team_id": "teamId",
    "termination_date": "terminationDate",
    "work_email": "workEmail",
    "work_location": "workLocation",
    "work_phone_number": "workPhoneNumber",
  });
});

/** @internal */
export type UpdateEmployeeApiModel$Outbound = {
  avatar?: UpdateEmployeeApiModelAvatar$Outbound | null | undefined;
  avatar_url?: string | null | undefined;
  benefits?: Array<CreateHRISBenefit$Outbound> | null | undefined;
  birthday?: string | null | undefined;
  citizenships?: Array<CountryCodeEnum$Outbound> | null | undefined;
  company_id?: string | null | undefined;
  company_name?: string | null | undefined;
  custom_fields?: Array<CustomFields$Outbound> | null | undefined;
  date_of_birth?: string | null | undefined;
  department?: string | null | undefined;
  department_id?: string | null | undefined;
  display_name?: string | null | undefined;
  employee_number?: string | null | undefined;
  employment?: UpdateEmployeeApiModelEmployment$Outbound | null | undefined;
  employment_contract_type?:
    | UpdateEmployeeApiModelEmploymentContractType$Outbound
    | null
    | undefined;
  employment_status?:
    | UpdateEmployeeApiModelEmploymentStatus$Outbound
    | null
    | undefined;
  employment_type?:
    | UpdateEmployeeApiModelEmploymentType$Outbound
    | null
    | undefined;
  ethnicity?: UpdateEmployeeApiModelEthnicity$Outbound | null | undefined;
  first_name?: string | null | undefined;
  gender?: UpdateEmployeeApiModelGender$Outbound | null | undefined;
  hire_date?: string | null | undefined;
  home_location?:
    | UpdateEmployeeApiModelHomeLocation$Outbound
    | null
    | undefined;
  job_id?: string | null | undefined;
  job_title?: string | null | undefined;
  last_name?: string | null | undefined;
  manager_id?: string | null | undefined;
  marital_status?:
    | UpdateEmployeeApiModelMaritalStatus$Outbound
    | null
    | undefined;
  name?: string | null | undefined;
  national_identity_number?:
    | UpdateEmployeeApiModelNationalIdentityNumber$Outbound
    | null
    | undefined;
  national_identity_numbers?:
    | Array<NationalIdentityNumberApiModel$Outbound>
    | null
    | undefined;
  personal_email?: string | null | undefined;
  personal_phone_number?: string | null | undefined;
  preferred_language?:
    | UpdateEmployeeApiModelPreferredLanguage$Outbound
    | null
    | undefined;
  start_date?: string | null | undefined;
  team_id?: string | null | undefined;
  termination_date?: string | null | undefined;
  work_email?: string | null | undefined;
  work_location?:
    | UpdateEmployeeApiModelWorkLocation$Outbound
    | null
    | undefined;
  work_phone_number?: string | null | undefined;
};

/** @internal */
export const UpdateEmployeeApiModel$outboundSchema: z.ZodType<
  UpdateEmployeeApiModel$Outbound,
  z.ZodTypeDef,
  UpdateEmployeeApiModel
> = z.object({
  avatar: z.nullable(z.lazy(() => UpdateEmployeeApiModelAvatar$outboundSchema))
    .optional(),
  avatarUrl: z.nullable(z.string()).optional(),
  benefits: z.nullable(z.array(CreateHRISBenefit$outboundSchema)).optional(),
  birthday: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  citizenships: z.nullable(z.array(CountryCodeEnum$outboundSchema)).optional(),
  companyId: z.nullable(z.string()).optional(),
  companyName: z.nullable(z.string()).optional(),
  customFields: z.nullable(z.array(CustomFields$outboundSchema)).optional(),
  dateOfBirth: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  department: z.nullable(z.string()).optional(),
  departmentId: z.nullable(z.string()).optional(),
  displayName: z.nullable(z.string()).optional(),
  employeeNumber: z.nullable(z.string()).optional(),
  employment: z.nullable(
    z.lazy(() => UpdateEmployeeApiModelEmployment$outboundSchema),
  ).optional(),
  employmentContractType: z.nullable(
    z.lazy(() => UpdateEmployeeApiModelEmploymentContractType$outboundSchema),
  ).optional(),
  employmentStatus: z.nullable(
    z.lazy(() => UpdateEmployeeApiModelEmploymentStatus$outboundSchema),
  ).optional(),
  employmentType: z.nullable(
    z.lazy(() => UpdateEmployeeApiModelEmploymentType$outboundSchema),
  ).optional(),
  ethnicity: z.nullable(
    z.lazy(() => UpdateEmployeeApiModelEthnicity$outboundSchema),
  ).optional(),
  firstName: z.nullable(z.string()).optional(),
  gender: z.nullable(z.lazy(() => UpdateEmployeeApiModelGender$outboundSchema))
    .optional(),
  hireDate: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  homeLocation: z.nullable(
    z.lazy(() => UpdateEmployeeApiModelHomeLocation$outboundSchema),
  ).optional(),
  jobId: z.nullable(z.string()).optional(),
  jobTitle: z.nullable(z.string()).optional(),
  lastName: z.nullable(z.string()).optional(),
  managerId: z.nullable(z.string()).optional(),
  maritalStatus: z.nullable(
    z.lazy(() => UpdateEmployeeApiModelMaritalStatus$outboundSchema),
  ).optional(),
  name: z.nullable(z.string()).optional(),
  nationalIdentityNumber: z.nullable(
    z.lazy(() => UpdateEmployeeApiModelNationalIdentityNumber$outboundSchema),
  ).optional(),
  nationalIdentityNumbers: z.nullable(
    z.array(NationalIdentityNumberApiModel$outboundSchema),
  ).optional(),
  personalEmail: z.nullable(z.string()).optional(),
  personalPhoneNumber: z.nullable(z.string()).optional(),
  preferredLanguage: z.nullable(
    z.lazy(() => UpdateEmployeeApiModelPreferredLanguage$outboundSchema),
  ).optional(),
  startDate: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  teamId: z.nullable(z.string()).optional(),
  terminationDate: z.nullable(z.date().transform(v => v.toISOString()))
    .optional(),
  workEmail: z.nullable(z.string()).optional(),
  workLocation: z.nullable(
    z.lazy(() => UpdateEmployeeApiModelWorkLocation$outboundSchema),
  ).optional(),
  workPhoneNumber: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    avatarUrl: "avatar_url",
    companyId: "company_id",
    companyName: "company_name",
    customFields: "custom_fields",
    dateOfBirth: "date_of_birth",
    departmentId: "department_id",
    displayName: "display_name",
    employeeNumber: "employee_number",
    employmentContractType: "employment_contract_type",
    employmentStatus: "employment_status",
    employmentType: "employment_type",
    firstName: "first_name",
    hireDate: "hire_date",
    homeLocation: "home_location",
    jobId: "job_id",
    jobTitle: "job_title",
    lastName: "last_name",
    managerId: "manager_id",
    maritalStatus: "marital_status",
    nationalIdentityNumber: "national_identity_number",
    nationalIdentityNumbers: "national_identity_numbers",
    personalEmail: "personal_email",
    personalPhoneNumber: "personal_phone_number",
    preferredLanguage: "preferred_language",
    startDate: "start_date",
    teamId: "team_id",
    terminationDate: "termination_date",
    workEmail: "work_email",
    workLocation: "work_location",
    workPhoneNumber: "work_phone_number",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmployeeApiModel$ {
  /** @deprecated use `UpdateEmployeeApiModel$inboundSchema` instead. */
  export const inboundSchema = UpdateEmployeeApiModel$inboundSchema;
  /** @deprecated use `UpdateEmployeeApiModel$outboundSchema` instead. */
  export const outboundSchema = UpdateEmployeeApiModel$outboundSchema;
  /** @deprecated use `UpdateEmployeeApiModel$Outbound` instead. */
  export type Outbound = UpdateEmployeeApiModel$Outbound;
}

export function updateEmployeeApiModelToJSON(
  updateEmployeeApiModel: UpdateEmployeeApiModel,
): string {
  return JSON.stringify(
    UpdateEmployeeApiModel$outboundSchema.parse(updateEmployeeApiModel),
  );
}

export function updateEmployeeApiModelFromJSON(
  jsonString: string,
): SafeParseResult<UpdateEmployeeApiModel, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateEmployeeApiModel$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateEmployeeApiModel' from JSON`,
  );
}
