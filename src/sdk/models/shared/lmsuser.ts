/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";

export type LmsUser = {
  /**
   * The created_at date
   */
  createdAt?: Date | null | undefined;
  /**
   * The user email
   */
  email?: string | null | undefined;
  /**
   * The external ID associated with this user
   */
  externalReference?: string | null | undefined;
  /**
   * Unique identifier
   */
  id?: string | null | undefined;
  /**
   * The user name
   */
  name?: string | null | undefined;
  /**
   * The user phone number
   */
  phoneNumber?: string | null | undefined;
  /**
   * Provider's unique identifier
   */
  remoteId?: string | null | undefined;
  /**
   * Custom Unified Fields configured in your StackOne project
   */
  unifiedCustomFields?: { [k: string]: any } | null | undefined;
  /**
   * The updated_at date
   */
  updatedAt?: Date | null | undefined;
};

/** @internal */
export const LmsUser$inboundSchema: z.ZodType<LmsUser, z.ZodTypeDef, unknown> =
  z.object({
    created_at: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ).optional(),
    email: z.nullable(z.string()).optional(),
    external_reference: z.nullable(z.string()).optional(),
    id: z.nullable(z.string()).optional(),
    name: z.nullable(z.string()).optional(),
    phone_number: z.nullable(z.string()).optional(),
    remote_id: z.nullable(z.string()).optional(),
    unified_custom_fields: z.nullable(z.record(z.any())).optional(),
    updated_at: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "created_at": "createdAt",
      "external_reference": "externalReference",
      "phone_number": "phoneNumber",
      "remote_id": "remoteId",
      "unified_custom_fields": "unifiedCustomFields",
      "updated_at": "updatedAt",
    });
  });

/** @internal */
export type LmsUser$Outbound = {
  created_at?: string | null | undefined;
  email?: string | null | undefined;
  external_reference?: string | null | undefined;
  id?: string | null | undefined;
  name?: string | null | undefined;
  phone_number?: string | null | undefined;
  remote_id?: string | null | undefined;
  unified_custom_fields?: { [k: string]: any } | null | undefined;
  updated_at?: string | null | undefined;
};

/** @internal */
export const LmsUser$outboundSchema: z.ZodType<
  LmsUser$Outbound,
  z.ZodTypeDef,
  LmsUser
> = z.object({
  createdAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  email: z.nullable(z.string()).optional(),
  externalReference: z.nullable(z.string()).optional(),
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  phoneNumber: z.nullable(z.string()).optional(),
  remoteId: z.nullable(z.string()).optional(),
  unifiedCustomFields: z.nullable(z.record(z.any())).optional(),
  updatedAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
}).transform((v) => {
  return remap$(v, {
    createdAt: "created_at",
    externalReference: "external_reference",
    phoneNumber: "phone_number",
    remoteId: "remote_id",
    unifiedCustomFields: "unified_custom_fields",
    updatedAt: "updated_at",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LmsUser$ {
  /** @deprecated use `LmsUser$inboundSchema` instead. */
  export const inboundSchema = LmsUser$inboundSchema;
  /** @deprecated use `LmsUser$outboundSchema` instead. */
  export const outboundSchema = LmsUser$outboundSchema;
  /** @deprecated use `LmsUser$Outbound` instead. */
  export type Outbound = LmsUser$Outbound;
}
