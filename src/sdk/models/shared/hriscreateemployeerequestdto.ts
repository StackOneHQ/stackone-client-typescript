/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  CountryCodeEnum,
  CountryCodeEnum$inboundSchema,
  CountryCodeEnum$Outbound,
  CountryCodeEnum$outboundSchema,
} from "./countrycodeenum.js";
import {
  CreateCostCenterApiModel,
  CreateCostCenterApiModel$inboundSchema,
  CreateCostCenterApiModel$Outbound,
  CreateCostCenterApiModel$outboundSchema,
} from "./createcostcenterapimodel.js";
import {
  CreateEmploymentApiModel,
  CreateEmploymentApiModel$inboundSchema,
  CreateEmploymentApiModel$Outbound,
  CreateEmploymentApiModel$outboundSchema,
} from "./createemploymentapimodel.js";
import {
  CreateHRISBenefit,
  CreateHRISBenefit$inboundSchema,
  CreateHRISBenefit$Outbound,
  CreateHRISBenefit$outboundSchema,
} from "./createhrisbenefit.js";
import {
  CustomFields,
  CustomFields$inboundSchema,
  CustomFields$Outbound,
  CustomFields$outboundSchema,
} from "./customfields.js";
import {
  NationalIdentityNumberApiModel,
  NationalIdentityNumberApiModel$inboundSchema,
  NationalIdentityNumberApiModel$Outbound,
  NationalIdentityNumberApiModel$outboundSchema,
} from "./nationalidentitynumberapimodel.js";

/**
 * The employee avatar
 */
export type HrisCreateEmployeeRequestDtoAvatar = {
  base64?: string | null | undefined;
  url?: string | null | undefined;
};

export type HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4 =
  {};

export type HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue =
  | HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4
  | string
  | number
  | boolean
  | Array<any>;

export enum HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValue {
  FullTime = "full_time",
  Shifts = "shifts",
  PartTime = "part_time",
  UnmappedValue = "unmapped_value",
}
export type HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValueOpen =
  OpenEnum<
    typeof HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValue
  >;

/**
 * The employment work schedule type (e.g., full-time, part-time)
 */
export type HrisCreateEmployeeRequestDtoSchemasEmploymentContractType = {
  sourceValue?:
    | HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?:
    | HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValueOpen
    | null
    | undefined;
};

export type HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentType4 = {};

/**
 * The source value of the employment type.
 */
export type HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue =
  | HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentType4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The type of the employment.
 */
export enum HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValue {
  Contractor = "contractor",
  Intern = "intern",
  Permanent = "permanent",
  Apprentice = "apprentice",
  Freelance = "freelance",
  Terminated = "terminated",
  Temporary = "temporary",
  Seasonal = "seasonal",
  Volunteer = "volunteer",
  Probation = "probation",
  Internal = "internal",
  External = "external",
  Expatriate = "expatriate",
  EmployerOfRecord = "employer_of_record",
  Casual = "casual",
  Programme = "Programme",
  UnmappedValue = "unmapped_value",
}
/**
 * The type of the employment.
 */
export type HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValueOpen =
  OpenEnum<
    typeof HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValue
  >;

/**
 * The type of employment (e.g., contractor, permanent)
 */
export type HrisCreateEmployeeRequestDtoSchemasEmploymentType = {
  /**
   * The source value of the employment type.
   */
  sourceValue?:
    | HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentType4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The type of the employment.
   */
  value?:
    | HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValueOpen
    | null
    | undefined;
};

export type HrisCreateEmployeeRequestDtoSchemasEmployment4 = {};

/**
 * The source value of the pay frequency.
 */
export type HrisCreateEmployeeRequestDtoSchemasEmploymentSourceValue =
  | HrisCreateEmployeeRequestDtoSchemasEmployment4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The pay frequency of the job postings.
 */
export enum HrisCreateEmployeeRequestDtoSchemasEmploymentValue {
  Hourly = "hourly",
  Weekly = "weekly",
  BiWeekly = "bi_weekly",
  FourWeekly = "four_weekly",
  SemiMonthly = "semi_monthly",
  Monthly = "monthly",
  BiMonthly = "bi_monthly",
  Quarterly = "quarterly",
  SemiAnnually = "semi_annually",
  Yearly = "yearly",
  ThirteenMonthly = "thirteen_monthly",
  ProRata = "pro_rata",
  UnmappedValue = "unmapped_value",
  HalfYearly = "half_yearly",
  Daily = "daily",
}
/**
 * The pay frequency of the job postings.
 */
export type HrisCreateEmployeeRequestDtoSchemasEmploymentValueOpen = OpenEnum<
  typeof HrisCreateEmployeeRequestDtoSchemasEmploymentValue
>;

/**
 * The pay frequency
 */
export type HrisCreateEmployeeRequestDtoPayFrequency = {
  /**
   * The source value of the pay frequency.
   */
  sourceValue?:
    | HrisCreateEmployeeRequestDtoSchemasEmployment4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The pay frequency of the job postings.
   */
  value?:
    | HrisCreateEmployeeRequestDtoSchemasEmploymentValueOpen
    | null
    | undefined;
};

export type HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriod4 = {};

/**
 * The source value of the pay period.
 */
export type HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue =
  | HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriod4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The pay period of the job postings.
 */
export enum HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodValue {
  Hour = "hour",
  Day = "day",
  Week = "week",
  EveryTwoWeeks = "every_two_weeks",
  Month = "month",
  TwiceAMonth = "twice_a_month",
  EveryTwoMonths = "every_two_months",
  Quarter = "quarter",
  EverySixMonths = "every_six_months",
  Year = "year",
  OneOff = "one_off",
  None = "none",
  UnmappedValue = "unmapped_value",
}
/**
 * The pay period of the job postings.
 */
export type HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodValueOpen =
  OpenEnum<typeof HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodValue>;

/**
 * The pay period
 */
export type HrisCreateEmployeeRequestDtoPayPeriod = {
  /**
   * The source value of the pay period.
   */
  sourceValue?:
    | HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriod4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The pay period of the job postings.
   */
  value?:
    | HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodValueOpen
    | null
    | undefined;
};

export type HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTime4 = {};

export type HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue =
  | HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTime4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The unified value for the duration unit.
 */
export enum HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeValue {
  Day = "day",
  Week = "week",
  Month = "month",
  Year = "year",
  UnmappedValue = "unmapped_value",
}
/**
 * The unified value for the duration unit.
 */
export type HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeValueOpen =
  OpenEnum<typeof HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeValue>;

/**
 * The duration unit of the work time
 */
export type HrisCreateEmployeeRequestDtoDurationUnit = {
  sourceValue?:
    | HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTime4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The unified value for the duration unit.
   */
  value?:
    | HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeValueOpen
    | null
    | undefined;
};

export type HrisCreateEmployeeRequestDtoWorkTime = {
  /**
   * The work time duration in ISO 8601 duration format
   */
  duration?: string | null | undefined;
  /**
   * The duration unit of the work time
   */
  durationUnit?: HrisCreateEmployeeRequestDtoDurationUnit | null | undefined;
};

/**
 * The employee employment
 */
export type HrisCreateEmployeeRequestDtoEmployment = {
  /**
   * The effective date of the employment contract
   *
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  effectiveDate?: Date | null | undefined;
  /**
   * The employment work schedule type (e.g., full-time, part-time)
   */
  employmentContractType?:
    | HrisCreateEmployeeRequestDtoSchemasEmploymentContractType
    | null
    | undefined;
  /**
   * The type of employment (e.g., contractor, permanent)
   */
  employmentType?:
    | HrisCreateEmployeeRequestDtoSchemasEmploymentType
    | null
    | undefined;
  /**
   * Unique identifier
   */
  id?: string | null | undefined;
  /**
   * The job title of the employee
   */
  jobTitle?: string | null | undefined;
  /**
   * The currency used for pay
   */
  payCurrency?: string | null | undefined;
  /**
   * The pay frequency
   */
  payFrequency?: HrisCreateEmployeeRequestDtoPayFrequency | null | undefined;
  /**
   * The pay period
   */
  payPeriod?: HrisCreateEmployeeRequestDtoPayPeriod | null | undefined;
  /**
   * The pay rate for the employee
   */
  payRate?: string | null | undefined;
  /**
   * Custom Unified Fields configured in your StackOne project
   */
  unifiedCustomFields?: { [k: string]: any } | null | undefined;
  workTime?: HrisCreateEmployeeRequestDtoWorkTime | null | undefined;
};

export type HrisCreateEmployeeRequestDto4 = {};

export type HrisCreateEmployeeRequestDtoSourceValue =
  | HrisCreateEmployeeRequestDto4
  | string
  | number
  | boolean
  | Array<any>;

export enum HrisCreateEmployeeRequestDtoValue {
  FullTime = "full_time",
  Shifts = "shifts",
  PartTime = "part_time",
  UnmappedValue = "unmapped_value",
}
export type HrisCreateEmployeeRequestDtoValueOpen = OpenEnum<
  typeof HrisCreateEmployeeRequestDtoValue
>;

/**
 * The employment work schedule type (e.g., full-time, part-time)
 */
export type HrisCreateEmployeeRequestDtoEmploymentContractType = {
  sourceValue?:
    | HrisCreateEmployeeRequestDto4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: HrisCreateEmployeeRequestDtoValueOpen | null | undefined;
};

export type HrisCreateEmployeeRequestDtoSchemas4 = {};

export type HrisCreateEmployeeRequestDtoSchemasSourceValue =
  | HrisCreateEmployeeRequestDtoSchemas4
  | string
  | number
  | boolean
  | Array<any>;

export enum HrisCreateEmployeeRequestDtoSchemasValue {
  Active = "active",
  Pending = "pending",
  Terminated = "terminated",
  Leave = "leave",
  Inactive = "inactive",
  Unknown = "unknown",
  UnmappedValue = "unmapped_value",
}
export type HrisCreateEmployeeRequestDtoSchemasValueOpen = OpenEnum<
  typeof HrisCreateEmployeeRequestDtoSchemasValue
>;

/**
 * The employee employment status
 */
export type HrisCreateEmployeeRequestDtoEmploymentStatus = {
  sourceValue?:
    | HrisCreateEmployeeRequestDtoSchemas4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: HrisCreateEmployeeRequestDtoSchemasValueOpen | null | undefined;
};

export type HrisCreateEmployeeRequestDtoSchemasEmploymentType4 = {};

/**
 * The source value of the employment type.
 */
export type HrisCreateEmployeeRequestDtoSchemasEmploymentTypeSourceValue =
  | HrisCreateEmployeeRequestDtoSchemasEmploymentType4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The type of the employment.
 */
export enum HrisCreateEmployeeRequestDtoSchemasEmploymentTypeValue {
  Contractor = "contractor",
  Intern = "intern",
  Permanent = "permanent",
  Apprentice = "apprentice",
  Freelance = "freelance",
  Terminated = "terminated",
  Temporary = "temporary",
  Seasonal = "seasonal",
  Volunteer = "volunteer",
  Probation = "probation",
  Internal = "internal",
  External = "external",
  Expatriate = "expatriate",
  EmployerOfRecord = "employer_of_record",
  Casual = "casual",
  Programme = "Programme",
  UnmappedValue = "unmapped_value",
}
/**
 * The type of the employment.
 */
export type HrisCreateEmployeeRequestDtoSchemasEmploymentTypeValueOpen =
  OpenEnum<typeof HrisCreateEmployeeRequestDtoSchemasEmploymentTypeValue>;

/**
 * The employee employment type
 */
export type HrisCreateEmployeeRequestDtoEmploymentType = {
  /**
   * The source value of the employment type.
   */
  sourceValue?:
    | HrisCreateEmployeeRequestDtoSchemasEmploymentType4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The type of the employment.
   */
  value?:
    | HrisCreateEmployeeRequestDtoSchemasEmploymentTypeValueOpen
    | null
    | undefined;
};

export type HrisCreateEmployeeRequestDtoSchemasEthnicity4 = {};

export type HrisCreateEmployeeRequestDtoSchemasEthnicitySourceValue =
  | HrisCreateEmployeeRequestDtoSchemasEthnicity4
  | string
  | number
  | boolean
  | Array<any>;

export enum HrisCreateEmployeeRequestDtoSchemasEthnicityValue {
  White = "white",
  BlackOrAfricanAmerican = "black_or_african_american",
  Asian = "asian",
  HispanicOrLatino = "hispanic_or_latino",
  AmericanIndianOrAlaskaNative = "american_indian_or_alaska_native",
  NativeHawaiianOrPacificIslander = "native_hawaiian_or_pacific_islander",
  TwoOrMoreRaces = "two_or_more_races",
  NotDisclosed = "not_disclosed",
  Other = "other",
  UnmappedValue = "unmapped_value",
}
export type HrisCreateEmployeeRequestDtoSchemasEthnicityValueOpen = OpenEnum<
  typeof HrisCreateEmployeeRequestDtoSchemasEthnicityValue
>;

/**
 * The employee ethnicity
 */
export type HrisCreateEmployeeRequestDtoEthnicity = {
  sourceValue?:
    | HrisCreateEmployeeRequestDtoSchemasEthnicity4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?:
    | HrisCreateEmployeeRequestDtoSchemasEthnicityValueOpen
    | null
    | undefined;
};

export type HrisCreateEmployeeRequestDtoSchemasGender4 = {};

export type HrisCreateEmployeeRequestDtoSchemasGenderSourceValue =
  | HrisCreateEmployeeRequestDtoSchemasGender4
  | string
  | number
  | boolean
  | Array<any>;

export enum HrisCreateEmployeeRequestDtoSchemasGenderValue {
  Male = "male",
  Female = "female",
  NonBinary = "non_binary",
  Other = "other",
  NotDisclosed = "not_disclosed",
  Diverse = "diverse",
  UnmappedValue = "unmapped_value",
}
export type HrisCreateEmployeeRequestDtoSchemasGenderValueOpen = OpenEnum<
  typeof HrisCreateEmployeeRequestDtoSchemasGenderValue
>;

/**
 * The employee gender
 */
export type HrisCreateEmployeeRequestDtoGender = {
  sourceValue?:
    | HrisCreateEmployeeRequestDtoSchemasGender4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: HrisCreateEmployeeRequestDtoSchemasGenderValueOpen | null | undefined;
};

export type HrisCreateEmployeeRequestDtoSchemasHomeLocation4 = {};

export type HrisCreateEmployeeRequestDtoSchemasHomeLocationSourceValue =
  | HrisCreateEmployeeRequestDtoSchemasHomeLocation4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The ISO3166-1 Alpha2 Code of the Country
 */
export enum HrisCreateEmployeeRequestDtoSchemasHomeLocationValue {
  Af = "AF",
  Al = "AL",
  Dz = "DZ",
  As = "AS",
  Ad = "AD",
  Ao = "AO",
  Ai = "AI",
  Aq = "AQ",
  Ag = "AG",
  Ar = "AR",
  Am = "AM",
  Aw = "AW",
  Au = "AU",
  At = "AT",
  Az = "AZ",
  Bs = "BS",
  Bh = "BH",
  Bd = "BD",
  Bb = "BB",
  By = "BY",
  Be = "BE",
  Bz = "BZ",
  Bj = "BJ",
  Bm = "BM",
  Bt = "BT",
  Bo = "BO",
  Bq = "BQ",
  Ba = "BA",
  Bw = "BW",
  Bv = "BV",
  Br = "BR",
  Io = "IO",
  Bn = "BN",
  Bg = "BG",
  Bf = "BF",
  Bi = "BI",
  Kh = "KH",
  Cm = "CM",
  Ca = "CA",
  Cv = "CV",
  Ky = "KY",
  Cf = "CF",
  Td = "TD",
  Cl = "CL",
  Cn = "CN",
  Cx = "CX",
  Cc = "CC",
  Co = "CO",
  Km = "KM",
  Cg = "CG",
  Cd = "CD",
  Ck = "CK",
  Cr = "CR",
  Hr = "HR",
  Cu = "CU",
  Cw = "CW",
  Cy = "CY",
  Cz = "CZ",
  Ci = "CI",
  Dk = "DK",
  Dj = "DJ",
  Dm = "DM",
  Do = "DO",
  Ec = "EC",
  Eg = "EG",
  Sv = "SV",
  Gq = "GQ",
  Er = "ER",
  Ee = "EE",
  Et = "ET",
  Fk = "FK",
  Fo = "FO",
  Fj = "FJ",
  Fi = "FI",
  Fr = "FR",
  Gf = "GF",
  Pf = "PF",
  Tf = "TF",
  Ga = "GA",
  Gm = "GM",
  Ge = "GE",
  De = "DE",
  Gh = "GH",
  Gi = "GI",
  Gr = "GR",
  Gl = "GL",
  Gd = "GD",
  Gp = "GP",
  Gu = "GU",
  Gt = "GT",
  Gg = "GG",
  Gn = "GN",
  Gw = "GW",
  Gy = "GY",
  Ht = "HT",
  Hm = "HM",
  Va = "VA",
  Hn = "HN",
  Hk = "HK",
  Hu = "HU",
  Is = "IS",
  In = "IN",
  Id = "ID",
  Ir = "IR",
  Iq = "IQ",
  Ie = "IE",
  Im = "IM",
  Il = "IL",
  It = "IT",
  Jm = "JM",
  Jp = "JP",
  Je = "JE",
  Jo = "JO",
  Kz = "KZ",
  Ke = "KE",
  Ki = "KI",
  Kp = "KP",
  Kr = "KR",
  Kw = "KW",
  Kg = "KG",
  La = "LA",
  Lv = "LV",
  Lb = "LB",
  Ls = "LS",
  Lr = "LR",
  Ly = "LY",
  Li = "LI",
  Lt = "LT",
  Lu = "LU",
  Mo = "MO",
  Mk = "MK",
  Mg = "MG",
  Mw = "MW",
  My = "MY",
  Mv = "MV",
  Ml = "ML",
  Mt = "MT",
  Mh = "MH",
  Mq = "MQ",
  Mr = "MR",
  Mu = "MU",
  Yt = "YT",
  Mx = "MX",
  Fm = "FM",
  Md = "MD",
  Mc = "MC",
  Mn = "MN",
  Me = "ME",
  Ms = "MS",
  Ma = "MA",
  Mz = "MZ",
  Mm = "MM",
  Na = "NA",
  Nr = "NR",
  Np = "NP",
  Nl = "NL",
  Nc = "NC",
  Nz = "NZ",
  Ni = "NI",
  Ne = "NE",
  Ng = "NG",
  Nu = "NU",
  Nf = "NF",
  Mp = "MP",
  No = "NO",
  Om = "OM",
  Pk = "PK",
  Pw = "PW",
  Ps = "PS",
  Pa = "PA",
  Pg = "PG",
  Py = "PY",
  Pe = "PE",
  Ph = "PH",
  Pn = "PN",
  Pl = "PL",
  Pt = "PT",
  Pr = "PR",
  Qa = "QA",
  Ro = "RO",
  Ru = "RU",
  Rw = "RW",
  Re = "RE",
  Bl = "BL",
  Sh = "SH",
  Kn = "KN",
  Lc = "LC",
  Mf = "MF",
  Pm = "PM",
  Vc = "VC",
  Ws = "WS",
  Sm = "SM",
  St = "ST",
  Sa = "SA",
  Sn = "SN",
  Rs = "RS",
  Sc = "SC",
  Sl = "SL",
  Sg = "SG",
  Sx = "SX",
  Sk = "SK",
  Si = "SI",
  Sb = "SB",
  So = "SO",
  Za = "ZA",
  Gs = "GS",
  Ss = "SS",
  Es = "ES",
  Lk = "LK",
  Sd = "SD",
  Sr = "SR",
  Sj = "SJ",
  Sz = "SZ",
  Se = "SE",
  Ch = "CH",
  Sy = "SY",
  Tw = "TW",
  Tj = "TJ",
  Tz = "TZ",
  Th = "TH",
  Tl = "TL",
  Tg = "TG",
  Tk = "TK",
  To = "TO",
  Tt = "TT",
  Tn = "TN",
  Tr = "TR",
  Tm = "TM",
  Tc = "TC",
  Tv = "TV",
  Ug = "UG",
  Ua = "UA",
  Ae = "AE",
  Gb = "GB",
  Us = "US",
  Um = "UM",
  Uy = "UY",
  Uz = "UZ",
  Vu = "VU",
  Ve = "VE",
  Vn = "VN",
  Vg = "VG",
  Vi = "VI",
  Wf = "WF",
  Eh = "EH",
  Ye = "YE",
  Zm = "ZM",
  Zw = "ZW",
  UnmappedValue = "unmapped_value",
}
/**
 * The ISO3166-1 Alpha2 Code of the Country
 */
export type HrisCreateEmployeeRequestDtoSchemasHomeLocationValueOpen = OpenEnum<
  typeof HrisCreateEmployeeRequestDtoSchemasHomeLocationValue
>;

/**
 * The country code
 */
export type HrisCreateEmployeeRequestDtoCountry = {
  sourceValue?:
    | HrisCreateEmployeeRequestDtoSchemasHomeLocation4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The ISO3166-1 Alpha2 Code of the Country
   */
  value?:
    | HrisCreateEmployeeRequestDtoSchemasHomeLocationValueOpen
    | null
    | undefined;
};

export type HrisCreateEmployeeRequestDtoSchemasHomeLocationState4 = {};

export type HrisCreateEmployeeRequestDtoSchemasHomeLocationStateSourceValue =
  | HrisCreateEmployeeRequestDtoSchemasHomeLocationState4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The ISO3166-2 sub division where the location is situated
 */
export type State = {
  sourceValue?:
    | HrisCreateEmployeeRequestDtoSchemasHomeLocationState4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * state (ISO3166-2 Sub Division Code) - value must be a valid enum value
   */
  value?: string | null | undefined;
};

/**
 * The employee home location
 */
export type HrisCreateEmployeeRequestDtoHomeLocation = {
  /**
   * The city where the location is situated
   */
  city?: string | null | undefined;
  /**
   * The country code
   */
  country?: HrisCreateEmployeeRequestDtoCountry | null | undefined;
  /**
   * Unique identifier
   */
  id?: string | null | undefined;
  /**
   * The name of the location
   */
  name?: string | null | undefined;
  /**
   * Value to pass through to the provider
   */
  passthrough?: { [k: string]: any } | null | undefined;
  /**
   * The phone number of the location
   */
  phoneNumber?: string | null | undefined;
  /**
   * The ISO3166-2 sub division where the location is situated
   */
  state?: State | null | undefined;
  /**
   * The first line of the address
   */
  street1?: string | null | undefined;
  /**
   * The second line of the address
   */
  street2?: string | null | undefined;
  /**
   * The ZIP code/Postal code of the location
   */
  zipCode?: string | null | undefined;
};

export type HrisCreateEmployeeRequestDtoSchemasMaritalStatus4 = {};

export type HrisCreateEmployeeRequestDtoSchemasMaritalStatusSourceValue =
  | HrisCreateEmployeeRequestDtoSchemasMaritalStatus4
  | string
  | number
  | boolean
  | Array<any>;

export enum HrisCreateEmployeeRequestDtoSchemasMaritalStatusValue {
  Single = "single",
  Married = "married",
  CommonLaw = "common_law",
  Divorced = "divorced",
  Widowed = "widowed",
  DomesticPartnership = "domestic_partnership",
  Separated = "separated",
  Other = "other",
  NotDisclosed = "not_disclosed",
  UnmappedValue = "unmapped_value",
}
export type HrisCreateEmployeeRequestDtoSchemasMaritalStatusValueOpen =
  OpenEnum<typeof HrisCreateEmployeeRequestDtoSchemasMaritalStatusValue>;

/**
 * The employee marital status
 */
export type HrisCreateEmployeeRequestDtoMaritalStatus = {
  sourceValue?:
    | HrisCreateEmployeeRequestDtoSchemasMaritalStatus4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?:
    | HrisCreateEmployeeRequestDtoSchemasMaritalStatusValueOpen
    | null
    | undefined;
};

export type HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumber4 = {};

export type HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue =
  | HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumber4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The ISO3166-1 Alpha2 Code of the Country
 */
export enum HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberValue {
  Af = "AF",
  Al = "AL",
  Dz = "DZ",
  As = "AS",
  Ad = "AD",
  Ao = "AO",
  Ai = "AI",
  Aq = "AQ",
  Ag = "AG",
  Ar = "AR",
  Am = "AM",
  Aw = "AW",
  Au = "AU",
  At = "AT",
  Az = "AZ",
  Bs = "BS",
  Bh = "BH",
  Bd = "BD",
  Bb = "BB",
  By = "BY",
  Be = "BE",
  Bz = "BZ",
  Bj = "BJ",
  Bm = "BM",
  Bt = "BT",
  Bo = "BO",
  Bq = "BQ",
  Ba = "BA",
  Bw = "BW",
  Bv = "BV",
  Br = "BR",
  Io = "IO",
  Bn = "BN",
  Bg = "BG",
  Bf = "BF",
  Bi = "BI",
  Kh = "KH",
  Cm = "CM",
  Ca = "CA",
  Cv = "CV",
  Ky = "KY",
  Cf = "CF",
  Td = "TD",
  Cl = "CL",
  Cn = "CN",
  Cx = "CX",
  Cc = "CC",
  Co = "CO",
  Km = "KM",
  Cg = "CG",
  Cd = "CD",
  Ck = "CK",
  Cr = "CR",
  Hr = "HR",
  Cu = "CU",
  Cw = "CW",
  Cy = "CY",
  Cz = "CZ",
  Ci = "CI",
  Dk = "DK",
  Dj = "DJ",
  Dm = "DM",
  Do = "DO",
  Ec = "EC",
  Eg = "EG",
  Sv = "SV",
  Gq = "GQ",
  Er = "ER",
  Ee = "EE",
  Et = "ET",
  Fk = "FK",
  Fo = "FO",
  Fj = "FJ",
  Fi = "FI",
  Fr = "FR",
  Gf = "GF",
  Pf = "PF",
  Tf = "TF",
  Ga = "GA",
  Gm = "GM",
  Ge = "GE",
  De = "DE",
  Gh = "GH",
  Gi = "GI",
  Gr = "GR",
  Gl = "GL",
  Gd = "GD",
  Gp = "GP",
  Gu = "GU",
  Gt = "GT",
  Gg = "GG",
  Gn = "GN",
  Gw = "GW",
  Gy = "GY",
  Ht = "HT",
  Hm = "HM",
  Va = "VA",
  Hn = "HN",
  Hk = "HK",
  Hu = "HU",
  Is = "IS",
  In = "IN",
  Id = "ID",
  Ir = "IR",
  Iq = "IQ",
  Ie = "IE",
  Im = "IM",
  Il = "IL",
  It = "IT",
  Jm = "JM",
  Jp = "JP",
  Je = "JE",
  Jo = "JO",
  Kz = "KZ",
  Ke = "KE",
  Ki = "KI",
  Kp = "KP",
  Kr = "KR",
  Kw = "KW",
  Kg = "KG",
  La = "LA",
  Lv = "LV",
  Lb = "LB",
  Ls = "LS",
  Lr = "LR",
  Ly = "LY",
  Li = "LI",
  Lt = "LT",
  Lu = "LU",
  Mo = "MO",
  Mk = "MK",
  Mg = "MG",
  Mw = "MW",
  My = "MY",
  Mv = "MV",
  Ml = "ML",
  Mt = "MT",
  Mh = "MH",
  Mq = "MQ",
  Mr = "MR",
  Mu = "MU",
  Yt = "YT",
  Mx = "MX",
  Fm = "FM",
  Md = "MD",
  Mc = "MC",
  Mn = "MN",
  Me = "ME",
  Ms = "MS",
  Ma = "MA",
  Mz = "MZ",
  Mm = "MM",
  Na = "NA",
  Nr = "NR",
  Np = "NP",
  Nl = "NL",
  Nc = "NC",
  Nz = "NZ",
  Ni = "NI",
  Ne = "NE",
  Ng = "NG",
  Nu = "NU",
  Nf = "NF",
  Mp = "MP",
  No = "NO",
  Om = "OM",
  Pk = "PK",
  Pw = "PW",
  Ps = "PS",
  Pa = "PA",
  Pg = "PG",
  Py = "PY",
  Pe = "PE",
  Ph = "PH",
  Pn = "PN",
  Pl = "PL",
  Pt = "PT",
  Pr = "PR",
  Qa = "QA",
  Ro = "RO",
  Ru = "RU",
  Rw = "RW",
  Re = "RE",
  Bl = "BL",
  Sh = "SH",
  Kn = "KN",
  Lc = "LC",
  Mf = "MF",
  Pm = "PM",
  Vc = "VC",
  Ws = "WS",
  Sm = "SM",
  St = "ST",
  Sa = "SA",
  Sn = "SN",
  Rs = "RS",
  Sc = "SC",
  Sl = "SL",
  Sg = "SG",
  Sx = "SX",
  Sk = "SK",
  Si = "SI",
  Sb = "SB",
  So = "SO",
  Za = "ZA",
  Gs = "GS",
  Ss = "SS",
  Es = "ES",
  Lk = "LK",
  Sd = "SD",
  Sr = "SR",
  Sj = "SJ",
  Sz = "SZ",
  Se = "SE",
  Ch = "CH",
  Sy = "SY",
  Tw = "TW",
  Tj = "TJ",
  Tz = "TZ",
  Th = "TH",
  Tl = "TL",
  Tg = "TG",
  Tk = "TK",
  To = "TO",
  Tt = "TT",
  Tn = "TN",
  Tr = "TR",
  Tm = "TM",
  Tc = "TC",
  Tv = "TV",
  Ug = "UG",
  Ua = "UA",
  Ae = "AE",
  Gb = "GB",
  Us = "US",
  Um = "UM",
  Uy = "UY",
  Uz = "UZ",
  Vu = "VU",
  Ve = "VE",
  Vn = "VN",
  Vg = "VG",
  Vi = "VI",
  Wf = "WF",
  Eh = "EH",
  Ye = "YE",
  Zm = "ZM",
  Zw = "ZW",
  UnmappedValue = "unmapped_value",
}
/**
 * The ISO3166-1 Alpha2 Code of the Country
 */
export type HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberValueOpen =
  OpenEnum<
    typeof HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberValue
  >;

/**
 * The country code
 */
export type HrisCreateEmployeeRequestDtoSchemasCountry = {
  sourceValue?:
    | HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumber4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The ISO3166-1 Alpha2 Code of the Country
   */
  value?:
    | HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberValueOpen
    | null
    | undefined;
};

export type HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberType4 = {};

export type HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue =
  | HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberType4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The type of the national identity number
 */
export enum HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValue {
  Ssn = "ssn",
  Nin = "nin",
  Sin = "sin",
  Nid = "nid",
  Pin = "pin",
  Pn = "pn",
  Umcn = "umcn",
  Pic = "pic",
  Ric = "ric",
  Idnum = "idnum",
  Cid = "cid",
  Nidnr = "nidnr",
  Pan = "pan",
  Aadhaar = "aadhaar",
  Epic = "epic",
  Ptn = "ptn",
  Itin = "itin",
  Tin = "tin",
  Uprc = "uprc",
  Pcode = "pcode",
  Ssi = "ssi",
  Cedula = "cedula",
  Passport = "passport",
  Voterid = "voterid",
  Ntin = "ntin",
  Bn = "bn",
  Fnr = "fnr",
  Mva = "mva",
  CivilId = "civil_id",
  Cnic = "cnic",
  Nric = "nric",
  Fin = "fin",
  Uen = "uen",
  Registrationnumber = "registrationnumber",
  Nic = "nic",
  Personnummer = "personnummer",
  Ahv = "ahv",
  Id = "id",
  Eid = "eid",
  Va = "va",
  Pid = "pid",
  Nrt = "nrt",
  Nipt = "nipt",
  Cbu = "cbu",
  Cuit = "cuit",
  Dni = "dni",
  Businessid = "businessid",
  Vnr = "vnr",
  Abn = "abn",
  Acn = "acn",
  Tfn = "tfn",
  Jmbg = "jmbg",
  Bis = "bis",
  Insz = "insz",
  Nn = "nn",
  Egn = "egn",
  Pnf = "pnf",
  Vat = "vat",
  Cnpj = "cnpj",
  Unp = "unp",
  Gst = "gst",
  Pst = "pst",
  Qst = "qst",
  Ni = "ni",
  Dic = "dic",
  Rc = "rc",
  Uid = "uid",
  Rut = "rut",
  Uscc = "uscc",
  Cpf = "cpf",
  Cpj = "cpj",
  Cr = "cr",
  Stnr = "stnr",
  Svnr = "svnr",
  Ncf = "ncf",
  Rnc = "rnc",
  Nif = "nif",
  Ci = "ci",
  Ik = "ik",
  Kmkr = "kmkr",
  Registrikood = "registrikood",
  Tn = "tn",
  Ruc = "ruc",
  Nit = "nit",
  Alv = "alv",
  Hetu = "hetu",
  Ytunnus = "ytunnus",
  Vn = "vn",
  Utr = "utr",
  Nifp = "nifp",
  Amka = "amka",
  Cui = "cui",
  Nir = "nir",
  Siren = "siren",
  Siret = "siret",
  Tva = "tva",
  Oib = "oib",
  Hkid = "hkid",
  Anum = "anum",
  Kennitala = "kennitala",
  Vsk = "vsk",
  Npwp = "npwp",
  Pps = "pps",
  Gstin = "gstin",
  Idnr = "idnr",
  Hr = "hr",
  Aic = "aic",
  Codicefiscale = "codicefiscale",
  Iva = "iva",
  Peid = "peid",
  Asmens = "asmens",
  Pvm = "pvm",
  Ctps = "ctps",
  Vrn = "vrn",
  Vtk = "vtk",
  Int = "int",
  Tk = "tk",
  Pas = "pas",
  Rne = "rne",
  Rg = "rg",
  Nci = "nci",
  Crnm = "crnm",
  Pis = "pis",
  Insee = "insee",
  Tax = "tax",
  Mpf = "mpf",
  Epfo = "epfo",
  Esi = "esi",
  Pran = "pran",
  Uan = "uan",
  Idk = "idk",
  Bsn = "bsn",
  Mid = "mid",
  Sss = "sss",
  Nie = "nie",
  Nss = "nss",
  Arc = "arc",
  Curp = "curp",
  Imss = "imss",
  Rfc = "rfc",
  Ein = "ein",
  Other = "other",
  Unknown = "unknown",
  UnmappedValue = "unmapped_value",
}
/**
 * The type of the national identity number
 */
export type HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValueOpen =
  OpenEnum<
    typeof HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValue
  >;

export type HrisCreateEmployeeRequestDtoType = {
  sourceValue?:
    | HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberType4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The type of the national identity number
   */
  value?:
    | HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValueOpen
    | null
    | undefined;
};

/**
 * The national identity number
 *
 * @deprecated class: This will be removed in a future release, please migrate away from it as soon as possible.
 */
export type HrisCreateEmployeeRequestDtoNationalIdentityNumber = {
  /**
   * The country code
   */
  country?: HrisCreateEmployeeRequestDtoSchemasCountry | null | undefined;
  type?: HrisCreateEmployeeRequestDtoType | null | undefined;
  value?: string | null | undefined;
};

export type HrisCreateEmployeeRequestDtoSchemasPreferredLanguage4 = {};

export type HrisCreateEmployeeRequestDtoSchemasPreferredLanguageSourceValue =
  | HrisCreateEmployeeRequestDtoSchemasPreferredLanguage4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The ISO639-2 Code of the language
 */
export enum HrisCreateEmployeeRequestDtoSchemasPreferredLanguageValue {
  Aar = "aar",
  Afr = "afr",
  Amh = "amh",
  Ara = "ara",
  Aym = "aym",
  Aze = "aze",
  Bel = "bel",
  Bul = "bul",
  Bis = "bis",
  Ben = "ben",
  Bos = "bos",
  Byn = "byn",
  Cat = "cat",
  Cha = "cha",
  Ces = "ces",
  Deu = "deu",
  Div = "div",
  Dzo = "dzo",
  Ell = "ell",
  Eng = "eng",
  Spa = "spa",
  Est = "est",
  Fas = "fas",
  Fan = "fan",
  Ful = "ful",
  Fin = "fin",
  Fij = "fij",
  Fao = "fao",
  Fra = "fra",
  Gle = "gle",
  Grn = "grn",
  Glv = "glv",
  Heb = "heb",
  Hin = "hin",
  Hrv = "hrv",
  Hat = "hat",
  Hun = "hun",
  Hye = "hye",
  Ind = "ind",
  Isl = "isl",
  Ita = "ita",
  Jpn = "jpn",
  Kat = "kat",
  Kon = "kon",
  Kaz = "kaz",
  Kal = "kal",
  Khm = "khm",
  Kor = "kor",
  Kur = "kur",
  Kir = "kir",
  Lat = "lat",
  Ltz = "ltz",
  Lin = "lin",
  Lao = "lao",
  Lit = "lit",
  Lub = "lub",
  Lav = "lav",
  Mlg = "mlg",
  Mah = "mah",
  Mri = "mri",
  Mkd = "mkd",
  Msa = "msa",
  Mlt = "mlt",
  Mya = "mya",
  Nob = "nob",
  Nep = "nep",
  Nld = "nld",
  Nno = "nno",
  Nor = "nor",
  Nbl = "nbl",
  Nya = "nya",
  Pan = "pan",
  Pol = "pol",
  Pus = "pus",
  Por = "por",
  Rar = "rar",
  Roh = "roh",
  Rup = "rup",
  Ron = "ron",
  Rus = "rus",
  Kin = "kin",
  Sag = "sag",
  Sin = "sin",
  Slk = "slk",
  Smo = "smo",
  Sna = "sna",
  Som = "som",
  Sqi = "sqi",
  Srp = "srp",
  Ssw = "ssw",
  Swe = "swe",
  Swa = "swa",
  Tam = "tam",
  Tgk = "tgk",
  Tha = "tha",
  Tir = "tir",
  Tig = "tig",
  Zho = "zho",
  UnmappedValue = "unmapped_value",
}
/**
 * The ISO639-2 Code of the language
 */
export type HrisCreateEmployeeRequestDtoSchemasPreferredLanguageValueOpen =
  OpenEnum<typeof HrisCreateEmployeeRequestDtoSchemasPreferredLanguageValue>;

/**
 * The employee preferred language
 */
export type HrisCreateEmployeeRequestDtoPreferredLanguage = {
  sourceValue?:
    | HrisCreateEmployeeRequestDtoSchemasPreferredLanguage4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The ISO639-2 Code of the language
   */
  value?:
    | HrisCreateEmployeeRequestDtoSchemasPreferredLanguageValueOpen
    | null
    | undefined;
};

export type HrisCreateEmployeeRequestDtoSchemasWorkLocation4 = {};

export type HrisCreateEmployeeRequestDtoSchemasWorkLocationSourceValue =
  | HrisCreateEmployeeRequestDtoSchemasWorkLocation4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The ISO3166-1 Alpha2 Code of the Country
 */
export enum HrisCreateEmployeeRequestDtoSchemasWorkLocationValue {
  Af = "AF",
  Al = "AL",
  Dz = "DZ",
  As = "AS",
  Ad = "AD",
  Ao = "AO",
  Ai = "AI",
  Aq = "AQ",
  Ag = "AG",
  Ar = "AR",
  Am = "AM",
  Aw = "AW",
  Au = "AU",
  At = "AT",
  Az = "AZ",
  Bs = "BS",
  Bh = "BH",
  Bd = "BD",
  Bb = "BB",
  By = "BY",
  Be = "BE",
  Bz = "BZ",
  Bj = "BJ",
  Bm = "BM",
  Bt = "BT",
  Bo = "BO",
  Bq = "BQ",
  Ba = "BA",
  Bw = "BW",
  Bv = "BV",
  Br = "BR",
  Io = "IO",
  Bn = "BN",
  Bg = "BG",
  Bf = "BF",
  Bi = "BI",
  Kh = "KH",
  Cm = "CM",
  Ca = "CA",
  Cv = "CV",
  Ky = "KY",
  Cf = "CF",
  Td = "TD",
  Cl = "CL",
  Cn = "CN",
  Cx = "CX",
  Cc = "CC",
  Co = "CO",
  Km = "KM",
  Cg = "CG",
  Cd = "CD",
  Ck = "CK",
  Cr = "CR",
  Hr = "HR",
  Cu = "CU",
  Cw = "CW",
  Cy = "CY",
  Cz = "CZ",
  Ci = "CI",
  Dk = "DK",
  Dj = "DJ",
  Dm = "DM",
  Do = "DO",
  Ec = "EC",
  Eg = "EG",
  Sv = "SV",
  Gq = "GQ",
  Er = "ER",
  Ee = "EE",
  Et = "ET",
  Fk = "FK",
  Fo = "FO",
  Fj = "FJ",
  Fi = "FI",
  Fr = "FR",
  Gf = "GF",
  Pf = "PF",
  Tf = "TF",
  Ga = "GA",
  Gm = "GM",
  Ge = "GE",
  De = "DE",
  Gh = "GH",
  Gi = "GI",
  Gr = "GR",
  Gl = "GL",
  Gd = "GD",
  Gp = "GP",
  Gu = "GU",
  Gt = "GT",
  Gg = "GG",
  Gn = "GN",
  Gw = "GW",
  Gy = "GY",
  Ht = "HT",
  Hm = "HM",
  Va = "VA",
  Hn = "HN",
  Hk = "HK",
  Hu = "HU",
  Is = "IS",
  In = "IN",
  Id = "ID",
  Ir = "IR",
  Iq = "IQ",
  Ie = "IE",
  Im = "IM",
  Il = "IL",
  It = "IT",
  Jm = "JM",
  Jp = "JP",
  Je = "JE",
  Jo = "JO",
  Kz = "KZ",
  Ke = "KE",
  Ki = "KI",
  Kp = "KP",
  Kr = "KR",
  Kw = "KW",
  Kg = "KG",
  La = "LA",
  Lv = "LV",
  Lb = "LB",
  Ls = "LS",
  Lr = "LR",
  Ly = "LY",
  Li = "LI",
  Lt = "LT",
  Lu = "LU",
  Mo = "MO",
  Mk = "MK",
  Mg = "MG",
  Mw = "MW",
  My = "MY",
  Mv = "MV",
  Ml = "ML",
  Mt = "MT",
  Mh = "MH",
  Mq = "MQ",
  Mr = "MR",
  Mu = "MU",
  Yt = "YT",
  Mx = "MX",
  Fm = "FM",
  Md = "MD",
  Mc = "MC",
  Mn = "MN",
  Me = "ME",
  Ms = "MS",
  Ma = "MA",
  Mz = "MZ",
  Mm = "MM",
  Na = "NA",
  Nr = "NR",
  Np = "NP",
  Nl = "NL",
  Nc = "NC",
  Nz = "NZ",
  Ni = "NI",
  Ne = "NE",
  Ng = "NG",
  Nu = "NU",
  Nf = "NF",
  Mp = "MP",
  No = "NO",
  Om = "OM",
  Pk = "PK",
  Pw = "PW",
  Ps = "PS",
  Pa = "PA",
  Pg = "PG",
  Py = "PY",
  Pe = "PE",
  Ph = "PH",
  Pn = "PN",
  Pl = "PL",
  Pt = "PT",
  Pr = "PR",
  Qa = "QA",
  Ro = "RO",
  Ru = "RU",
  Rw = "RW",
  Re = "RE",
  Bl = "BL",
  Sh = "SH",
  Kn = "KN",
  Lc = "LC",
  Mf = "MF",
  Pm = "PM",
  Vc = "VC",
  Ws = "WS",
  Sm = "SM",
  St = "ST",
  Sa = "SA",
  Sn = "SN",
  Rs = "RS",
  Sc = "SC",
  Sl = "SL",
  Sg = "SG",
  Sx = "SX",
  Sk = "SK",
  Si = "SI",
  Sb = "SB",
  So = "SO",
  Za = "ZA",
  Gs = "GS",
  Ss = "SS",
  Es = "ES",
  Lk = "LK",
  Sd = "SD",
  Sr = "SR",
  Sj = "SJ",
  Sz = "SZ",
  Se = "SE",
  Ch = "CH",
  Sy = "SY",
  Tw = "TW",
  Tj = "TJ",
  Tz = "TZ",
  Th = "TH",
  Tl = "TL",
  Tg = "TG",
  Tk = "TK",
  To = "TO",
  Tt = "TT",
  Tn = "TN",
  Tr = "TR",
  Tm = "TM",
  Tc = "TC",
  Tv = "TV",
  Ug = "UG",
  Ua = "UA",
  Ae = "AE",
  Gb = "GB",
  Us = "US",
  Um = "UM",
  Uy = "UY",
  Uz = "UZ",
  Vu = "VU",
  Ve = "VE",
  Vn = "VN",
  Vg = "VG",
  Vi = "VI",
  Wf = "WF",
  Eh = "EH",
  Ye = "YE",
  Zm = "ZM",
  Zw = "ZW",
  UnmappedValue = "unmapped_value",
}
/**
 * The ISO3166-1 Alpha2 Code of the Country
 */
export type HrisCreateEmployeeRequestDtoSchemasWorkLocationValueOpen = OpenEnum<
  typeof HrisCreateEmployeeRequestDtoSchemasWorkLocationValue
>;

/**
 * The country code
 */
export type HrisCreateEmployeeRequestDtoSchemasWorkLocationCountry = {
  sourceValue?:
    | HrisCreateEmployeeRequestDtoSchemasWorkLocation4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The ISO3166-1 Alpha2 Code of the Country
   */
  value?:
    | HrisCreateEmployeeRequestDtoSchemasWorkLocationValueOpen
    | null
    | undefined;
};

export type HrisCreateEmployeeRequestDtoSchemasWorkLocationState4 = {};

export type HrisCreateEmployeeRequestDtoSchemasWorkLocationStateSourceValue =
  | HrisCreateEmployeeRequestDtoSchemasWorkLocationState4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The ISO3166-2 sub division where the location is situated
 */
export type HrisCreateEmployeeRequestDtoState = {
  sourceValue?:
    | HrisCreateEmployeeRequestDtoSchemasWorkLocationState4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * state (ISO3166-2 Sub Division Code) - value must be a valid enum value
   */
  value?: string | null | undefined;
};

/**
 * The employee work location
 */
export type HrisCreateEmployeeRequestDtoWorkLocation = {
  /**
   * The city where the location is situated
   */
  city?: string | null | undefined;
  /**
   * The country code
   */
  country?:
    | HrisCreateEmployeeRequestDtoSchemasWorkLocationCountry
    | null
    | undefined;
  /**
   * Unique identifier
   */
  id?: string | null | undefined;
  /**
   * The name of the location
   */
  name?: string | null | undefined;
  /**
   * Value to pass through to the provider
   */
  passthrough?: { [k: string]: any } | null | undefined;
  /**
   * The phone number of the location
   */
  phoneNumber?: string | null | undefined;
  /**
   * The ISO3166-2 sub division where the location is situated
   */
  state?: HrisCreateEmployeeRequestDtoState | null | undefined;
  /**
   * The first line of the address
   */
  street1?: string | null | undefined;
  /**
   * The second line of the address
   */
  street2?: string | null | undefined;
  /**
   * The ZIP code/Postal code of the location
   */
  zipCode?: string | null | undefined;
};

export type HrisCreateEmployeeRequestDto = {
  /**
   * The employee avatar
   */
  avatar?: HrisCreateEmployeeRequestDtoAvatar | null | undefined;
  /**
   * The employee avatar Url
   */
  avatarUrl?: string | null | undefined;
  /**
   * Current benefits of the employee
   */
  benefits?: Array<CreateHRISBenefit> | null | undefined;
  /**
   * The employee birthday
   */
  birthday?: Date | null | undefined;
  /**
   * The citizenships of the Employee
   */
  citizenships?: Array<CountryCodeEnum> | null | undefined;
  /**
   * The employee company id
   */
  companyId?: string | null | undefined;
  /**
   * The employee company name
   *
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  companyName?: string | null | undefined;
  /**
   * The employee cost centers
   */
  costCenters?: Array<CreateCostCenterApiModel> | null | undefined;
  /**
   * The employee custom fields
   */
  customFields?: Array<CustomFields> | null | undefined;
  /**
   * The employee date_of_birth
   */
  dateOfBirth?: Date | null | undefined;
  /**
   * The employee department
   */
  department?: string | null | undefined;
  /**
   * The employee department id
   */
  departmentId?: string | null | undefined;
  /**
   * The employee display name
   */
  displayName?: string | null | undefined;
  /**
   * The assigned employee number
   */
  employeeNumber?: string | null | undefined;
  /**
   * The employee employment
   */
  employment?: HrisCreateEmployeeRequestDtoEmployment | null | undefined;
  /**
   * The employment work schedule type (e.g., full-time, part-time)
   */
  employmentContractType?:
    | HrisCreateEmployeeRequestDtoEmploymentContractType
    | null
    | undefined;
  /**
   * The employee employment status
   */
  employmentStatus?:
    | HrisCreateEmployeeRequestDtoEmploymentStatus
    | null
    | undefined;
  /**
   * The employee employment type
   */
  employmentType?:
    | HrisCreateEmployeeRequestDtoEmploymentType
    | null
    | undefined;
  /**
   * The employee employments
   *
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  employments?: Array<CreateEmploymentApiModel> | null | undefined;
  /**
   * The employee ethnicity
   */
  ethnicity?: HrisCreateEmployeeRequestDtoEthnicity | null | undefined;
  /**
   * The employee first name
   */
  firstName?: string | null | undefined;
  /**
   * The employee gender
   */
  gender?: HrisCreateEmployeeRequestDtoGender | null | undefined;
  /**
   * The employee hire date
   */
  hireDate?: Date | null | undefined;
  /**
   * The employee home location
   */
  homeLocation?: HrisCreateEmployeeRequestDtoHomeLocation | null | undefined;
  /**
   * The employee job id
   */
  jobId?: string | null | undefined;
  /**
   * The employee job title
   */
  jobTitle?: string | null | undefined;
  /**
   * The employee last name
   */
  lastName?: string | null | undefined;
  /**
   * The employee manager ID
   */
  managerId?: string | null | undefined;
  /**
   * The employee marital status
   */
  maritalStatus?: HrisCreateEmployeeRequestDtoMaritalStatus | null | undefined;
  /**
   * The employee name
   */
  name?: string | null | undefined;
  /**
   * The national identity number
   *
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  nationalIdentityNumber?:
    | HrisCreateEmployeeRequestDtoNationalIdentityNumber
    | null
    | undefined;
  /**
   * The national identity numbers
   */
  nationalIdentityNumbers?:
    | Array<NationalIdentityNumberApiModel>
    | null
    | undefined;
  /**
   * Value to pass through to the provider
   */
  passthrough?: { [k: string]: any } | null | undefined;
  /**
   * The employee personal email
   */
  personalEmail?: string | null | undefined;
  /**
   * The employee personal phone number
   */
  personalPhoneNumber?: string | null | undefined;
  /**
   * The employee preferred language
   */
  preferredLanguage?:
    | HrisCreateEmployeeRequestDtoPreferredLanguage
    | null
    | undefined;
  /**
   * The employee start date
   */
  startDate?: Date | null | undefined;
  /**
   * The employee team id
   */
  teamId?: string | null | undefined;
  /**
   * The employee termination date
   */
  terminationDate?: Date | null | undefined;
  /**
   * The employee work email
   */
  workEmail?: string | null | undefined;
  /**
   * The employee work location
   */
  workLocation?: HrisCreateEmployeeRequestDtoWorkLocation | null | undefined;
  /**
   * The employee work phone number
   */
  workPhoneNumber?: string | null | undefined;
};

/** @internal */
export const HrisCreateEmployeeRequestDtoAvatar$inboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoAvatar,
  z.ZodTypeDef,
  unknown
> = z.object({
  base64: z.nullable(z.string()).optional(),
  url: z.nullable(z.string()).optional(),
});

/** @internal */
export type HrisCreateEmployeeRequestDtoAvatar$Outbound = {
  base64?: string | null | undefined;
  url?: string | null | undefined;
};

/** @internal */
export const HrisCreateEmployeeRequestDtoAvatar$outboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoAvatar$Outbound,
  z.ZodTypeDef,
  HrisCreateEmployeeRequestDtoAvatar
> = z.object({
  base64: z.nullable(z.string()).optional(),
  url: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoAvatar$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoAvatar$inboundSchema` instead. */
  export const inboundSchema = HrisCreateEmployeeRequestDtoAvatar$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoAvatar$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoAvatar$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoAvatar$Outbound` instead. */
  export type Outbound = HrisCreateEmployeeRequestDtoAvatar$Outbound;
}

export function hrisCreateEmployeeRequestDtoAvatarToJSON(
  hrisCreateEmployeeRequestDtoAvatar: HrisCreateEmployeeRequestDtoAvatar,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoAvatar$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoAvatar,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoAvatarFromJSON(
  jsonString: string,
): SafeParseResult<HrisCreateEmployeeRequestDtoAvatar, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoAvatar$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoAvatar' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$Outbound =
  {};

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4ToJSON(
  hrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4:
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$outboundSchema
      .parse(
        hrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4,
      ),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$inboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue$Outbound =
  | HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue
  > = z.union([
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$outboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValueToJSON(
  hrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue:
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue$outboundSchema
      .parse(
        hrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue,
      ),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValue$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(
        HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValue,
      ),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValue$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValueOpen,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValueOpen
  > = z.union([
    z.nativeEnum(
      HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValue,
    ),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValue$outboundSchema;
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentContractType$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentContractType,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source_value: z.nullable(
      z.union([
        z.lazy(() =>
          HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$inboundSchema
        ),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValue$inboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "source_value": "sourceValue",
    });
  });

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasEmploymentContractType$Outbound =
  {
    source_value?:
      | HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$Outbound
      | string
      | number
      | boolean
      | Array<any>
      | null
      | undefined;
    value?: string | null | undefined;
  };

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentContractType$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentContractType$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasEmploymentContractType
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.lazy(() =>
          HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$outboundSchema
        ),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValue$outboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasEmploymentContractType$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentContractType$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentContractType$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentContractType$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentContractType$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentContractType$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasEmploymentContractType$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasEmploymentContractTypeToJSON(
  hrisCreateEmployeeRequestDtoSchemasEmploymentContractType:
    HrisCreateEmployeeRequestDtoSchemasEmploymentContractType,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasEmploymentContractType$outboundSchema
      .parse(hrisCreateEmployeeRequestDtoSchemasEmploymentContractType),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasEmploymentContractTypeFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasEmploymentContractType,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasEmploymentContractType$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasEmploymentContractType' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentType4$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentType4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentType4$Outbound =
  {};

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentType4$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentType4$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentType4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentType4$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentType4$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentType4$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentType4$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentType4$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentType4$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentType4$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentType4ToJSON(
  hrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentType4:
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentType4,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentType4$outboundSchema
      .parse(hrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentType4),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentType4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentType4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentType4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentType4' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentType4$inboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue$Outbound =
  | HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentType4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue
  > = z.union([
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentType4$outboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValueToJSON(
  hrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue:
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue$outboundSchema
      .parse(
        hrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue,
      ),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValue$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(
        HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValue,
      ),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValue$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValueOpen,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValueOpen
  > = z.union([
    z.nativeEnum(
      HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValue,
    ),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValue$outboundSchema;
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentType$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentType,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source_value: z.nullable(
      z.union([
        z.lazy(() =>
          HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentType4$inboundSchema
        ),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValue$inboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "source_value": "sourceValue",
    });
  });

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasEmploymentType$Outbound = {
  source_value?:
    | HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentType4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentType$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentType$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasEmploymentType
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.lazy(() =>
          HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentType4$outboundSchema
        ),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      HrisCreateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValue$outboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasEmploymentType$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentType$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentType$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentType$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentType$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentType$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasEmploymentType$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasEmploymentTypeToJSON(
  hrisCreateEmployeeRequestDtoSchemasEmploymentType:
    HrisCreateEmployeeRequestDtoSchemasEmploymentType,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasEmploymentType$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoSchemasEmploymentType,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasEmploymentTypeFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasEmploymentType,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasEmploymentType$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasEmploymentType' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmployment4$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmployment4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasEmployment4$Outbound = {};

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmployment4$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmployment4$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasEmployment4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasEmployment4$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmployment4$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmployment4$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmployment4$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmployment4$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmployment4$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasEmployment4$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasEmployment4ToJSON(
  hrisCreateEmployeeRequestDtoSchemasEmployment4:
    HrisCreateEmployeeRequestDtoSchemasEmployment4,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasEmployment4$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoSchemasEmployment4,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasEmployment4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasEmployment4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasEmployment4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasEmployment4' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentSourceValue$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => HrisCreateEmployeeRequestDtoSchemasEmployment4$inboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasEmploymentSourceValue$Outbound =
  | HrisCreateEmployeeRequestDtoSchemasEmployment4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentSourceValue$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentSourceValue$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasEmploymentSourceValue
  > = z.union([
    z.lazy(() => HrisCreateEmployeeRequestDtoSchemasEmployment4$outboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasEmploymentSourceValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentSourceValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentSourceValue$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentSourceValue$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasEmploymentSourceValue$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasEmploymentSourceValueToJSON(
  hrisCreateEmployeeRequestDtoSchemasEmploymentSourceValue:
    HrisCreateEmployeeRequestDtoSchemasEmploymentSourceValue,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasEmploymentSourceValue$outboundSchema
      .parse(hrisCreateEmployeeRequestDtoSchemasEmploymentSourceValue),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasEmploymentSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasEmploymentSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasEmploymentSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasEmploymentSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentValue$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(HrisCreateEmployeeRequestDtoSchemasEmploymentValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentValue$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentValueOpen,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasEmploymentValueOpen
  > = z.union([
    z.nativeEnum(HrisCreateEmployeeRequestDtoSchemasEmploymentValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasEmploymentValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentValue$outboundSchema;
}

/** @internal */
export const HrisCreateEmployeeRequestDtoPayFrequency$inboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoPayFrequency,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() =>
        HrisCreateEmployeeRequestDtoSchemasEmployment4$inboundSchema
      ),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisCreateEmployeeRequestDtoSchemasEmploymentValue$inboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type HrisCreateEmployeeRequestDtoPayFrequency$Outbound = {
  source_value?:
    | HrisCreateEmployeeRequestDtoSchemasEmployment4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisCreateEmployeeRequestDtoPayFrequency$outboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoPayFrequency$Outbound,
  z.ZodTypeDef,
  HrisCreateEmployeeRequestDtoPayFrequency
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() =>
        HrisCreateEmployeeRequestDtoSchemasEmployment4$outboundSchema
      ),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisCreateEmployeeRequestDtoSchemasEmploymentValue$outboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoPayFrequency$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoPayFrequency$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoPayFrequency$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoPayFrequency$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoPayFrequency$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoPayFrequency$Outbound` instead. */
  export type Outbound = HrisCreateEmployeeRequestDtoPayFrequency$Outbound;
}

export function hrisCreateEmployeeRequestDtoPayFrequencyToJSON(
  hrisCreateEmployeeRequestDtoPayFrequency:
    HrisCreateEmployeeRequestDtoPayFrequency,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoPayFrequency$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoPayFrequency,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoPayFrequencyFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoPayFrequency,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoPayFrequency$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmployeeRequestDtoPayFrequency' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriod4$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriod4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriod4$Outbound =
  {};

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriod4$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriod4$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriod4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriod4$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriod4$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriod4$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriod4$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriod4$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriod4$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriod4$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriod4ToJSON(
  hrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriod4:
    HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriod4,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriod4$outboundSchema
      .parse(hrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriod4),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriod4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriod4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriod4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriod4' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriod4$inboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue$Outbound =
  | HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriod4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue
  > = z.union([
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriod4$outboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValueToJSON(
  hrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue:
    HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue$outboundSchema
      .parse(hrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodValue$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodValue$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodValueOpen,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodValueOpen
  > = z.union([
    z.nativeEnum(HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodValue$outboundSchema;
}

/** @internal */
export const HrisCreateEmployeeRequestDtoPayPeriod$inboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoPayPeriod,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() =>
        HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriod4$inboundSchema
      ),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodValue$inboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type HrisCreateEmployeeRequestDtoPayPeriod$Outbound = {
  source_value?:
    | HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriod4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisCreateEmployeeRequestDtoPayPeriod$outboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoPayPeriod$Outbound,
  z.ZodTypeDef,
  HrisCreateEmployeeRequestDtoPayPeriod
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() =>
        HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriod4$outboundSchema
      ),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisCreateEmployeeRequestDtoSchemasEmploymentPayPeriodValue$outboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoPayPeriod$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoPayPeriod$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoPayPeriod$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoPayPeriod$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoPayPeriod$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoPayPeriod$Outbound` instead. */
  export type Outbound = HrisCreateEmployeeRequestDtoPayPeriod$Outbound;
}

export function hrisCreateEmployeeRequestDtoPayPeriodToJSON(
  hrisCreateEmployeeRequestDtoPayPeriod: HrisCreateEmployeeRequestDtoPayPeriod,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoPayPeriod$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoPayPeriod,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoPayPeriodFromJSON(
  jsonString: string,
): SafeParseResult<HrisCreateEmployeeRequestDtoPayPeriod, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoPayPeriod$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoPayPeriod' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTime4$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTime4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTime4$Outbound =
  {};

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTime4$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTime4$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTime4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTime4$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTime4$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTime4$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTime4$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTime4$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTime4$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTime4$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasEmploymentWorkTime4ToJSON(
  hrisCreateEmployeeRequestDtoSchemasEmploymentWorkTime4:
    HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTime4,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTime4$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoSchemasEmploymentWorkTime4,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasEmploymentWorkTime4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTime4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTime4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTime4' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTime4$inboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue$Outbound =
  | HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTime4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue
  > = z.union([
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTime4$outboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValueToJSON(
  hrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue:
    HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue$outboundSchema
      .parse(hrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeValue$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeValue$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeValueOpen,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeValueOpen
  > = z.union([
    z.nativeEnum(HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeValue$outboundSchema;
}

/** @internal */
export const HrisCreateEmployeeRequestDtoDurationUnit$inboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoDurationUnit,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() =>
        HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTime4$inboundSchema
      ),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeValue$inboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type HrisCreateEmployeeRequestDtoDurationUnit$Outbound = {
  source_value?:
    | HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTime4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisCreateEmployeeRequestDtoDurationUnit$outboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoDurationUnit$Outbound,
  z.ZodTypeDef,
  HrisCreateEmployeeRequestDtoDurationUnit
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() =>
        HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTime4$outboundSchema
      ),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisCreateEmployeeRequestDtoSchemasEmploymentWorkTimeValue$outboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoDurationUnit$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoDurationUnit$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoDurationUnit$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoDurationUnit$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoDurationUnit$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoDurationUnit$Outbound` instead. */
  export type Outbound = HrisCreateEmployeeRequestDtoDurationUnit$Outbound;
}

export function hrisCreateEmployeeRequestDtoDurationUnitToJSON(
  hrisCreateEmployeeRequestDtoDurationUnit:
    HrisCreateEmployeeRequestDtoDurationUnit,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoDurationUnit$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoDurationUnit,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoDurationUnitFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoDurationUnit,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoDurationUnit$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmployeeRequestDtoDurationUnit' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoWorkTime$inboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoWorkTime,
  z.ZodTypeDef,
  unknown
> = z.object({
  duration: z.nullable(z.string()).optional(),
  duration_unit: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoDurationUnit$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "duration_unit": "durationUnit",
  });
});

/** @internal */
export type HrisCreateEmployeeRequestDtoWorkTime$Outbound = {
  duration?: string | null | undefined;
  duration_unit?:
    | HrisCreateEmployeeRequestDtoDurationUnit$Outbound
    | null
    | undefined;
};

/** @internal */
export const HrisCreateEmployeeRequestDtoWorkTime$outboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoWorkTime$Outbound,
  z.ZodTypeDef,
  HrisCreateEmployeeRequestDtoWorkTime
> = z.object({
  duration: z.nullable(z.string()).optional(),
  durationUnit: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoDurationUnit$outboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    durationUnit: "duration_unit",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoWorkTime$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoWorkTime$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoWorkTime$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoWorkTime$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoWorkTime$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoWorkTime$Outbound` instead. */
  export type Outbound = HrisCreateEmployeeRequestDtoWorkTime$Outbound;
}

export function hrisCreateEmployeeRequestDtoWorkTimeToJSON(
  hrisCreateEmployeeRequestDtoWorkTime: HrisCreateEmployeeRequestDtoWorkTime,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoWorkTime$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoWorkTime,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoWorkTimeFromJSON(
  jsonString: string,
): SafeParseResult<HrisCreateEmployeeRequestDtoWorkTime, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoWorkTime$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoWorkTime' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoEmployment$inboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoEmployment,
  z.ZodTypeDef,
  unknown
> = z.object({
  effective_date: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  employment_contract_type: z.nullable(
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasEmploymentContractType$inboundSchema
    ),
  ).optional(),
  employment_type: z.nullable(
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasEmploymentType$inboundSchema
    ),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  job_title: z.nullable(z.string()).optional(),
  pay_currency: z.nullable(z.string()).optional(),
  pay_frequency: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoPayFrequency$inboundSchema),
  ).optional(),
  pay_period: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoPayPeriod$inboundSchema),
  ).optional(),
  pay_rate: z.nullable(z.string()).optional(),
  unified_custom_fields: z.nullable(z.record(z.any())).optional(),
  work_time: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoWorkTime$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "effective_date": "effectiveDate",
    "employment_contract_type": "employmentContractType",
    "employment_type": "employmentType",
    "job_title": "jobTitle",
    "pay_currency": "payCurrency",
    "pay_frequency": "payFrequency",
    "pay_period": "payPeriod",
    "pay_rate": "payRate",
    "unified_custom_fields": "unifiedCustomFields",
    "work_time": "workTime",
  });
});

/** @internal */
export type HrisCreateEmployeeRequestDtoEmployment$Outbound = {
  effective_date?: string | null | undefined;
  employment_contract_type?:
    | HrisCreateEmployeeRequestDtoSchemasEmploymentContractType$Outbound
    | null
    | undefined;
  employment_type?:
    | HrisCreateEmployeeRequestDtoSchemasEmploymentType$Outbound
    | null
    | undefined;
  id?: string | null | undefined;
  job_title?: string | null | undefined;
  pay_currency?: string | null | undefined;
  pay_frequency?:
    | HrisCreateEmployeeRequestDtoPayFrequency$Outbound
    | null
    | undefined;
  pay_period?:
    | HrisCreateEmployeeRequestDtoPayPeriod$Outbound
    | null
    | undefined;
  pay_rate?: string | null | undefined;
  unified_custom_fields?: { [k: string]: any } | null | undefined;
  work_time?: HrisCreateEmployeeRequestDtoWorkTime$Outbound | null | undefined;
};

/** @internal */
export const HrisCreateEmployeeRequestDtoEmployment$outboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoEmployment$Outbound,
  z.ZodTypeDef,
  HrisCreateEmployeeRequestDtoEmployment
> = z.object({
  effectiveDate: z.nullable(z.date().transform(v => v.toISOString()))
    .optional(),
  employmentContractType: z.nullable(
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasEmploymentContractType$outboundSchema
    ),
  ).optional(),
  employmentType: z.nullable(
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasEmploymentType$outboundSchema
    ),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  jobTitle: z.nullable(z.string()).optional(),
  payCurrency: z.nullable(z.string()).optional(),
  payFrequency: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoPayFrequency$outboundSchema),
  ).optional(),
  payPeriod: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoPayPeriod$outboundSchema),
  ).optional(),
  payRate: z.nullable(z.string()).optional(),
  unifiedCustomFields: z.nullable(z.record(z.any())).optional(),
  workTime: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoWorkTime$outboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    effectiveDate: "effective_date",
    employmentContractType: "employment_contract_type",
    employmentType: "employment_type",
    jobTitle: "job_title",
    payCurrency: "pay_currency",
    payFrequency: "pay_frequency",
    payPeriod: "pay_period",
    payRate: "pay_rate",
    unifiedCustomFields: "unified_custom_fields",
    workTime: "work_time",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoEmployment$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoEmployment$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoEmployment$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoEmployment$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoEmployment$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoEmployment$Outbound` instead. */
  export type Outbound = HrisCreateEmployeeRequestDtoEmployment$Outbound;
}

export function hrisCreateEmployeeRequestDtoEmploymentToJSON(
  hrisCreateEmployeeRequestDtoEmployment:
    HrisCreateEmployeeRequestDtoEmployment,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoEmployment$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoEmployment,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoEmploymentFromJSON(
  jsonString: string,
): SafeParseResult<HrisCreateEmployeeRequestDtoEmployment, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoEmployment$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoEmployment' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDto4$inboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDto4,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type HrisCreateEmployeeRequestDto4$Outbound = {};

/** @internal */
export const HrisCreateEmployeeRequestDto4$outboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDto4$Outbound,
  z.ZodTypeDef,
  HrisCreateEmployeeRequestDto4
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDto4$ {
  /** @deprecated use `HrisCreateEmployeeRequestDto4$inboundSchema` instead. */
  export const inboundSchema = HrisCreateEmployeeRequestDto4$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDto4$outboundSchema` instead. */
  export const outboundSchema = HrisCreateEmployeeRequestDto4$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDto4$Outbound` instead. */
  export type Outbound = HrisCreateEmployeeRequestDto4$Outbound;
}

export function hrisCreateEmployeeRequestDto4ToJSON(
  hrisCreateEmployeeRequestDto4: HrisCreateEmployeeRequestDto4,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDto4$outboundSchema.parse(
      hrisCreateEmployeeRequestDto4,
    ),
  );
}

export function hrisCreateEmployeeRequestDto4FromJSON(
  jsonString: string,
): SafeParseResult<HrisCreateEmployeeRequestDto4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HrisCreateEmployeeRequestDto4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDto4' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSourceValue$inboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoSourceValue,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => HrisCreateEmployeeRequestDto4$inboundSchema),
  z.string(),
  z.number(),
  z.boolean(),
  z.array(z.any()),
]);

/** @internal */
export type HrisCreateEmployeeRequestDtoSourceValue$Outbound =
  | HrisCreateEmployeeRequestDto4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const HrisCreateEmployeeRequestDtoSourceValue$outboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoSourceValue$Outbound,
  z.ZodTypeDef,
  HrisCreateEmployeeRequestDtoSourceValue
> = z.union([
  z.lazy(() => HrisCreateEmployeeRequestDto4$outboundSchema),
  z.string(),
  z.number(),
  z.boolean(),
  z.array(z.any()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSourceValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSourceValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSourceValue$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSourceValue$Outbound` instead. */
  export type Outbound = HrisCreateEmployeeRequestDtoSourceValue$Outbound;
}

export function hrisCreateEmployeeRequestDtoSourceValueToJSON(
  hrisCreateEmployeeRequestDtoSourceValue:
    HrisCreateEmployeeRequestDtoSourceValue,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSourceValue$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoSourceValue,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSourceValue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoValue$inboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoValueOpen,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(HrisCreateEmployeeRequestDtoValue),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const HrisCreateEmployeeRequestDtoValue$outboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoValueOpen,
  z.ZodTypeDef,
  HrisCreateEmployeeRequestDtoValueOpen
> = z.union([
  z.nativeEnum(HrisCreateEmployeeRequestDtoValue),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoValue$inboundSchema` instead. */
  export const inboundSchema = HrisCreateEmployeeRequestDtoValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoValue$outboundSchema;
}

/** @internal */
export const HrisCreateEmployeeRequestDtoEmploymentContractType$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoEmploymentContractType,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source_value: z.nullable(
      z.union([
        z.lazy(() => HrisCreateEmployeeRequestDto4$inboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(HrisCreateEmployeeRequestDtoValue$inboundSchema)
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      "source_value": "sourceValue",
    });
  });

/** @internal */
export type HrisCreateEmployeeRequestDtoEmploymentContractType$Outbound = {
  source_value?:
    | HrisCreateEmployeeRequestDto4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisCreateEmployeeRequestDtoEmploymentContractType$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoEmploymentContractType$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoEmploymentContractType
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.lazy(() => HrisCreateEmployeeRequestDto4$outboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(HrisCreateEmployeeRequestDtoValue$outboundSchema)
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoEmploymentContractType$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoEmploymentContractType$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoEmploymentContractType$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoEmploymentContractType$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoEmploymentContractType$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoEmploymentContractType$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoEmploymentContractType$Outbound;
}

export function hrisCreateEmployeeRequestDtoEmploymentContractTypeToJSON(
  hrisCreateEmployeeRequestDtoEmploymentContractType:
    HrisCreateEmployeeRequestDtoEmploymentContractType,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoEmploymentContractType$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoEmploymentContractType,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoEmploymentContractTypeFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoEmploymentContractType,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoEmploymentContractType$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmployeeRequestDtoEmploymentContractType' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemas4$inboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoSchemas4,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemas4$Outbound = {};

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemas4$outboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoSchemas4$Outbound,
  z.ZodTypeDef,
  HrisCreateEmployeeRequestDtoSchemas4
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemas4$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemas4$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemas4$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemas4$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemas4$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemas4$Outbound` instead. */
  export type Outbound = HrisCreateEmployeeRequestDtoSchemas4$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemas4ToJSON(
  hrisCreateEmployeeRequestDtoSchemas4: HrisCreateEmployeeRequestDtoSchemas4,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemas4$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoSchemas4,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoSchemas4FromJSON(
  jsonString: string,
): SafeParseResult<HrisCreateEmployeeRequestDtoSchemas4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemas4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemas4' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasSourceValue$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => HrisCreateEmployeeRequestDtoSchemas4$inboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasSourceValue$Outbound =
  | HrisCreateEmployeeRequestDtoSchemas4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasSourceValue$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasSourceValue$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasSourceValue
  > = z.union([
    z.lazy(() => HrisCreateEmployeeRequestDtoSchemas4$outboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasSourceValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasSourceValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasSourceValue$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasSourceValue$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasSourceValue$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasSourceValueToJSON(
  hrisCreateEmployeeRequestDtoSchemasSourceValue:
    HrisCreateEmployeeRequestDtoSchemasSourceValue,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasSourceValue$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoSchemasSourceValue,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasSourceValue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasValue$inboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoSchemasValueOpen,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(HrisCreateEmployeeRequestDtoSchemasValue),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasValue$outboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoSchemasValueOpen,
  z.ZodTypeDef,
  HrisCreateEmployeeRequestDtoSchemasValueOpen
> = z.union([
  z.nativeEnum(HrisCreateEmployeeRequestDtoSchemasValue),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasValue$outboundSchema;
}

/** @internal */
export const HrisCreateEmployeeRequestDtoEmploymentStatus$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoEmploymentStatus,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source_value: z.nullable(
      z.union([
        z.lazy(() => HrisCreateEmployeeRequestDtoSchemas4$inboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(HrisCreateEmployeeRequestDtoSchemasValue$inboundSchema)
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      "source_value": "sourceValue",
    });
  });

/** @internal */
export type HrisCreateEmployeeRequestDtoEmploymentStatus$Outbound = {
  source_value?:
    | HrisCreateEmployeeRequestDtoSchemas4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisCreateEmployeeRequestDtoEmploymentStatus$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoEmploymentStatus$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoEmploymentStatus
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.lazy(() => HrisCreateEmployeeRequestDtoSchemas4$outboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(HrisCreateEmployeeRequestDtoSchemasValue$outboundSchema)
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoEmploymentStatus$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoEmploymentStatus$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoEmploymentStatus$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoEmploymentStatus$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoEmploymentStatus$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoEmploymentStatus$Outbound` instead. */
  export type Outbound = HrisCreateEmployeeRequestDtoEmploymentStatus$Outbound;
}

export function hrisCreateEmployeeRequestDtoEmploymentStatusToJSON(
  hrisCreateEmployeeRequestDtoEmploymentStatus:
    HrisCreateEmployeeRequestDtoEmploymentStatus,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoEmploymentStatus$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoEmploymentStatus,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoEmploymentStatusFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoEmploymentStatus,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoEmploymentStatus$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmployeeRequestDtoEmploymentStatus' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentType4$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentType4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasEmploymentType4$Outbound = {};

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentType4$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentType4$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasEmploymentType4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasEmploymentType4$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentType4$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentType4$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentType4$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentType4$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentType4$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasEmploymentType4$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasEmploymentType4ToJSON(
  hrisCreateEmployeeRequestDtoSchemasEmploymentType4:
    HrisCreateEmployeeRequestDtoSchemasEmploymentType4,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasEmploymentType4$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoSchemasEmploymentType4,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasEmploymentType4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasEmploymentType4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasEmploymentType4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasEmploymentType4' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentTypeSourceValue$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentTypeSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasEmploymentType4$inboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasEmploymentTypeSourceValue$Outbound =
  | HrisCreateEmployeeRequestDtoSchemasEmploymentType4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentTypeSourceValue$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentTypeSourceValue$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasEmploymentTypeSourceValue
  > = z.union([
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasEmploymentType4$outboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasEmploymentTypeSourceValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentTypeSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentTypeSourceValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentTypeSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentTypeSourceValue$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentTypeSourceValue$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasEmploymentTypeSourceValue$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasEmploymentTypeSourceValueToJSON(
  hrisCreateEmployeeRequestDtoSchemasEmploymentTypeSourceValue:
    HrisCreateEmployeeRequestDtoSchemasEmploymentTypeSourceValue,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasEmploymentTypeSourceValue$outboundSchema
      .parse(hrisCreateEmployeeRequestDtoSchemasEmploymentTypeSourceValue),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasEmploymentTypeSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasEmploymentTypeSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasEmploymentTypeSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasEmploymentTypeSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentTypeValue$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentTypeValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(HrisCreateEmployeeRequestDtoSchemasEmploymentTypeValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEmploymentTypeValue$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEmploymentTypeValueOpen,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasEmploymentTypeValueOpen
  > = z.union([
    z.nativeEnum(HrisCreateEmployeeRequestDtoSchemasEmploymentTypeValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasEmploymentTypeValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentTypeValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentTypeValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEmploymentTypeValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEmploymentTypeValue$outboundSchema;
}

/** @internal */
export const HrisCreateEmployeeRequestDtoEmploymentType$inboundSchema:
  z.ZodType<HrisCreateEmployeeRequestDtoEmploymentType, z.ZodTypeDef, unknown> =
    z.object({
      source_value: z.nullable(
        z.union([
          z.lazy(() =>
            HrisCreateEmployeeRequestDtoSchemasEmploymentType4$inboundSchema
          ),
          z.string(),
          z.number(),
          z.boolean(),
          z.array(z.any()),
        ]),
      ).optional(),
      value: z.nullable(
        HrisCreateEmployeeRequestDtoSchemasEmploymentTypeValue$inboundSchema,
      ).optional(),
    }).transform((v) => {
      return remap$(v, {
        "source_value": "sourceValue",
      });
    });

/** @internal */
export type HrisCreateEmployeeRequestDtoEmploymentType$Outbound = {
  source_value?:
    | HrisCreateEmployeeRequestDtoSchemasEmploymentType4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisCreateEmployeeRequestDtoEmploymentType$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoEmploymentType$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoEmploymentType
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.lazy(() =>
          HrisCreateEmployeeRequestDtoSchemasEmploymentType4$outboundSchema
        ),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      HrisCreateEmployeeRequestDtoSchemasEmploymentTypeValue$outboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoEmploymentType$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoEmploymentType$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoEmploymentType$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoEmploymentType$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoEmploymentType$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoEmploymentType$Outbound` instead. */
  export type Outbound = HrisCreateEmployeeRequestDtoEmploymentType$Outbound;
}

export function hrisCreateEmployeeRequestDtoEmploymentTypeToJSON(
  hrisCreateEmployeeRequestDtoEmploymentType:
    HrisCreateEmployeeRequestDtoEmploymentType,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoEmploymentType$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoEmploymentType,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoEmploymentTypeFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoEmploymentType,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoEmploymentType$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmployeeRequestDtoEmploymentType' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEthnicity4$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEthnicity4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasEthnicity4$Outbound = {};

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEthnicity4$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEthnicity4$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasEthnicity4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasEthnicity4$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEthnicity4$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEthnicity4$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEthnicity4$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEthnicity4$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEthnicity4$Outbound` instead. */
  export type Outbound = HrisCreateEmployeeRequestDtoSchemasEthnicity4$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasEthnicity4ToJSON(
  hrisCreateEmployeeRequestDtoSchemasEthnicity4:
    HrisCreateEmployeeRequestDtoSchemasEthnicity4,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasEthnicity4$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoSchemasEthnicity4,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasEthnicity4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasEthnicity4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasEthnicity4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasEthnicity4' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEthnicitySourceValue$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEthnicitySourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => HrisCreateEmployeeRequestDtoSchemasEthnicity4$inboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasEthnicitySourceValue$Outbound =
  | HrisCreateEmployeeRequestDtoSchemasEthnicity4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEthnicitySourceValue$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEthnicitySourceValue$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasEthnicitySourceValue
  > = z.union([
    z.lazy(() => HrisCreateEmployeeRequestDtoSchemasEthnicity4$outboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasEthnicitySourceValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEthnicitySourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEthnicitySourceValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEthnicitySourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEthnicitySourceValue$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEthnicitySourceValue$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasEthnicitySourceValue$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasEthnicitySourceValueToJSON(
  hrisCreateEmployeeRequestDtoSchemasEthnicitySourceValue:
    HrisCreateEmployeeRequestDtoSchemasEthnicitySourceValue,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasEthnicitySourceValue$outboundSchema
      .parse(hrisCreateEmployeeRequestDtoSchemasEthnicitySourceValue),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasEthnicitySourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasEthnicitySourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasEthnicitySourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasEthnicitySourceValue' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEthnicityValue$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEthnicityValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(HrisCreateEmployeeRequestDtoSchemasEthnicityValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasEthnicityValue$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasEthnicityValueOpen,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasEthnicityValueOpen
  > = z.union([
    z.nativeEnum(HrisCreateEmployeeRequestDtoSchemasEthnicityValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasEthnicityValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEthnicityValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEthnicityValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasEthnicityValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasEthnicityValue$outboundSchema;
}

/** @internal */
export const HrisCreateEmployeeRequestDtoEthnicity$inboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoEthnicity,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() => HrisCreateEmployeeRequestDtoSchemasEthnicity4$inboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisCreateEmployeeRequestDtoSchemasEthnicityValue$inboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type HrisCreateEmployeeRequestDtoEthnicity$Outbound = {
  source_value?:
    | HrisCreateEmployeeRequestDtoSchemasEthnicity4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisCreateEmployeeRequestDtoEthnicity$outboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoEthnicity$Outbound,
  z.ZodTypeDef,
  HrisCreateEmployeeRequestDtoEthnicity
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() =>
        HrisCreateEmployeeRequestDtoSchemasEthnicity4$outboundSchema
      ),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisCreateEmployeeRequestDtoSchemasEthnicityValue$outboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoEthnicity$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoEthnicity$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoEthnicity$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoEthnicity$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoEthnicity$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoEthnicity$Outbound` instead. */
  export type Outbound = HrisCreateEmployeeRequestDtoEthnicity$Outbound;
}

export function hrisCreateEmployeeRequestDtoEthnicityToJSON(
  hrisCreateEmployeeRequestDtoEthnicity: HrisCreateEmployeeRequestDtoEthnicity,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoEthnicity$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoEthnicity,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoEthnicityFromJSON(
  jsonString: string,
): SafeParseResult<HrisCreateEmployeeRequestDtoEthnicity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoEthnicity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoEthnicity' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasGender4$inboundSchema:
  z.ZodType<HrisCreateEmployeeRequestDtoSchemasGender4, z.ZodTypeDef, unknown> =
    z.object({});

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasGender4$Outbound = {};

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasGender4$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasGender4$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasGender4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasGender4$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasGender4$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasGender4$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasGender4$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasGender4$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasGender4$Outbound` instead. */
  export type Outbound = HrisCreateEmployeeRequestDtoSchemasGender4$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasGender4ToJSON(
  hrisCreateEmployeeRequestDtoSchemasGender4:
    HrisCreateEmployeeRequestDtoSchemasGender4,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasGender4$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoSchemasGender4,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasGender4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasGender4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasGender4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasGender4' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasGenderSourceValue$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasGenderSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => HrisCreateEmployeeRequestDtoSchemasGender4$inboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasGenderSourceValue$Outbound =
  | HrisCreateEmployeeRequestDtoSchemasGender4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasGenderSourceValue$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasGenderSourceValue$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasGenderSourceValue
  > = z.union([
    z.lazy(() => HrisCreateEmployeeRequestDtoSchemasGender4$outboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasGenderSourceValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasGenderSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasGenderSourceValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasGenderSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasGenderSourceValue$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasGenderSourceValue$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasGenderSourceValue$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasGenderSourceValueToJSON(
  hrisCreateEmployeeRequestDtoSchemasGenderSourceValue:
    HrisCreateEmployeeRequestDtoSchemasGenderSourceValue,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasGenderSourceValue$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoSchemasGenderSourceValue,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasGenderSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasGenderSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasGenderSourceValue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasGenderSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasGenderValue$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasGenderValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(HrisCreateEmployeeRequestDtoSchemasGenderValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasGenderValue$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasGenderValueOpen,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasGenderValueOpen
  > = z.union([
    z.nativeEnum(HrisCreateEmployeeRequestDtoSchemasGenderValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasGenderValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasGenderValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasGenderValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasGenderValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasGenderValue$outboundSchema;
}

/** @internal */
export const HrisCreateEmployeeRequestDtoGender$inboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoGender,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() => HrisCreateEmployeeRequestDtoSchemasGender4$inboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisCreateEmployeeRequestDtoSchemasGenderValue$inboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type HrisCreateEmployeeRequestDtoGender$Outbound = {
  source_value?:
    | HrisCreateEmployeeRequestDtoSchemasGender4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisCreateEmployeeRequestDtoGender$outboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoGender$Outbound,
  z.ZodTypeDef,
  HrisCreateEmployeeRequestDtoGender
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() => HrisCreateEmployeeRequestDtoSchemasGender4$outboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisCreateEmployeeRequestDtoSchemasGenderValue$outboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoGender$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoGender$inboundSchema` instead. */
  export const inboundSchema = HrisCreateEmployeeRequestDtoGender$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoGender$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoGender$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoGender$Outbound` instead. */
  export type Outbound = HrisCreateEmployeeRequestDtoGender$Outbound;
}

export function hrisCreateEmployeeRequestDtoGenderToJSON(
  hrisCreateEmployeeRequestDtoGender: HrisCreateEmployeeRequestDtoGender,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoGender$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoGender,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoGenderFromJSON(
  jsonString: string,
): SafeParseResult<HrisCreateEmployeeRequestDtoGender, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoGender$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoGender' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasHomeLocation4$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasHomeLocation4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasHomeLocation4$Outbound = {};

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasHomeLocation4$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasHomeLocation4$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasHomeLocation4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasHomeLocation4$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasHomeLocation4$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasHomeLocation4$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasHomeLocation4$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasHomeLocation4$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasHomeLocation4$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasHomeLocation4$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasHomeLocation4ToJSON(
  hrisCreateEmployeeRequestDtoSchemasHomeLocation4:
    HrisCreateEmployeeRequestDtoSchemasHomeLocation4,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasHomeLocation4$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoSchemasHomeLocation4,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasHomeLocation4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasHomeLocation4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasHomeLocation4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasHomeLocation4' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasHomeLocationSourceValue$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasHomeLocationSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasHomeLocation4$inboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasHomeLocationSourceValue$Outbound =
  | HrisCreateEmployeeRequestDtoSchemasHomeLocation4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasHomeLocationSourceValue$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasHomeLocationSourceValue$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasHomeLocationSourceValue
  > = z.union([
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasHomeLocation4$outboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasHomeLocationSourceValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasHomeLocationSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasHomeLocationSourceValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasHomeLocationSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasHomeLocationSourceValue$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasHomeLocationSourceValue$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasHomeLocationSourceValue$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasHomeLocationSourceValueToJSON(
  hrisCreateEmployeeRequestDtoSchemasHomeLocationSourceValue:
    HrisCreateEmployeeRequestDtoSchemasHomeLocationSourceValue,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasHomeLocationSourceValue$outboundSchema
      .parse(hrisCreateEmployeeRequestDtoSchemasHomeLocationSourceValue),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasHomeLocationSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasHomeLocationSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasHomeLocationSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasHomeLocationSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasHomeLocationValue$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasHomeLocationValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(HrisCreateEmployeeRequestDtoSchemasHomeLocationValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasHomeLocationValue$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasHomeLocationValueOpen,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasHomeLocationValueOpen
  > = z.union([
    z.nativeEnum(HrisCreateEmployeeRequestDtoSchemasHomeLocationValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasHomeLocationValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasHomeLocationValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasHomeLocationValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasHomeLocationValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasHomeLocationValue$outboundSchema;
}

/** @internal */
export const HrisCreateEmployeeRequestDtoCountry$inboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoCountry,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() =>
        HrisCreateEmployeeRequestDtoSchemasHomeLocation4$inboundSchema
      ),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisCreateEmployeeRequestDtoSchemasHomeLocationValue$inboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type HrisCreateEmployeeRequestDtoCountry$Outbound = {
  source_value?:
    | HrisCreateEmployeeRequestDtoSchemasHomeLocation4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisCreateEmployeeRequestDtoCountry$outboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoCountry$Outbound,
  z.ZodTypeDef,
  HrisCreateEmployeeRequestDtoCountry
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() =>
        HrisCreateEmployeeRequestDtoSchemasHomeLocation4$outboundSchema
      ),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisCreateEmployeeRequestDtoSchemasHomeLocationValue$outboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoCountry$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoCountry$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoCountry$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoCountry$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoCountry$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoCountry$Outbound` instead. */
  export type Outbound = HrisCreateEmployeeRequestDtoCountry$Outbound;
}

export function hrisCreateEmployeeRequestDtoCountryToJSON(
  hrisCreateEmployeeRequestDtoCountry: HrisCreateEmployeeRequestDtoCountry,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoCountry$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoCountry,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoCountryFromJSON(
  jsonString: string,
): SafeParseResult<HrisCreateEmployeeRequestDtoCountry, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoCountry$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoCountry' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasHomeLocationState4$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasHomeLocationState4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasHomeLocationState4$Outbound = {};

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasHomeLocationState4$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasHomeLocationState4$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasHomeLocationState4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasHomeLocationState4$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasHomeLocationState4$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasHomeLocationState4$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasHomeLocationState4$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasHomeLocationState4$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasHomeLocationState4$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasHomeLocationState4$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasHomeLocationState4ToJSON(
  hrisCreateEmployeeRequestDtoSchemasHomeLocationState4:
    HrisCreateEmployeeRequestDtoSchemasHomeLocationState4,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasHomeLocationState4$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoSchemasHomeLocationState4,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasHomeLocationState4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasHomeLocationState4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasHomeLocationState4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasHomeLocationState4' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasHomeLocationStateSourceValue$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasHomeLocationStateSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasHomeLocationState4$inboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasHomeLocationStateSourceValue$Outbound =
  | HrisCreateEmployeeRequestDtoSchemasHomeLocationState4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasHomeLocationStateSourceValue$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasHomeLocationStateSourceValue$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasHomeLocationStateSourceValue
  > = z.union([
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasHomeLocationState4$outboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasHomeLocationStateSourceValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasHomeLocationStateSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasHomeLocationStateSourceValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasHomeLocationStateSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasHomeLocationStateSourceValue$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasHomeLocationStateSourceValue$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasHomeLocationStateSourceValue$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasHomeLocationStateSourceValueToJSON(
  hrisCreateEmployeeRequestDtoSchemasHomeLocationStateSourceValue:
    HrisCreateEmployeeRequestDtoSchemasHomeLocationStateSourceValue,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasHomeLocationStateSourceValue$outboundSchema
      .parse(hrisCreateEmployeeRequestDtoSchemasHomeLocationStateSourceValue),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasHomeLocationStateSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasHomeLocationStateSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasHomeLocationStateSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasHomeLocationStateSourceValue' from JSON`,
  );
}

/** @internal */
export const State$inboundSchema: z.ZodType<State, z.ZodTypeDef, unknown> = z
  .object({
    source_value: z.nullable(
      z.union([
        z.lazy(() =>
          HrisCreateEmployeeRequestDtoSchemasHomeLocationState4$inboundSchema
        ),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      "source_value": "sourceValue",
    });
  });

/** @internal */
export type State$Outbound = {
  source_value?:
    | HrisCreateEmployeeRequestDtoSchemasHomeLocationState4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const State$outboundSchema: z.ZodType<
  State$Outbound,
  z.ZodTypeDef,
  State
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() =>
        HrisCreateEmployeeRequestDtoSchemasHomeLocationState4$outboundSchema
      ),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace State$ {
  /** @deprecated use `State$inboundSchema` instead. */
  export const inboundSchema = State$inboundSchema;
  /** @deprecated use `State$outboundSchema` instead. */
  export const outboundSchema = State$outboundSchema;
  /** @deprecated use `State$Outbound` instead. */
  export type Outbound = State$Outbound;
}

export function stateToJSON(state: State): string {
  return JSON.stringify(State$outboundSchema.parse(state));
}

export function stateFromJSON(
  jsonString: string,
): SafeParseResult<State, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => State$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'State' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoHomeLocation$inboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoHomeLocation,
  z.ZodTypeDef,
  unknown
> = z.object({
  city: z.nullable(z.string()).optional(),
  country: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoCountry$inboundSchema),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  phone_number: z.nullable(z.string()).optional(),
  state: z.nullable(z.lazy(() => State$inboundSchema)).optional(),
  street_1: z.nullable(z.string()).optional(),
  street_2: z.nullable(z.string()).optional(),
  zip_code: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "phone_number": "phoneNumber",
    "street_1": "street1",
    "street_2": "street2",
    "zip_code": "zipCode",
  });
});

/** @internal */
export type HrisCreateEmployeeRequestDtoHomeLocation$Outbound = {
  city?: string | null | undefined;
  country?: HrisCreateEmployeeRequestDtoCountry$Outbound | null | undefined;
  id?: string | null | undefined;
  name?: string | null | undefined;
  passthrough?: { [k: string]: any } | null | undefined;
  phone_number?: string | null | undefined;
  state?: State$Outbound | null | undefined;
  street_1?: string | null | undefined;
  street_2?: string | null | undefined;
  zip_code?: string | null | undefined;
};

/** @internal */
export const HrisCreateEmployeeRequestDtoHomeLocation$outboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoHomeLocation$Outbound,
  z.ZodTypeDef,
  HrisCreateEmployeeRequestDtoHomeLocation
> = z.object({
  city: z.nullable(z.string()).optional(),
  country: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoCountry$outboundSchema),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  phoneNumber: z.nullable(z.string()).optional(),
  state: z.nullable(z.lazy(() => State$outboundSchema)).optional(),
  street1: z.nullable(z.string()).optional(),
  street2: z.nullable(z.string()).optional(),
  zipCode: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    phoneNumber: "phone_number",
    street1: "street_1",
    street2: "street_2",
    zipCode: "zip_code",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoHomeLocation$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoHomeLocation$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoHomeLocation$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoHomeLocation$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoHomeLocation$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoHomeLocation$Outbound` instead. */
  export type Outbound = HrisCreateEmployeeRequestDtoHomeLocation$Outbound;
}

export function hrisCreateEmployeeRequestDtoHomeLocationToJSON(
  hrisCreateEmployeeRequestDtoHomeLocation:
    HrisCreateEmployeeRequestDtoHomeLocation,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoHomeLocation$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoHomeLocation,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoHomeLocationFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoHomeLocation,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoHomeLocation$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmployeeRequestDtoHomeLocation' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasMaritalStatus4$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasMaritalStatus4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasMaritalStatus4$Outbound = {};

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasMaritalStatus4$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasMaritalStatus4$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasMaritalStatus4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasMaritalStatus4$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasMaritalStatus4$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasMaritalStatus4$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasMaritalStatus4$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasMaritalStatus4$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasMaritalStatus4$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasMaritalStatus4$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasMaritalStatus4ToJSON(
  hrisCreateEmployeeRequestDtoSchemasMaritalStatus4:
    HrisCreateEmployeeRequestDtoSchemasMaritalStatus4,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasMaritalStatus4$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoSchemasMaritalStatus4,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasMaritalStatus4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasMaritalStatus4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasMaritalStatus4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasMaritalStatus4' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasMaritalStatusSourceValue$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasMaritalStatusSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasMaritalStatus4$inboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasMaritalStatusSourceValue$Outbound =
  | HrisCreateEmployeeRequestDtoSchemasMaritalStatus4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasMaritalStatusSourceValue$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasMaritalStatusSourceValue$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasMaritalStatusSourceValue
  > = z.union([
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasMaritalStatus4$outboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasMaritalStatusSourceValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasMaritalStatusSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasMaritalStatusSourceValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasMaritalStatusSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasMaritalStatusSourceValue$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasMaritalStatusSourceValue$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasMaritalStatusSourceValue$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasMaritalStatusSourceValueToJSON(
  hrisCreateEmployeeRequestDtoSchemasMaritalStatusSourceValue:
    HrisCreateEmployeeRequestDtoSchemasMaritalStatusSourceValue,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasMaritalStatusSourceValue$outboundSchema
      .parse(hrisCreateEmployeeRequestDtoSchemasMaritalStatusSourceValue),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasMaritalStatusSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasMaritalStatusSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasMaritalStatusSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasMaritalStatusSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasMaritalStatusValue$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasMaritalStatusValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(HrisCreateEmployeeRequestDtoSchemasMaritalStatusValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasMaritalStatusValue$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasMaritalStatusValueOpen,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasMaritalStatusValueOpen
  > = z.union([
    z.nativeEnum(HrisCreateEmployeeRequestDtoSchemasMaritalStatusValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasMaritalStatusValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasMaritalStatusValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasMaritalStatusValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasMaritalStatusValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasMaritalStatusValue$outboundSchema;
}

/** @internal */
export const HrisCreateEmployeeRequestDtoMaritalStatus$inboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoMaritalStatus,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() =>
        HrisCreateEmployeeRequestDtoSchemasMaritalStatus4$inboundSchema
      ),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisCreateEmployeeRequestDtoSchemasMaritalStatusValue$inboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type HrisCreateEmployeeRequestDtoMaritalStatus$Outbound = {
  source_value?:
    | HrisCreateEmployeeRequestDtoSchemasMaritalStatus4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisCreateEmployeeRequestDtoMaritalStatus$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoMaritalStatus$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoMaritalStatus
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.lazy(() =>
          HrisCreateEmployeeRequestDtoSchemasMaritalStatus4$outboundSchema
        ),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      HrisCreateEmployeeRequestDtoSchemasMaritalStatusValue$outboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoMaritalStatus$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoMaritalStatus$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoMaritalStatus$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoMaritalStatus$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoMaritalStatus$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoMaritalStatus$Outbound` instead. */
  export type Outbound = HrisCreateEmployeeRequestDtoMaritalStatus$Outbound;
}

export function hrisCreateEmployeeRequestDtoMaritalStatusToJSON(
  hrisCreateEmployeeRequestDtoMaritalStatus:
    HrisCreateEmployeeRequestDtoMaritalStatus,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoMaritalStatus$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoMaritalStatus,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoMaritalStatusFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoMaritalStatus,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoMaritalStatus$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmployeeRequestDtoMaritalStatus' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumber4$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumber4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumber4$Outbound =
  {};

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumber4$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumber4$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumber4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumber4$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumber4$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumber4$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumber4$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumber4$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumber4$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumber4$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasNationalIdentityNumber4ToJSON(
  hrisCreateEmployeeRequestDtoSchemasNationalIdentityNumber4:
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumber4,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumber4$outboundSchema
      .parse(hrisCreateEmployeeRequestDtoSchemasNationalIdentityNumber4),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasNationalIdentityNumber4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumber4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumber4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumber4' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumber4$inboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue$Outbound =
  | HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumber4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue
  > = z.union([
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumber4$outboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValueToJSON(
  hrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue:
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue$outboundSchema
      .parse(
        hrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue,
      ),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberValue$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(
        HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberValue,
      ),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberValue$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberValueOpen,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberValueOpen
  > = z.union([
    z.nativeEnum(
      HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberValue,
    ),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberValue$outboundSchema;
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasCountry$inboundSchema:
  z.ZodType<HrisCreateEmployeeRequestDtoSchemasCountry, z.ZodTypeDef, unknown> =
    z.object({
      source_value: z.nullable(
        z.union([
          z.lazy(() =>
            HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumber4$inboundSchema
          ),
          z.string(),
          z.number(),
          z.boolean(),
          z.array(z.any()),
        ]),
      ).optional(),
      value: z.nullable(
        HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberValue$inboundSchema,
      ).optional(),
    }).transform((v) => {
      return remap$(v, {
        "source_value": "sourceValue",
      });
    });

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasCountry$Outbound = {
  source_value?:
    | HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumber4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasCountry$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasCountry$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasCountry
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.lazy(() =>
          HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumber4$outboundSchema
        ),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberValue$outboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasCountry$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasCountry$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasCountry$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasCountry$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasCountry$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasCountry$Outbound` instead. */
  export type Outbound = HrisCreateEmployeeRequestDtoSchemasCountry$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasCountryToJSON(
  hrisCreateEmployeeRequestDtoSchemasCountry:
    HrisCreateEmployeeRequestDtoSchemasCountry,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasCountry$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoSchemasCountry,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasCountryFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasCountry,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasCountry$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasCountry' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberType4$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberType4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberType4$Outbound =
  {};

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberType4$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberType4$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberType4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberType4$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberType4$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberType4$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberType4$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberType4$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberType4$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberType4$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberType4ToJSON(
  hrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberType4:
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberType4,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberType4$outboundSchema
      .parse(hrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberType4),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberType4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberType4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberType4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberType4' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberType4$inboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue$Outbound =
  | HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberType4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue
  > = z.union([
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberType4$outboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValueToJSON(
  hrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue:
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue$outboundSchema
      .parse(
        hrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue,
      ),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValue$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(
        HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValue,
      ),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValue$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValueOpen,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValueOpen
  > = z.union([
    z.nativeEnum(
      HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValue,
    ),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValue$outboundSchema;
}

/** @internal */
export const HrisCreateEmployeeRequestDtoType$inboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoType,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() =>
        HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberType4$inboundSchema
      ),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValue$inboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type HrisCreateEmployeeRequestDtoType$Outbound = {
  source_value?:
    | HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberType4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisCreateEmployeeRequestDtoType$outboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoType$Outbound,
  z.ZodTypeDef,
  HrisCreateEmployeeRequestDtoType
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() =>
        HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberType4$outboundSchema
      ),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisCreateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValue$outboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoType$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoType$inboundSchema` instead. */
  export const inboundSchema = HrisCreateEmployeeRequestDtoType$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoType$outboundSchema` instead. */
  export const outboundSchema = HrisCreateEmployeeRequestDtoType$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoType$Outbound` instead. */
  export type Outbound = HrisCreateEmployeeRequestDtoType$Outbound;
}

export function hrisCreateEmployeeRequestDtoTypeToJSON(
  hrisCreateEmployeeRequestDtoType: HrisCreateEmployeeRequestDtoType,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoType$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoType,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoTypeFromJSON(
  jsonString: string,
): SafeParseResult<HrisCreateEmployeeRequestDtoType, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HrisCreateEmployeeRequestDtoType$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoType' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoNationalIdentityNumber$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoNationalIdentityNumber,
    z.ZodTypeDef,
    unknown
  > = z.object({
    country: z.nullable(
      z.lazy(() => HrisCreateEmployeeRequestDtoSchemasCountry$inboundSchema),
    ).optional(),
    type: z.nullable(
      z.lazy(() => HrisCreateEmployeeRequestDtoType$inboundSchema),
    ).optional(),
    value: z.nullable(z.string()).optional(),
  });

/** @internal */
export type HrisCreateEmployeeRequestDtoNationalIdentityNumber$Outbound = {
  country?:
    | HrisCreateEmployeeRequestDtoSchemasCountry$Outbound
    | null
    | undefined;
  type?: HrisCreateEmployeeRequestDtoType$Outbound | null | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisCreateEmployeeRequestDtoNationalIdentityNumber$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoNationalIdentityNumber$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoNationalIdentityNumber
  > = z.object({
    country: z.nullable(
      z.lazy(() => HrisCreateEmployeeRequestDtoSchemasCountry$outboundSchema),
    ).optional(),
    type: z.nullable(
      z.lazy(() => HrisCreateEmployeeRequestDtoType$outboundSchema),
    ).optional(),
    value: z.nullable(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoNationalIdentityNumber$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoNationalIdentityNumber$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoNationalIdentityNumber$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoNationalIdentityNumber$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoNationalIdentityNumber$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoNationalIdentityNumber$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoNationalIdentityNumber$Outbound;
}

export function hrisCreateEmployeeRequestDtoNationalIdentityNumberToJSON(
  hrisCreateEmployeeRequestDtoNationalIdentityNumber:
    HrisCreateEmployeeRequestDtoNationalIdentityNumber,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoNationalIdentityNumber$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoNationalIdentityNumber,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoNationalIdentityNumberFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoNationalIdentityNumber,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoNationalIdentityNumber$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmployeeRequestDtoNationalIdentityNumber' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasPreferredLanguage4$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasPreferredLanguage4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasPreferredLanguage4$Outbound = {};

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasPreferredLanguage4$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasPreferredLanguage4$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasPreferredLanguage4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasPreferredLanguage4$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasPreferredLanguage4$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasPreferredLanguage4$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasPreferredLanguage4$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasPreferredLanguage4$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasPreferredLanguage4$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasPreferredLanguage4$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasPreferredLanguage4ToJSON(
  hrisCreateEmployeeRequestDtoSchemasPreferredLanguage4:
    HrisCreateEmployeeRequestDtoSchemasPreferredLanguage4,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasPreferredLanguage4$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoSchemasPreferredLanguage4,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasPreferredLanguage4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasPreferredLanguage4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasPreferredLanguage4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasPreferredLanguage4' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasPreferredLanguageSourceValue$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasPreferredLanguageSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasPreferredLanguage4$inboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasPreferredLanguageSourceValue$Outbound =
  | HrisCreateEmployeeRequestDtoSchemasPreferredLanguage4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasPreferredLanguageSourceValue$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasPreferredLanguageSourceValue$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasPreferredLanguageSourceValue
  > = z.union([
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasPreferredLanguage4$outboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasPreferredLanguageSourceValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasPreferredLanguageSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasPreferredLanguageSourceValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasPreferredLanguageSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasPreferredLanguageSourceValue$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasPreferredLanguageSourceValue$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasPreferredLanguageSourceValue$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasPreferredLanguageSourceValueToJSON(
  hrisCreateEmployeeRequestDtoSchemasPreferredLanguageSourceValue:
    HrisCreateEmployeeRequestDtoSchemasPreferredLanguageSourceValue,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasPreferredLanguageSourceValue$outboundSchema
      .parse(hrisCreateEmployeeRequestDtoSchemasPreferredLanguageSourceValue),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasPreferredLanguageSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasPreferredLanguageSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasPreferredLanguageSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasPreferredLanguageSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasPreferredLanguageValue$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasPreferredLanguageValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(HrisCreateEmployeeRequestDtoSchemasPreferredLanguageValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasPreferredLanguageValue$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasPreferredLanguageValueOpen,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasPreferredLanguageValueOpen
  > = z.union([
    z.nativeEnum(HrisCreateEmployeeRequestDtoSchemasPreferredLanguageValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasPreferredLanguageValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasPreferredLanguageValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasPreferredLanguageValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasPreferredLanguageValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasPreferredLanguageValue$outboundSchema;
}

/** @internal */
export const HrisCreateEmployeeRequestDtoPreferredLanguage$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoPreferredLanguage,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source_value: z.nullable(
      z.union([
        z.lazy(() =>
          HrisCreateEmployeeRequestDtoSchemasPreferredLanguage4$inboundSchema
        ),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      HrisCreateEmployeeRequestDtoSchemasPreferredLanguageValue$inboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "source_value": "sourceValue",
    });
  });

/** @internal */
export type HrisCreateEmployeeRequestDtoPreferredLanguage$Outbound = {
  source_value?:
    | HrisCreateEmployeeRequestDtoSchemasPreferredLanguage4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisCreateEmployeeRequestDtoPreferredLanguage$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoPreferredLanguage$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoPreferredLanguage
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.lazy(() =>
          HrisCreateEmployeeRequestDtoSchemasPreferredLanguage4$outboundSchema
        ),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      HrisCreateEmployeeRequestDtoSchemasPreferredLanguageValue$outboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoPreferredLanguage$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoPreferredLanguage$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoPreferredLanguage$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoPreferredLanguage$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoPreferredLanguage$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoPreferredLanguage$Outbound` instead. */
  export type Outbound = HrisCreateEmployeeRequestDtoPreferredLanguage$Outbound;
}

export function hrisCreateEmployeeRequestDtoPreferredLanguageToJSON(
  hrisCreateEmployeeRequestDtoPreferredLanguage:
    HrisCreateEmployeeRequestDtoPreferredLanguage,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoPreferredLanguage$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoPreferredLanguage,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoPreferredLanguageFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoPreferredLanguage,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoPreferredLanguage$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmployeeRequestDtoPreferredLanguage' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasWorkLocation4$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasWorkLocation4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasWorkLocation4$Outbound = {};

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasWorkLocation4$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasWorkLocation4$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasWorkLocation4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasWorkLocation4$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasWorkLocation4$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasWorkLocation4$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasWorkLocation4$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasWorkLocation4$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasWorkLocation4$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasWorkLocation4$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasWorkLocation4ToJSON(
  hrisCreateEmployeeRequestDtoSchemasWorkLocation4:
    HrisCreateEmployeeRequestDtoSchemasWorkLocation4,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasWorkLocation4$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoSchemasWorkLocation4,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasWorkLocation4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasWorkLocation4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasWorkLocation4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasWorkLocation4' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasWorkLocationSourceValue$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasWorkLocationSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasWorkLocation4$inboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasWorkLocationSourceValue$Outbound =
  | HrisCreateEmployeeRequestDtoSchemasWorkLocation4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasWorkLocationSourceValue$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasWorkLocationSourceValue$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasWorkLocationSourceValue
  > = z.union([
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasWorkLocation4$outboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasWorkLocationSourceValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasWorkLocationSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasWorkLocationSourceValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasWorkLocationSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasWorkLocationSourceValue$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasWorkLocationSourceValue$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasWorkLocationSourceValue$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasWorkLocationSourceValueToJSON(
  hrisCreateEmployeeRequestDtoSchemasWorkLocationSourceValue:
    HrisCreateEmployeeRequestDtoSchemasWorkLocationSourceValue,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasWorkLocationSourceValue$outboundSchema
      .parse(hrisCreateEmployeeRequestDtoSchemasWorkLocationSourceValue),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasWorkLocationSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasWorkLocationSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasWorkLocationSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasWorkLocationSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasWorkLocationValue$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasWorkLocationValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(HrisCreateEmployeeRequestDtoSchemasWorkLocationValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasWorkLocationValue$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasWorkLocationValueOpen,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasWorkLocationValueOpen
  > = z.union([
    z.nativeEnum(HrisCreateEmployeeRequestDtoSchemasWorkLocationValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasWorkLocationValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasWorkLocationValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasWorkLocationValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasWorkLocationValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasWorkLocationValue$outboundSchema;
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasWorkLocationCountry$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasWorkLocationCountry,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source_value: z.nullable(
      z.union([
        z.lazy(() =>
          HrisCreateEmployeeRequestDtoSchemasWorkLocation4$inboundSchema
        ),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      HrisCreateEmployeeRequestDtoSchemasWorkLocationValue$inboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "source_value": "sourceValue",
    });
  });

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasWorkLocationCountry$Outbound = {
  source_value?:
    | HrisCreateEmployeeRequestDtoSchemasWorkLocation4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasWorkLocationCountry$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasWorkLocationCountry$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasWorkLocationCountry
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.lazy(() =>
          HrisCreateEmployeeRequestDtoSchemasWorkLocation4$outboundSchema
        ),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      HrisCreateEmployeeRequestDtoSchemasWorkLocationValue$outboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasWorkLocationCountry$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasWorkLocationCountry$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasWorkLocationCountry$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasWorkLocationCountry$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasWorkLocationCountry$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasWorkLocationCountry$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasWorkLocationCountry$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasWorkLocationCountryToJSON(
  hrisCreateEmployeeRequestDtoSchemasWorkLocationCountry:
    HrisCreateEmployeeRequestDtoSchemasWorkLocationCountry,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasWorkLocationCountry$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoSchemasWorkLocationCountry,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasWorkLocationCountryFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasWorkLocationCountry,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasWorkLocationCountry$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasWorkLocationCountry' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasWorkLocationState4$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasWorkLocationState4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasWorkLocationState4$Outbound = {};

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasWorkLocationState4$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasWorkLocationState4$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasWorkLocationState4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasWorkLocationState4$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasWorkLocationState4$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasWorkLocationState4$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasWorkLocationState4$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasWorkLocationState4$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasWorkLocationState4$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasWorkLocationState4$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasWorkLocationState4ToJSON(
  hrisCreateEmployeeRequestDtoSchemasWorkLocationState4:
    HrisCreateEmployeeRequestDtoSchemasWorkLocationState4,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasWorkLocationState4$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoSchemasWorkLocationState4,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasWorkLocationState4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasWorkLocationState4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasWorkLocationState4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasWorkLocationState4' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasWorkLocationStateSourceValue$inboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasWorkLocationStateSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasWorkLocationState4$inboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisCreateEmployeeRequestDtoSchemasWorkLocationStateSourceValue$Outbound =
  | HrisCreateEmployeeRequestDtoSchemasWorkLocationState4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const HrisCreateEmployeeRequestDtoSchemasWorkLocationStateSourceValue$outboundSchema:
  z.ZodType<
    HrisCreateEmployeeRequestDtoSchemasWorkLocationStateSourceValue$Outbound,
    z.ZodTypeDef,
    HrisCreateEmployeeRequestDtoSchemasWorkLocationStateSourceValue
  > = z.union([
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasWorkLocationState4$outboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoSchemasWorkLocationStateSourceValue$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasWorkLocationStateSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoSchemasWorkLocationStateSourceValue$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasWorkLocationStateSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoSchemasWorkLocationStateSourceValue$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoSchemasWorkLocationStateSourceValue$Outbound` instead. */
  export type Outbound =
    HrisCreateEmployeeRequestDtoSchemasWorkLocationStateSourceValue$Outbound;
}

export function hrisCreateEmployeeRequestDtoSchemasWorkLocationStateSourceValueToJSON(
  hrisCreateEmployeeRequestDtoSchemasWorkLocationStateSourceValue:
    HrisCreateEmployeeRequestDtoSchemasWorkLocationStateSourceValue,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoSchemasWorkLocationStateSourceValue$outboundSchema
      .parse(hrisCreateEmployeeRequestDtoSchemasWorkLocationStateSourceValue),
  );
}

export function hrisCreateEmployeeRequestDtoSchemasWorkLocationStateSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoSchemasWorkLocationStateSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoSchemasWorkLocationStateSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoSchemasWorkLocationStateSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoState$inboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoState,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() =>
        HrisCreateEmployeeRequestDtoSchemasWorkLocationState4$inboundSchema
      ),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type HrisCreateEmployeeRequestDtoState$Outbound = {
  source_value?:
    | HrisCreateEmployeeRequestDtoSchemasWorkLocationState4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisCreateEmployeeRequestDtoState$outboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoState$Outbound,
  z.ZodTypeDef,
  HrisCreateEmployeeRequestDtoState
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() =>
        HrisCreateEmployeeRequestDtoSchemasWorkLocationState4$outboundSchema
      ),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoState$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoState$inboundSchema` instead. */
  export const inboundSchema = HrisCreateEmployeeRequestDtoState$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoState$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoState$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoState$Outbound` instead. */
  export type Outbound = HrisCreateEmployeeRequestDtoState$Outbound;
}

export function hrisCreateEmployeeRequestDtoStateToJSON(
  hrisCreateEmployeeRequestDtoState: HrisCreateEmployeeRequestDtoState,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoState$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoState,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoStateFromJSON(
  jsonString: string,
): SafeParseResult<HrisCreateEmployeeRequestDtoState, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HrisCreateEmployeeRequestDtoState$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDtoState' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDtoWorkLocation$inboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoWorkLocation,
  z.ZodTypeDef,
  unknown
> = z.object({
  city: z.nullable(z.string()).optional(),
  country: z.nullable(
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasWorkLocationCountry$inboundSchema
    ),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  phone_number: z.nullable(z.string()).optional(),
  state: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoState$inboundSchema),
  ).optional(),
  street_1: z.nullable(z.string()).optional(),
  street_2: z.nullable(z.string()).optional(),
  zip_code: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "phone_number": "phoneNumber",
    "street_1": "street1",
    "street_2": "street2",
    "zip_code": "zipCode",
  });
});

/** @internal */
export type HrisCreateEmployeeRequestDtoWorkLocation$Outbound = {
  city?: string | null | undefined;
  country?:
    | HrisCreateEmployeeRequestDtoSchemasWorkLocationCountry$Outbound
    | null
    | undefined;
  id?: string | null | undefined;
  name?: string | null | undefined;
  passthrough?: { [k: string]: any } | null | undefined;
  phone_number?: string | null | undefined;
  state?: HrisCreateEmployeeRequestDtoState$Outbound | null | undefined;
  street_1?: string | null | undefined;
  street_2?: string | null | undefined;
  zip_code?: string | null | undefined;
};

/** @internal */
export const HrisCreateEmployeeRequestDtoWorkLocation$outboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDtoWorkLocation$Outbound,
  z.ZodTypeDef,
  HrisCreateEmployeeRequestDtoWorkLocation
> = z.object({
  city: z.nullable(z.string()).optional(),
  country: z.nullable(
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoSchemasWorkLocationCountry$outboundSchema
    ),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  phoneNumber: z.nullable(z.string()).optional(),
  state: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoState$outboundSchema),
  ).optional(),
  street1: z.nullable(z.string()).optional(),
  street2: z.nullable(z.string()).optional(),
  zipCode: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    phoneNumber: "phone_number",
    street1: "street_1",
    street2: "street_2",
    zipCode: "zip_code",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDtoWorkLocation$ {
  /** @deprecated use `HrisCreateEmployeeRequestDtoWorkLocation$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmployeeRequestDtoWorkLocation$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoWorkLocation$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmployeeRequestDtoWorkLocation$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDtoWorkLocation$Outbound` instead. */
  export type Outbound = HrisCreateEmployeeRequestDtoWorkLocation$Outbound;
}

export function hrisCreateEmployeeRequestDtoWorkLocationToJSON(
  hrisCreateEmployeeRequestDtoWorkLocation:
    HrisCreateEmployeeRequestDtoWorkLocation,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDtoWorkLocation$outboundSchema.parse(
      hrisCreateEmployeeRequestDtoWorkLocation,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoWorkLocationFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmployeeRequestDtoWorkLocation,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmployeeRequestDtoWorkLocation$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmployeeRequestDtoWorkLocation' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmployeeRequestDto$inboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  avatar: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoAvatar$inboundSchema),
  ).optional(),
  avatar_url: z.nullable(z.string()).optional(),
  benefits: z.nullable(z.array(CreateHRISBenefit$inboundSchema)).optional(),
  birthday: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  citizenships: z.nullable(z.array(CountryCodeEnum$inboundSchema)).optional(),
  company_id: z.nullable(z.string()).optional(),
  company_name: z.nullable(z.string()).optional(),
  cost_centers: z.nullable(z.array(CreateCostCenterApiModel$inboundSchema))
    .optional(),
  custom_fields: z.nullable(z.array(CustomFields$inboundSchema)).optional(),
  date_of_birth: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  department: z.nullable(z.string()).optional(),
  department_id: z.nullable(z.string()).optional(),
  display_name: z.nullable(z.string()).optional(),
  employee_number: z.nullable(z.string()).optional(),
  employment: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoEmployment$inboundSchema),
  ).optional(),
  employment_contract_type: z.nullable(
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoEmploymentContractType$inboundSchema
    ),
  ).optional(),
  employment_status: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoEmploymentStatus$inboundSchema),
  ).optional(),
  employment_type: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoEmploymentType$inboundSchema),
  ).optional(),
  employments: z.nullable(z.array(CreateEmploymentApiModel$inboundSchema))
    .optional(),
  ethnicity: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoEthnicity$inboundSchema),
  ).optional(),
  first_name: z.nullable(z.string()).optional(),
  gender: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoGender$inboundSchema),
  ).optional(),
  hire_date: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  home_location: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoHomeLocation$inboundSchema),
  ).optional(),
  job_id: z.nullable(z.string()).optional(),
  job_title: z.nullable(z.string()).optional(),
  last_name: z.nullable(z.string()).optional(),
  manager_id: z.nullable(z.string()).optional(),
  marital_status: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoMaritalStatus$inboundSchema),
  ).optional(),
  name: z.nullable(z.string()).optional(),
  national_identity_number: z.nullable(
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoNationalIdentityNumber$inboundSchema
    ),
  ).optional(),
  national_identity_numbers: z.nullable(
    z.array(NationalIdentityNumberApiModel$inboundSchema),
  ).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  personal_email: z.nullable(z.string()).optional(),
  personal_phone_number: z.nullable(z.string()).optional(),
  preferred_language: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoPreferredLanguage$inboundSchema),
  ).optional(),
  start_date: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  team_id: z.nullable(z.string()).optional(),
  termination_date: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  work_email: z.nullable(z.string()).optional(),
  work_location: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoWorkLocation$inboundSchema),
  ).optional(),
  work_phone_number: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "avatar_url": "avatarUrl",
    "company_id": "companyId",
    "company_name": "companyName",
    "cost_centers": "costCenters",
    "custom_fields": "customFields",
    "date_of_birth": "dateOfBirth",
    "department_id": "departmentId",
    "display_name": "displayName",
    "employee_number": "employeeNumber",
    "employment_contract_type": "employmentContractType",
    "employment_status": "employmentStatus",
    "employment_type": "employmentType",
    "first_name": "firstName",
    "hire_date": "hireDate",
    "home_location": "homeLocation",
    "job_id": "jobId",
    "job_title": "jobTitle",
    "last_name": "lastName",
    "manager_id": "managerId",
    "marital_status": "maritalStatus",
    "national_identity_number": "nationalIdentityNumber",
    "national_identity_numbers": "nationalIdentityNumbers",
    "personal_email": "personalEmail",
    "personal_phone_number": "personalPhoneNumber",
    "preferred_language": "preferredLanguage",
    "start_date": "startDate",
    "team_id": "teamId",
    "termination_date": "terminationDate",
    "work_email": "workEmail",
    "work_location": "workLocation",
    "work_phone_number": "workPhoneNumber",
  });
});

/** @internal */
export type HrisCreateEmployeeRequestDto$Outbound = {
  avatar?: HrisCreateEmployeeRequestDtoAvatar$Outbound | null | undefined;
  avatar_url?: string | null | undefined;
  benefits?: Array<CreateHRISBenefit$Outbound> | null | undefined;
  birthday?: string | null | undefined;
  citizenships?: Array<CountryCodeEnum$Outbound> | null | undefined;
  company_id?: string | null | undefined;
  company_name?: string | null | undefined;
  cost_centers?: Array<CreateCostCenterApiModel$Outbound> | null | undefined;
  custom_fields?: Array<CustomFields$Outbound> | null | undefined;
  date_of_birth?: string | null | undefined;
  department?: string | null | undefined;
  department_id?: string | null | undefined;
  display_name?: string | null | undefined;
  employee_number?: string | null | undefined;
  employment?:
    | HrisCreateEmployeeRequestDtoEmployment$Outbound
    | null
    | undefined;
  employment_contract_type?:
    | HrisCreateEmployeeRequestDtoEmploymentContractType$Outbound
    | null
    | undefined;
  employment_status?:
    | HrisCreateEmployeeRequestDtoEmploymentStatus$Outbound
    | null
    | undefined;
  employment_type?:
    | HrisCreateEmployeeRequestDtoEmploymentType$Outbound
    | null
    | undefined;
  employments?: Array<CreateEmploymentApiModel$Outbound> | null | undefined;
  ethnicity?: HrisCreateEmployeeRequestDtoEthnicity$Outbound | null | undefined;
  first_name?: string | null | undefined;
  gender?: HrisCreateEmployeeRequestDtoGender$Outbound | null | undefined;
  hire_date?: string | null | undefined;
  home_location?:
    | HrisCreateEmployeeRequestDtoHomeLocation$Outbound
    | null
    | undefined;
  job_id?: string | null | undefined;
  job_title?: string | null | undefined;
  last_name?: string | null | undefined;
  manager_id?: string | null | undefined;
  marital_status?:
    | HrisCreateEmployeeRequestDtoMaritalStatus$Outbound
    | null
    | undefined;
  name?: string | null | undefined;
  national_identity_number?:
    | HrisCreateEmployeeRequestDtoNationalIdentityNumber$Outbound
    | null
    | undefined;
  national_identity_numbers?:
    | Array<NationalIdentityNumberApiModel$Outbound>
    | null
    | undefined;
  passthrough?: { [k: string]: any } | null | undefined;
  personal_email?: string | null | undefined;
  personal_phone_number?: string | null | undefined;
  preferred_language?:
    | HrisCreateEmployeeRequestDtoPreferredLanguage$Outbound
    | null
    | undefined;
  start_date?: string | null | undefined;
  team_id?: string | null | undefined;
  termination_date?: string | null | undefined;
  work_email?: string | null | undefined;
  work_location?:
    | HrisCreateEmployeeRequestDtoWorkLocation$Outbound
    | null
    | undefined;
  work_phone_number?: string | null | undefined;
};

/** @internal */
export const HrisCreateEmployeeRequestDto$outboundSchema: z.ZodType<
  HrisCreateEmployeeRequestDto$Outbound,
  z.ZodTypeDef,
  HrisCreateEmployeeRequestDto
> = z.object({
  avatar: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoAvatar$outboundSchema),
  ).optional(),
  avatarUrl: z.nullable(z.string()).optional(),
  benefits: z.nullable(z.array(CreateHRISBenefit$outboundSchema)).optional(),
  birthday: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  citizenships: z.nullable(z.array(CountryCodeEnum$outboundSchema)).optional(),
  companyId: z.nullable(z.string()).optional(),
  companyName: z.nullable(z.string()).optional(),
  costCenters: z.nullable(z.array(CreateCostCenterApiModel$outboundSchema))
    .optional(),
  customFields: z.nullable(z.array(CustomFields$outboundSchema)).optional(),
  dateOfBirth: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  department: z.nullable(z.string()).optional(),
  departmentId: z.nullable(z.string()).optional(),
  displayName: z.nullable(z.string()).optional(),
  employeeNumber: z.nullable(z.string()).optional(),
  employment: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoEmployment$outboundSchema),
  ).optional(),
  employmentContractType: z.nullable(
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoEmploymentContractType$outboundSchema
    ),
  ).optional(),
  employmentStatus: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoEmploymentStatus$outboundSchema),
  ).optional(),
  employmentType: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoEmploymentType$outboundSchema),
  ).optional(),
  employments: z.nullable(z.array(CreateEmploymentApiModel$outboundSchema))
    .optional(),
  ethnicity: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoEthnicity$outboundSchema),
  ).optional(),
  firstName: z.nullable(z.string()).optional(),
  gender: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoGender$outboundSchema),
  ).optional(),
  hireDate: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  homeLocation: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoHomeLocation$outboundSchema),
  ).optional(),
  jobId: z.nullable(z.string()).optional(),
  jobTitle: z.nullable(z.string()).optional(),
  lastName: z.nullable(z.string()).optional(),
  managerId: z.nullable(z.string()).optional(),
  maritalStatus: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoMaritalStatus$outboundSchema),
  ).optional(),
  name: z.nullable(z.string()).optional(),
  nationalIdentityNumber: z.nullable(
    z.lazy(() =>
      HrisCreateEmployeeRequestDtoNationalIdentityNumber$outboundSchema
    ),
  ).optional(),
  nationalIdentityNumbers: z.nullable(
    z.array(NationalIdentityNumberApiModel$outboundSchema),
  ).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  personalEmail: z.nullable(z.string()).optional(),
  personalPhoneNumber: z.nullable(z.string()).optional(),
  preferredLanguage: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoPreferredLanguage$outboundSchema),
  ).optional(),
  startDate: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  teamId: z.nullable(z.string()).optional(),
  terminationDate: z.nullable(z.date().transform(v => v.toISOString()))
    .optional(),
  workEmail: z.nullable(z.string()).optional(),
  workLocation: z.nullable(
    z.lazy(() => HrisCreateEmployeeRequestDtoWorkLocation$outboundSchema),
  ).optional(),
  workPhoneNumber: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    avatarUrl: "avatar_url",
    companyId: "company_id",
    companyName: "company_name",
    costCenters: "cost_centers",
    customFields: "custom_fields",
    dateOfBirth: "date_of_birth",
    departmentId: "department_id",
    displayName: "display_name",
    employeeNumber: "employee_number",
    employmentContractType: "employment_contract_type",
    employmentStatus: "employment_status",
    employmentType: "employment_type",
    firstName: "first_name",
    hireDate: "hire_date",
    homeLocation: "home_location",
    jobId: "job_id",
    jobTitle: "job_title",
    lastName: "last_name",
    managerId: "manager_id",
    maritalStatus: "marital_status",
    nationalIdentityNumber: "national_identity_number",
    nationalIdentityNumbers: "national_identity_numbers",
    personalEmail: "personal_email",
    personalPhoneNumber: "personal_phone_number",
    preferredLanguage: "preferred_language",
    startDate: "start_date",
    teamId: "team_id",
    terminationDate: "termination_date",
    workEmail: "work_email",
    workLocation: "work_location",
    workPhoneNumber: "work_phone_number",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmployeeRequestDto$ {
  /** @deprecated use `HrisCreateEmployeeRequestDto$inboundSchema` instead. */
  export const inboundSchema = HrisCreateEmployeeRequestDto$inboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDto$outboundSchema` instead. */
  export const outboundSchema = HrisCreateEmployeeRequestDto$outboundSchema;
  /** @deprecated use `HrisCreateEmployeeRequestDto$Outbound` instead. */
  export type Outbound = HrisCreateEmployeeRequestDto$Outbound;
}

export function hrisCreateEmployeeRequestDtoToJSON(
  hrisCreateEmployeeRequestDto: HrisCreateEmployeeRequestDto,
): string {
  return JSON.stringify(
    HrisCreateEmployeeRequestDto$outboundSchema.parse(
      hrisCreateEmployeeRequestDto,
    ),
  );
}

export function hrisCreateEmployeeRequestDtoFromJSON(
  jsonString: string,
): SafeParseResult<HrisCreateEmployeeRequestDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HrisCreateEmployeeRequestDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmployeeRequestDto' from JSON`,
  );
}
