/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type Headers = {};

export type Raw = {};

export type ProviderErrorApiModel = {
    headers?: Headers | null | undefined;
    raw?: Raw | null | undefined;
    status?: number | null | undefined;
    url?: string | null | undefined;
};

/** @internal */
export namespace Headers$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<Headers, z.ZodTypeDef, Inbound> = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Headers> = z.object({});
}

/** @internal */
export namespace Raw$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<Raw, z.ZodTypeDef, Inbound> = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Raw> = z.object({});
}

/** @internal */
export namespace ProviderErrorApiModel$ {
    export type Inbound = {
        headers?: Headers$.Inbound | null | undefined;
        raw?: Raw$.Inbound | null | undefined;
        status?: number | null | undefined;
        url?: string | null | undefined;
    };

    export const inboundSchema: z.ZodType<ProviderErrorApiModel, z.ZodTypeDef, Inbound> = z
        .object({
            headers: z.nullable(z.lazy(() => Headers$.inboundSchema)).optional(),
            raw: z.nullable(z.lazy(() => Raw$.inboundSchema)).optional(),
            status: z.nullable(z.number()).optional(),
            url: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.headers === undefined ? null : { headers: v.headers }),
                ...(v.raw === undefined ? null : { raw: v.raw }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.url === undefined ? null : { url: v.url }),
            };
        });

    export type Outbound = {
        headers?: Headers$.Outbound | null | undefined;
        raw?: Raw$.Outbound | null | undefined;
        status?: number | null | undefined;
        url?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ProviderErrorApiModel> = z
        .object({
            headers: z.nullable(z.lazy(() => Headers$.outboundSchema)).optional(),
            raw: z.nullable(z.lazy(() => Raw$.outboundSchema)).optional(),
            status: z.nullable(z.number()).optional(),
            url: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.headers === undefined ? null : { headers: v.headers }),
                ...(v.raw === undefined ? null : { raw: v.raw }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.url === undefined ? null : { url: v.url }),
            };
        });
}
