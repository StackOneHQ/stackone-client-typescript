/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AccountingTaxRate,
  AccountingTaxRate$inboundSchema,
  AccountingTaxRate$Outbound,
  AccountingTaxRate$outboundSchema,
} from "./accountingtaxrate.js";
import {
  RawResponse,
  RawResponse$inboundSchema,
  RawResponse$Outbound,
  RawResponse$outboundSchema,
} from "./rawresponse.js";

export type AccountingTaxRatesPaginated = {
  data?: Array<AccountingTaxRate> | null | undefined;
  next?: string | null | undefined;
  raw?: Array<RawResponse> | null | undefined;
};

/** @internal */
export const AccountingTaxRatesPaginated$inboundSchema: z.ZodType<
  AccountingTaxRatesPaginated,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.nullable(z.array(AccountingTaxRate$inboundSchema)).optional(),
  next: z.nullable(z.string()).optional(),
  raw: z.nullable(z.array(RawResponse$inboundSchema)).optional(),
});

/** @internal */
export type AccountingTaxRatesPaginated$Outbound = {
  data?: Array<AccountingTaxRate$Outbound> | null | undefined;
  next?: string | null | undefined;
  raw?: Array<RawResponse$Outbound> | null | undefined;
};

/** @internal */
export const AccountingTaxRatesPaginated$outboundSchema: z.ZodType<
  AccountingTaxRatesPaginated$Outbound,
  z.ZodTypeDef,
  AccountingTaxRatesPaginated
> = z.object({
  data: z.nullable(z.array(AccountingTaxRate$outboundSchema)).optional(),
  next: z.nullable(z.string()).optional(),
  raw: z.nullable(z.array(RawResponse$outboundSchema)).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingTaxRatesPaginated$ {
  /** @deprecated use `AccountingTaxRatesPaginated$inboundSchema` instead. */
  export const inboundSchema = AccountingTaxRatesPaginated$inboundSchema;
  /** @deprecated use `AccountingTaxRatesPaginated$outboundSchema` instead. */
  export const outboundSchema = AccountingTaxRatesPaginated$outboundSchema;
  /** @deprecated use `AccountingTaxRatesPaginated$Outbound` instead. */
  export type Outbound = AccountingTaxRatesPaginated$Outbound;
}

export function accountingTaxRatesPaginatedToJSON(
  accountingTaxRatesPaginated: AccountingTaxRatesPaginated,
): string {
  return JSON.stringify(
    AccountingTaxRatesPaginated$outboundSchema.parse(
      accountingTaxRatesPaginated,
    ),
  );
}

export function accountingTaxRatesPaginatedFromJSON(
  jsonString: string,
): SafeParseResult<AccountingTaxRatesPaginated, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AccountingTaxRatesPaginated$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AccountingTaxRatesPaginated' from JSON`,
  );
}
