/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { CountryEnum, CountryEnum$ } from "./countryenum";
import { LocationTypeEnum, LocationTypeEnum$ } from "./locationtypeenum";
import { z } from "zod";

export type AccountAddress = {
    city?: string | undefined;
    /**
     * The country code
     */
    country?: CountryEnum | undefined;
    /**
     * The location type
     */
    locationType?: LocationTypeEnum | undefined;
    state?: string | undefined;
    street1?: string | undefined;
    street2?: string | undefined;
    zipCode?: string | undefined;
};

/** @internal */
export namespace AccountAddress$ {
    export type Inbound = {
        city?: string | undefined;
        country?: CountryEnum$.Inbound | undefined;
        location_type?: LocationTypeEnum$.Inbound | undefined;
        state?: string | undefined;
        street_1?: string | undefined;
        street_2?: string | undefined;
        zip_code?: string | undefined;
    };

    export const inboundSchema: z.ZodType<AccountAddress, z.ZodTypeDef, Inbound> = z
        .object({
            city: z.string().optional(),
            country: CountryEnum$.inboundSchema.optional(),
            location_type: LocationTypeEnum$.inboundSchema.optional(),
            state: z.string().optional(),
            street_1: z.string().optional(),
            street_2: z.string().optional(),
            zip_code: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.location_type === undefined ? null : { locationType: v.location_type }),
                ...(v.state === undefined ? null : { state: v.state }),
                ...(v.street_1 === undefined ? null : { street1: v.street_1 }),
                ...(v.street_2 === undefined ? null : { street2: v.street_2 }),
                ...(v.zip_code === undefined ? null : { zipCode: v.zip_code }),
            };
        });

    export type Outbound = {
        city?: string | undefined;
        country?: CountryEnum$.Outbound | undefined;
        location_type?: LocationTypeEnum$.Outbound | undefined;
        state?: string | undefined;
        street_1?: string | undefined;
        street_2?: string | undefined;
        zip_code?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AccountAddress> = z
        .object({
            city: z.string().optional(),
            country: CountryEnum$.outboundSchema.optional(),
            locationType: LocationTypeEnum$.outboundSchema.optional(),
            state: z.string().optional(),
            street1: z.string().optional(),
            street2: z.string().optional(),
            zipCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.locationType === undefined ? null : { location_type: v.locationType }),
                ...(v.state === undefined ? null : { state: v.state }),
                ...(v.street1 === undefined ? null : { street_1: v.street1 }),
                ...(v.street2 === undefined ? null : { street_2: v.street2 }),
                ...(v.zipCode === undefined ? null : { zip_code: v.zipCode }),
            };
        });
}
