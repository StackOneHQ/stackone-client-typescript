/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import {
    Application,
    Application$inboundSchema,
    Application$Outbound,
    Application$outboundSchema,
} from "./application.js";
import {
    RawResponse,
    RawResponse$inboundSchema,
    RawResponse$Outbound,
    RawResponse$outboundSchema,
} from "./rawresponse.js";
import * as z from "zod";

export type ApplicationsPaginated = {
    data: Array<Application>;
    next?: string | null | undefined;
    /**
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    nextPage?: string | null | undefined;
    raw?: Array<RawResponse> | null | undefined;
};

/** @internal */
export const ApplicationsPaginated$inboundSchema: z.ZodType<
    ApplicationsPaginated,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        data: z.array(Application$inboundSchema),
        next: z.nullable(z.string()).optional(),
        next_page: z.nullable(z.string()).optional(),
        raw: z.nullable(z.array(RawResponse$inboundSchema)).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            next_page: "nextPage",
        });
    });

/** @internal */
export type ApplicationsPaginated$Outbound = {
    data: Array<Application$Outbound>;
    next?: string | null | undefined;
    next_page?: string | null | undefined;
    raw?: Array<RawResponse$Outbound> | null | undefined;
};

/** @internal */
export const ApplicationsPaginated$outboundSchema: z.ZodType<
    ApplicationsPaginated$Outbound,
    z.ZodTypeDef,
    ApplicationsPaginated
> = z
    .object({
        data: z.array(Application$outboundSchema),
        next: z.nullable(z.string()).optional(),
        nextPage: z.nullable(z.string()).optional(),
        raw: z.nullable(z.array(RawResponse$outboundSchema)).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            nextPage: "next_page",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApplicationsPaginated$ {
    /** @deprecated use `ApplicationsPaginated$inboundSchema` instead. */
    export const inboundSchema = ApplicationsPaginated$inboundSchema;
    /** @deprecated use `ApplicationsPaginated$outboundSchema` instead. */
    export const outboundSchema = ApplicationsPaginated$outboundSchema;
    /** @deprecated use `ApplicationsPaginated$Outbound` instead. */
    export type Outbound = ApplicationsPaginated$Outbound;
}
