/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type EmailMessageContents = {
    body: string;
    from: string;
    preheader?: string | undefined;
    replyTo?: string | undefined;
    subject: string;
};

/** @internal */
export namespace EmailMessageContents$ {
    export type Inbound = {
        body: string;
        from: string;
        preheader?: string | undefined;
        "reply-to"?: string | undefined;
        subject: string;
    };

    export const inboundSchema: z.ZodType<EmailMessageContents, z.ZodTypeDef, Inbound> = z
        .object({
            body: z.string(),
            from: z.string(),
            preheader: z.string().optional(),
            "reply-to": z.string().optional(),
            subject: z.string(),
        })
        .transform((v) => {
            return {
                body: v.body,
                from: v.from,
                ...(v.preheader === undefined ? null : { preheader: v.preheader }),
                ...(v["reply-to"] === undefined ? null : { replyTo: v["reply-to"] }),
                subject: v.subject,
            };
        });

    export type Outbound = {
        body: string;
        from: string;
        preheader?: string | undefined;
        "reply-to"?: string | undefined;
        subject: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, EmailMessageContents> = z
        .object({
            body: z.string(),
            from: z.string(),
            preheader: z.string().optional(),
            replyTo: z.string().optional(),
            subject: z.string(),
        })
        .transform((v) => {
            return {
                body: v.body,
                from: v.from,
                ...(v.preheader === undefined ? null : { preheader: v.preheader }),
                ...(v.replyTo === undefined ? null : { "reply-to": v.replyTo }),
                subject: v.subject,
            };
        });
}
