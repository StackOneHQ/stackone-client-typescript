/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives";
import { Field, Field$ } from "./field";
import * as z from "zod";

export type ScorecardSection = {
    /**
     * The fields within the section
     */
    fields?: Array<Field> | null | undefined;
    /**
     * Unique identifier
     */
    id?: string | null | undefined;
    /**
     * The label of the section
     */
    label?: string | null | undefined;
    /**
     * Provider's unique identifier
     */
    remoteId?: string | null | undefined;
};

/** @internal */
export namespace ScorecardSection$ {
    export const inboundSchema: z.ZodType<ScorecardSection, z.ZodTypeDef, unknown> = z
        .object({
            fields: z.nullable(z.array(Field$.inboundSchema)).optional(),
            id: z.nullable(z.string()).optional(),
            label: z.nullable(z.string()).optional(),
            remote_id: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                remote_id: "remoteId",
            });
        });

    export type Outbound = {
        fields?: Array<Field$.Outbound> | null | undefined;
        id?: string | null | undefined;
        label?: string | null | undefined;
        remote_id?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ScorecardSection> = z
        .object({
            fields: z.nullable(z.array(Field$.outboundSchema)).optional(),
            id: z.nullable(z.string()).optional(),
            label: z.nullable(z.string()).optional(),
            remoteId: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                remoteId: "remote_id",
            });
        });
}
