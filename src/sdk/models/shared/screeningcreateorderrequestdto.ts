/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ScreeningOrderCandidate,
  ScreeningOrderCandidate$inboundSchema,
  ScreeningOrderCandidate$Outbound,
  ScreeningOrderCandidate$outboundSchema,
} from "./screeningordercandidate.js";

export type ScreeningCreateOrderRequestDto = {
  /**
   * Candidate information
   */
  candidate: ScreeningOrderCandidate;
  /**
   * Package ID
   */
  packageId: string;
  /**
   * Value to pass through to the provider
   */
  passthrough?: { [k: string]: any } | null | undefined;
  /**
   * Custom Unified Fields configured in your StackOne project
   */
  unifiedCustomFields?: { [k: string]: any } | null | undefined;
};

/** @internal */
export const ScreeningCreateOrderRequestDto$inboundSchema: z.ZodType<
  ScreeningCreateOrderRequestDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  candidate: ScreeningOrderCandidate$inboundSchema,
  package_id: z.string(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  unified_custom_fields: z.nullable(z.record(z.any())).optional(),
}).transform((v) => {
  return remap$(v, {
    "package_id": "packageId",
    "unified_custom_fields": "unifiedCustomFields",
  });
});

/** @internal */
export type ScreeningCreateOrderRequestDto$Outbound = {
  candidate: ScreeningOrderCandidate$Outbound;
  package_id: string;
  passthrough?: { [k: string]: any } | null | undefined;
  unified_custom_fields?: { [k: string]: any } | null | undefined;
};

/** @internal */
export const ScreeningCreateOrderRequestDto$outboundSchema: z.ZodType<
  ScreeningCreateOrderRequestDto$Outbound,
  z.ZodTypeDef,
  ScreeningCreateOrderRequestDto
> = z.object({
  candidate: ScreeningOrderCandidate$outboundSchema,
  packageId: z.string(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  unifiedCustomFields: z.nullable(z.record(z.any())).optional(),
}).transform((v) => {
  return remap$(v, {
    packageId: "package_id",
    unifiedCustomFields: "unified_custom_fields",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ScreeningCreateOrderRequestDto$ {
  /** @deprecated use `ScreeningCreateOrderRequestDto$inboundSchema` instead. */
  export const inboundSchema = ScreeningCreateOrderRequestDto$inboundSchema;
  /** @deprecated use `ScreeningCreateOrderRequestDto$outboundSchema` instead. */
  export const outboundSchema = ScreeningCreateOrderRequestDto$outboundSchema;
  /** @deprecated use `ScreeningCreateOrderRequestDto$Outbound` instead. */
  export type Outbound = ScreeningCreateOrderRequestDto$Outbound;
}

export function screeningCreateOrderRequestDtoToJSON(
  screeningCreateOrderRequestDto: ScreeningCreateOrderRequestDto,
): string {
  return JSON.stringify(
    ScreeningCreateOrderRequestDto$outboundSchema.parse(
      screeningCreateOrderRequestDto,
    ),
  );
}

export function screeningCreateOrderRequestDtoFromJSON(
  jsonString: string,
): SafeParseResult<ScreeningCreateOrderRequestDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ScreeningCreateOrderRequestDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ScreeningCreateOrderRequestDto' from JSON`,
  );
}
