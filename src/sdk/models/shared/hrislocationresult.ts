/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { HRISLocation, HRISLocation$ } from "./hrislocation.js";
import { RawResponse, RawResponse$ } from "./rawresponse.js";
import * as z from "zod";

export type HRISLocationResult = {
    data: HRISLocation;
    raw?: Array<RawResponse> | null | undefined;
};

/** @internal */
export namespace HRISLocationResult$ {
    export const inboundSchema: z.ZodType<HRISLocationResult, z.ZodTypeDef, unknown> = z.object({
        data: HRISLocation$.inboundSchema,
        raw: z.nullable(z.array(RawResponse$.inboundSchema)).optional(),
    });

    export type Outbound = {
        data: HRISLocation$.Outbound;
        raw?: Array<RawResponse$.Outbound> | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, HRISLocationResult> = z.object({
        data: HRISLocation$.outboundSchema,
        raw: z.nullable(z.array(RawResponse$.outboundSchema)).optional(),
    });
}
