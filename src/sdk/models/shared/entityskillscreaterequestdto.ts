/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type EntitySkillsCreateRequestDto4 = {};

export type EntitySkillsCreateRequestDtoSourceValue =
  | string
  | number
  | boolean
  | EntitySkillsCreateRequestDto4
  | Array<any>;

export enum EntitySkillsCreateRequestDtoValue {
  One = "1",
  Two = "2",
  Three = "3",
  Four = "4",
  Five = "5",
  UnmappedValue = "unmapped_value",
}
export type EntitySkillsCreateRequestDtoValueOpen = OpenEnum<
  typeof EntitySkillsCreateRequestDtoValue
>;

/**
 * The proficiency level of the skill
 */
export type EntitySkillsCreateRequestDtoMaximumProficiency = {
  /**
   * Unique identifier
   */
  id?: string | null | undefined;
  /**
   * The name associated with this proficiency
   */
  name?: string | null | undefined;
  /**
   * Provider's unique identifier
   */
  remoteId?: string | null | undefined;
  sourceValue?:
    | string
    | number
    | boolean
    | EntitySkillsCreateRequestDto4
    | Array<any>
    | null
    | undefined;
  value?: EntitySkillsCreateRequestDtoValueOpen | null | undefined;
};

export type EntitySkillsCreateRequestDtoSchemas4 = {};

export type EntitySkillsCreateRequestDtoSchemasSourceValue =
  | string
  | number
  | boolean
  | EntitySkillsCreateRequestDtoSchemas4
  | Array<any>;

export enum EntitySkillsCreateRequestDtoSchemasValue {
  One = "1",
  Two = "2",
  Three = "3",
  Four = "4",
  Five = "5",
  UnmappedValue = "unmapped_value",
}
export type EntitySkillsCreateRequestDtoSchemasValueOpen = OpenEnum<
  typeof EntitySkillsCreateRequestDtoSchemasValue
>;

/**
 * The proficiency level of the skill
 */
export type EntitySkillsCreateRequestDtoMinimumProficiency = {
  /**
   * Unique identifier
   */
  id?: string | null | undefined;
  /**
   * The name associated with this proficiency
   */
  name?: string | null | undefined;
  /**
   * Provider's unique identifier
   */
  remoteId?: string | null | undefined;
  sourceValue?:
    | string
    | number
    | boolean
    | EntitySkillsCreateRequestDtoSchemas4
    | Array<any>
    | null
    | undefined;
  value?: EntitySkillsCreateRequestDtoSchemasValueOpen | null | undefined;
};

export type EntitySkillsCreateRequestDto = {
  /**
   * The ID associated with this skill
   */
  id?: string | null | undefined;
  /**
   * The proficiency level of the skill
   */
  maximumProficiency?:
    | EntitySkillsCreateRequestDtoMaximumProficiency
    | null
    | undefined;
  /**
   * The proficiency level of the skill
   */
  minimumProficiency?:
    | EntitySkillsCreateRequestDtoMinimumProficiency
    | null
    | undefined;
  /**
   * The name associated with this skill
   */
  name?: string | null | undefined;
};

/** @internal */
export const EntitySkillsCreateRequestDto4$inboundSchema: z.ZodType<
  EntitySkillsCreateRequestDto4,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type EntitySkillsCreateRequestDto4$Outbound = {};

/** @internal */
export const EntitySkillsCreateRequestDto4$outboundSchema: z.ZodType<
  EntitySkillsCreateRequestDto4$Outbound,
  z.ZodTypeDef,
  EntitySkillsCreateRequestDto4
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EntitySkillsCreateRequestDto4$ {
  /** @deprecated use `EntitySkillsCreateRequestDto4$inboundSchema` instead. */
  export const inboundSchema = EntitySkillsCreateRequestDto4$inboundSchema;
  /** @deprecated use `EntitySkillsCreateRequestDto4$outboundSchema` instead. */
  export const outboundSchema = EntitySkillsCreateRequestDto4$outboundSchema;
  /** @deprecated use `EntitySkillsCreateRequestDto4$Outbound` instead. */
  export type Outbound = EntitySkillsCreateRequestDto4$Outbound;
}

export function entitySkillsCreateRequestDto4ToJSON(
  entitySkillsCreateRequestDto4: EntitySkillsCreateRequestDto4,
): string {
  return JSON.stringify(
    EntitySkillsCreateRequestDto4$outboundSchema.parse(
      entitySkillsCreateRequestDto4,
    ),
  );
}

export function entitySkillsCreateRequestDto4FromJSON(
  jsonString: string,
): SafeParseResult<EntitySkillsCreateRequestDto4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => EntitySkillsCreateRequestDto4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EntitySkillsCreateRequestDto4' from JSON`,
  );
}

/** @internal */
export const EntitySkillsCreateRequestDtoSourceValue$inboundSchema: z.ZodType<
  EntitySkillsCreateRequestDtoSourceValue,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.string(),
  z.number(),
  z.boolean(),
  z.lazy(() => EntitySkillsCreateRequestDto4$inboundSchema),
  z.array(z.any()),
]);

/** @internal */
export type EntitySkillsCreateRequestDtoSourceValue$Outbound =
  | string
  | number
  | boolean
  | EntitySkillsCreateRequestDto4$Outbound
  | Array<any>;

/** @internal */
export const EntitySkillsCreateRequestDtoSourceValue$outboundSchema: z.ZodType<
  EntitySkillsCreateRequestDtoSourceValue$Outbound,
  z.ZodTypeDef,
  EntitySkillsCreateRequestDtoSourceValue
> = z.union([
  z.string(),
  z.number(),
  z.boolean(),
  z.lazy(() => EntitySkillsCreateRequestDto4$outboundSchema),
  z.array(z.any()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EntitySkillsCreateRequestDtoSourceValue$ {
  /** @deprecated use `EntitySkillsCreateRequestDtoSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    EntitySkillsCreateRequestDtoSourceValue$inboundSchema;
  /** @deprecated use `EntitySkillsCreateRequestDtoSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    EntitySkillsCreateRequestDtoSourceValue$outboundSchema;
  /** @deprecated use `EntitySkillsCreateRequestDtoSourceValue$Outbound` instead. */
  export type Outbound = EntitySkillsCreateRequestDtoSourceValue$Outbound;
}

export function entitySkillsCreateRequestDtoSourceValueToJSON(
  entitySkillsCreateRequestDtoSourceValue:
    EntitySkillsCreateRequestDtoSourceValue,
): string {
  return JSON.stringify(
    EntitySkillsCreateRequestDtoSourceValue$outboundSchema.parse(
      entitySkillsCreateRequestDtoSourceValue,
    ),
  );
}

export function entitySkillsCreateRequestDtoSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  EntitySkillsCreateRequestDtoSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      EntitySkillsCreateRequestDtoSourceValue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'EntitySkillsCreateRequestDtoSourceValue' from JSON`,
  );
}

/** @internal */
export const EntitySkillsCreateRequestDtoValue$inboundSchema: z.ZodType<
  EntitySkillsCreateRequestDtoValueOpen,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(EntitySkillsCreateRequestDtoValue),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const EntitySkillsCreateRequestDtoValue$outboundSchema: z.ZodType<
  EntitySkillsCreateRequestDtoValueOpen,
  z.ZodTypeDef,
  EntitySkillsCreateRequestDtoValueOpen
> = z.union([
  z.nativeEnum(EntitySkillsCreateRequestDtoValue),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EntitySkillsCreateRequestDtoValue$ {
  /** @deprecated use `EntitySkillsCreateRequestDtoValue$inboundSchema` instead. */
  export const inboundSchema = EntitySkillsCreateRequestDtoValue$inboundSchema;
  /** @deprecated use `EntitySkillsCreateRequestDtoValue$outboundSchema` instead. */
  export const outboundSchema =
    EntitySkillsCreateRequestDtoValue$outboundSchema;
}

/** @internal */
export const EntitySkillsCreateRequestDtoMaximumProficiency$inboundSchema:
  z.ZodType<
    EntitySkillsCreateRequestDtoMaximumProficiency,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    name: z.nullable(z.string()).optional(),
    remote_id: z.nullable(z.string()).optional(),
    source_value: z.nullable(
      z.union([
        z.string(),
        z.number(),
        z.boolean(),
        z.lazy(() => EntitySkillsCreateRequestDto4$inboundSchema),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(EntitySkillsCreateRequestDtoValue$inboundSchema)
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      "remote_id": "remoteId",
      "source_value": "sourceValue",
    });
  });

/** @internal */
export type EntitySkillsCreateRequestDtoMaximumProficiency$Outbound = {
  id?: string | null | undefined;
  name?: string | null | undefined;
  remote_id?: string | null | undefined;
  source_value?:
    | string
    | number
    | boolean
    | EntitySkillsCreateRequestDto4$Outbound
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const EntitySkillsCreateRequestDtoMaximumProficiency$outboundSchema:
  z.ZodType<
    EntitySkillsCreateRequestDtoMaximumProficiency$Outbound,
    z.ZodTypeDef,
    EntitySkillsCreateRequestDtoMaximumProficiency
  > = z.object({
    id: z.nullable(z.string()).optional(),
    name: z.nullable(z.string()).optional(),
    remoteId: z.nullable(z.string()).optional(),
    sourceValue: z.nullable(
      z.union([
        z.string(),
        z.number(),
        z.boolean(),
        z.lazy(() => EntitySkillsCreateRequestDto4$outboundSchema),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(EntitySkillsCreateRequestDtoValue$outboundSchema)
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      remoteId: "remote_id",
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EntitySkillsCreateRequestDtoMaximumProficiency$ {
  /** @deprecated use `EntitySkillsCreateRequestDtoMaximumProficiency$inboundSchema` instead. */
  export const inboundSchema =
    EntitySkillsCreateRequestDtoMaximumProficiency$inboundSchema;
  /** @deprecated use `EntitySkillsCreateRequestDtoMaximumProficiency$outboundSchema` instead. */
  export const outboundSchema =
    EntitySkillsCreateRequestDtoMaximumProficiency$outboundSchema;
  /** @deprecated use `EntitySkillsCreateRequestDtoMaximumProficiency$Outbound` instead. */
  export type Outbound =
    EntitySkillsCreateRequestDtoMaximumProficiency$Outbound;
}

export function entitySkillsCreateRequestDtoMaximumProficiencyToJSON(
  entitySkillsCreateRequestDtoMaximumProficiency:
    EntitySkillsCreateRequestDtoMaximumProficiency,
): string {
  return JSON.stringify(
    EntitySkillsCreateRequestDtoMaximumProficiency$outboundSchema.parse(
      entitySkillsCreateRequestDtoMaximumProficiency,
    ),
  );
}

export function entitySkillsCreateRequestDtoMaximumProficiencyFromJSON(
  jsonString: string,
): SafeParseResult<
  EntitySkillsCreateRequestDtoMaximumProficiency,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      EntitySkillsCreateRequestDtoMaximumProficiency$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'EntitySkillsCreateRequestDtoMaximumProficiency' from JSON`,
  );
}

/** @internal */
export const EntitySkillsCreateRequestDtoSchemas4$inboundSchema: z.ZodType<
  EntitySkillsCreateRequestDtoSchemas4,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type EntitySkillsCreateRequestDtoSchemas4$Outbound = {};

/** @internal */
export const EntitySkillsCreateRequestDtoSchemas4$outboundSchema: z.ZodType<
  EntitySkillsCreateRequestDtoSchemas4$Outbound,
  z.ZodTypeDef,
  EntitySkillsCreateRequestDtoSchemas4
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EntitySkillsCreateRequestDtoSchemas4$ {
  /** @deprecated use `EntitySkillsCreateRequestDtoSchemas4$inboundSchema` instead. */
  export const inboundSchema =
    EntitySkillsCreateRequestDtoSchemas4$inboundSchema;
  /** @deprecated use `EntitySkillsCreateRequestDtoSchemas4$outboundSchema` instead. */
  export const outboundSchema =
    EntitySkillsCreateRequestDtoSchemas4$outboundSchema;
  /** @deprecated use `EntitySkillsCreateRequestDtoSchemas4$Outbound` instead. */
  export type Outbound = EntitySkillsCreateRequestDtoSchemas4$Outbound;
}

export function entitySkillsCreateRequestDtoSchemas4ToJSON(
  entitySkillsCreateRequestDtoSchemas4: EntitySkillsCreateRequestDtoSchemas4,
): string {
  return JSON.stringify(
    EntitySkillsCreateRequestDtoSchemas4$outboundSchema.parse(
      entitySkillsCreateRequestDtoSchemas4,
    ),
  );
}

export function entitySkillsCreateRequestDtoSchemas4FromJSON(
  jsonString: string,
): SafeParseResult<EntitySkillsCreateRequestDtoSchemas4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      EntitySkillsCreateRequestDtoSchemas4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EntitySkillsCreateRequestDtoSchemas4' from JSON`,
  );
}

/** @internal */
export const EntitySkillsCreateRequestDtoSchemasSourceValue$inboundSchema:
  z.ZodType<
    EntitySkillsCreateRequestDtoSchemasSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() => EntitySkillsCreateRequestDtoSchemas4$inboundSchema),
    z.array(z.any()),
  ]);

/** @internal */
export type EntitySkillsCreateRequestDtoSchemasSourceValue$Outbound =
  | string
  | number
  | boolean
  | EntitySkillsCreateRequestDtoSchemas4$Outbound
  | Array<any>;

/** @internal */
export const EntitySkillsCreateRequestDtoSchemasSourceValue$outboundSchema:
  z.ZodType<
    EntitySkillsCreateRequestDtoSchemasSourceValue$Outbound,
    z.ZodTypeDef,
    EntitySkillsCreateRequestDtoSchemasSourceValue
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() => EntitySkillsCreateRequestDtoSchemas4$outboundSchema),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EntitySkillsCreateRequestDtoSchemasSourceValue$ {
  /** @deprecated use `EntitySkillsCreateRequestDtoSchemasSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    EntitySkillsCreateRequestDtoSchemasSourceValue$inboundSchema;
  /** @deprecated use `EntitySkillsCreateRequestDtoSchemasSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    EntitySkillsCreateRequestDtoSchemasSourceValue$outboundSchema;
  /** @deprecated use `EntitySkillsCreateRequestDtoSchemasSourceValue$Outbound` instead. */
  export type Outbound =
    EntitySkillsCreateRequestDtoSchemasSourceValue$Outbound;
}

export function entitySkillsCreateRequestDtoSchemasSourceValueToJSON(
  entitySkillsCreateRequestDtoSchemasSourceValue:
    EntitySkillsCreateRequestDtoSchemasSourceValue,
): string {
  return JSON.stringify(
    EntitySkillsCreateRequestDtoSchemasSourceValue$outboundSchema.parse(
      entitySkillsCreateRequestDtoSchemasSourceValue,
    ),
  );
}

export function entitySkillsCreateRequestDtoSchemasSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  EntitySkillsCreateRequestDtoSchemasSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      EntitySkillsCreateRequestDtoSchemasSourceValue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'EntitySkillsCreateRequestDtoSchemasSourceValue' from JSON`,
  );
}

/** @internal */
export const EntitySkillsCreateRequestDtoSchemasValue$inboundSchema: z.ZodType<
  EntitySkillsCreateRequestDtoSchemasValueOpen,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(EntitySkillsCreateRequestDtoSchemasValue),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const EntitySkillsCreateRequestDtoSchemasValue$outboundSchema: z.ZodType<
  EntitySkillsCreateRequestDtoSchemasValueOpen,
  z.ZodTypeDef,
  EntitySkillsCreateRequestDtoSchemasValueOpen
> = z.union([
  z.nativeEnum(EntitySkillsCreateRequestDtoSchemasValue),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EntitySkillsCreateRequestDtoSchemasValue$ {
  /** @deprecated use `EntitySkillsCreateRequestDtoSchemasValue$inboundSchema` instead. */
  export const inboundSchema =
    EntitySkillsCreateRequestDtoSchemasValue$inboundSchema;
  /** @deprecated use `EntitySkillsCreateRequestDtoSchemasValue$outboundSchema` instead. */
  export const outboundSchema =
    EntitySkillsCreateRequestDtoSchemasValue$outboundSchema;
}

/** @internal */
export const EntitySkillsCreateRequestDtoMinimumProficiency$inboundSchema:
  z.ZodType<
    EntitySkillsCreateRequestDtoMinimumProficiency,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    name: z.nullable(z.string()).optional(),
    remote_id: z.nullable(z.string()).optional(),
    source_value: z.nullable(
      z.union([
        z.string(),
        z.number(),
        z.boolean(),
        z.lazy(() => EntitySkillsCreateRequestDtoSchemas4$inboundSchema),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(EntitySkillsCreateRequestDtoSchemasValue$inboundSchema)
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      "remote_id": "remoteId",
      "source_value": "sourceValue",
    });
  });

/** @internal */
export type EntitySkillsCreateRequestDtoMinimumProficiency$Outbound = {
  id?: string | null | undefined;
  name?: string | null | undefined;
  remote_id?: string | null | undefined;
  source_value?:
    | string
    | number
    | boolean
    | EntitySkillsCreateRequestDtoSchemas4$Outbound
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const EntitySkillsCreateRequestDtoMinimumProficiency$outboundSchema:
  z.ZodType<
    EntitySkillsCreateRequestDtoMinimumProficiency$Outbound,
    z.ZodTypeDef,
    EntitySkillsCreateRequestDtoMinimumProficiency
  > = z.object({
    id: z.nullable(z.string()).optional(),
    name: z.nullable(z.string()).optional(),
    remoteId: z.nullable(z.string()).optional(),
    sourceValue: z.nullable(
      z.union([
        z.string(),
        z.number(),
        z.boolean(),
        z.lazy(() => EntitySkillsCreateRequestDtoSchemas4$outboundSchema),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(EntitySkillsCreateRequestDtoSchemasValue$outboundSchema)
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      remoteId: "remote_id",
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EntitySkillsCreateRequestDtoMinimumProficiency$ {
  /** @deprecated use `EntitySkillsCreateRequestDtoMinimumProficiency$inboundSchema` instead. */
  export const inboundSchema =
    EntitySkillsCreateRequestDtoMinimumProficiency$inboundSchema;
  /** @deprecated use `EntitySkillsCreateRequestDtoMinimumProficiency$outboundSchema` instead. */
  export const outboundSchema =
    EntitySkillsCreateRequestDtoMinimumProficiency$outboundSchema;
  /** @deprecated use `EntitySkillsCreateRequestDtoMinimumProficiency$Outbound` instead. */
  export type Outbound =
    EntitySkillsCreateRequestDtoMinimumProficiency$Outbound;
}

export function entitySkillsCreateRequestDtoMinimumProficiencyToJSON(
  entitySkillsCreateRequestDtoMinimumProficiency:
    EntitySkillsCreateRequestDtoMinimumProficiency,
): string {
  return JSON.stringify(
    EntitySkillsCreateRequestDtoMinimumProficiency$outboundSchema.parse(
      entitySkillsCreateRequestDtoMinimumProficiency,
    ),
  );
}

export function entitySkillsCreateRequestDtoMinimumProficiencyFromJSON(
  jsonString: string,
): SafeParseResult<
  EntitySkillsCreateRequestDtoMinimumProficiency,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      EntitySkillsCreateRequestDtoMinimumProficiency$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'EntitySkillsCreateRequestDtoMinimumProficiency' from JSON`,
  );
}

/** @internal */
export const EntitySkillsCreateRequestDto$inboundSchema: z.ZodType<
  EntitySkillsCreateRequestDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.nullable(z.string()).optional(),
  maximum_proficiency: z.nullable(
    z.lazy(() => EntitySkillsCreateRequestDtoMaximumProficiency$inboundSchema),
  ).optional(),
  minimum_proficiency: z.nullable(
    z.lazy(() => EntitySkillsCreateRequestDtoMinimumProficiency$inboundSchema),
  ).optional(),
  name: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "maximum_proficiency": "maximumProficiency",
    "minimum_proficiency": "minimumProficiency",
  });
});

/** @internal */
export type EntitySkillsCreateRequestDto$Outbound = {
  id?: string | null | undefined;
  maximum_proficiency?:
    | EntitySkillsCreateRequestDtoMaximumProficiency$Outbound
    | null
    | undefined;
  minimum_proficiency?:
    | EntitySkillsCreateRequestDtoMinimumProficiency$Outbound
    | null
    | undefined;
  name?: string | null | undefined;
};

/** @internal */
export const EntitySkillsCreateRequestDto$outboundSchema: z.ZodType<
  EntitySkillsCreateRequestDto$Outbound,
  z.ZodTypeDef,
  EntitySkillsCreateRequestDto
> = z.object({
  id: z.nullable(z.string()).optional(),
  maximumProficiency: z.nullable(
    z.lazy(() => EntitySkillsCreateRequestDtoMaximumProficiency$outboundSchema),
  ).optional(),
  minimumProficiency: z.nullable(
    z.lazy(() => EntitySkillsCreateRequestDtoMinimumProficiency$outboundSchema),
  ).optional(),
  name: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    maximumProficiency: "maximum_proficiency",
    minimumProficiency: "minimum_proficiency",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EntitySkillsCreateRequestDto$ {
  /** @deprecated use `EntitySkillsCreateRequestDto$inboundSchema` instead. */
  export const inboundSchema = EntitySkillsCreateRequestDto$inboundSchema;
  /** @deprecated use `EntitySkillsCreateRequestDto$outboundSchema` instead. */
  export const outboundSchema = EntitySkillsCreateRequestDto$outboundSchema;
  /** @deprecated use `EntitySkillsCreateRequestDto$Outbound` instead. */
  export type Outbound = EntitySkillsCreateRequestDto$Outbound;
}

export function entitySkillsCreateRequestDtoToJSON(
  entitySkillsCreateRequestDto: EntitySkillsCreateRequestDto,
): string {
  return JSON.stringify(
    EntitySkillsCreateRequestDto$outboundSchema.parse(
      entitySkillsCreateRequestDto,
    ),
  );
}

export function entitySkillsCreateRequestDtoFromJSON(
  jsonString: string,
): SafeParseResult<EntitySkillsCreateRequestDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => EntitySkillsCreateRequestDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EntitySkillsCreateRequestDto' from JSON`,
  );
}
