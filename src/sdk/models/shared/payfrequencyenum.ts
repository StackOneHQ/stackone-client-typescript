/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

/**
 * The pay frequency of the job postings.
 */
export enum PayFrequencyEnumValue {
    Hourly = "hourly",
    Weekly = "weekly",
    BiWeekly = "bi_weekly",
    FourWeekly = "four_weekly",
    SemiMonthly = "semi_monthly",
    Monthly = "monthly",
    BiMonthly = "bi_monthly",
    Quarterly = "quarterly",
    SemiAnnually = "semi_annually",
    Yearly = "yearly",
    ThirteenMonthly = "thirteen_monthly",
    ProRata = "pro_rata",
    UnmappedValue = "unmapped_value",
    HalfYearly = "half_yearly",
}

export type PayFrequencyEnum = {
    /**
     * The source value of the pay frequency.
     */
    sourceValue: string;
    /**
     * The pay frequency of the job postings.
     */
    value: PayFrequencyEnumValue;
};

/** @internal */
export const PayFrequencyEnumValue$ = z.nativeEnum(PayFrequencyEnumValue);

/** @internal */
export namespace PayFrequencyEnum$ {
    export type Inbound = {
        source_value: string;
        value: PayFrequencyEnumValue;
    };

    export const inboundSchema: z.ZodType<PayFrequencyEnum, z.ZodTypeDef, Inbound> = z
        .object({
            source_value: z.string(),
            value: PayFrequencyEnumValue$,
        })
        .transform((v) => {
            return {
                sourceValue: v.source_value,
                value: v.value,
            };
        });

    export type Outbound = {
        source_value: string;
        value: PayFrequencyEnumValue;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PayFrequencyEnum> = z
        .object({
            sourceValue: z.string(),
            value: PayFrequencyEnumValue$,
        })
        .transform((v) => {
            return {
                source_value: v.sourceValue,
                value: v.value,
            };
        });
}
