/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type HrisCreateEmploymentRequestDto4 = {};

export type HrisCreateEmploymentRequestDtoSourceValue =
  | HrisCreateEmploymentRequestDto4
  | string
  | number
  | boolean
  | Array<any>;

export enum HrisCreateEmploymentRequestDtoValue {
  FullTime = "full_time",
  Shifts = "shifts",
  PartTime = "part_time",
  UnmappedValue = "unmapped_value",
}
export type HrisCreateEmploymentRequestDtoValueOpen = OpenEnum<
  typeof HrisCreateEmploymentRequestDtoValue
>;

/**
 * The employment work schedule type (e.g., full-time, part-time)
 */
export type HrisCreateEmploymentRequestDtoEmploymentContractType = {
  sourceValue?:
    | HrisCreateEmploymentRequestDto4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: HrisCreateEmploymentRequestDtoValueOpen | null | undefined;
};

export type HrisCreateEmploymentRequestDtoSchemas4 = {};

/**
 * The source value of the employment type.
 */
export type HrisCreateEmploymentRequestDtoSchemasSourceValue =
  | HrisCreateEmploymentRequestDtoSchemas4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The type of the employment.
 */
export enum HrisCreateEmploymentRequestDtoSchemasValue {
  Contractor = "contractor",
  Intern = "intern",
  Permanent = "permanent",
  Apprentice = "apprentice",
  Freelance = "freelance",
  Terminated = "terminated",
  Temporary = "temporary",
  Seasonal = "seasonal",
  Volunteer = "volunteer",
  Probation = "probation",
  Internal = "internal",
  External = "external",
  Expatriate = "expatriate",
  EmployerOfRecord = "employer_of_record",
  Casual = "casual",
  Programme = "Programme",
  UnmappedValue = "unmapped_value",
}
/**
 * The type of the employment.
 */
export type HrisCreateEmploymentRequestDtoSchemasValueOpen = OpenEnum<
  typeof HrisCreateEmploymentRequestDtoSchemasValue
>;

/**
 * The type of employment (e.g., contractor, permanent)
 */
export type HrisCreateEmploymentRequestDtoEmploymentType = {
  /**
   * The source value of the employment type.
   */
  sourceValue?:
    | HrisCreateEmploymentRequestDtoSchemas4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The type of the employment.
   */
  value?: HrisCreateEmploymentRequestDtoSchemasValueOpen | null | undefined;
};

export type HrisCreateEmploymentRequestDtoSchemasPayFrequency4 = {};

/**
 * The source value of the pay frequency.
 */
export type HrisCreateEmploymentRequestDtoSchemasPayFrequencySourceValue =
  | HrisCreateEmploymentRequestDtoSchemasPayFrequency4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The pay frequency of the job postings.
 */
export enum HrisCreateEmploymentRequestDtoSchemasPayFrequencyValue {
  Hourly = "hourly",
  Weekly = "weekly",
  BiWeekly = "bi_weekly",
  FourWeekly = "four_weekly",
  SemiMonthly = "semi_monthly",
  Monthly = "monthly",
  BiMonthly = "bi_monthly",
  Quarterly = "quarterly",
  SemiAnnually = "semi_annually",
  Yearly = "yearly",
  ThirteenMonthly = "thirteen_monthly",
  ProRata = "pro_rata",
  UnmappedValue = "unmapped_value",
  HalfYearly = "half_yearly",
  Daily = "daily",
}
/**
 * The pay frequency of the job postings.
 */
export type HrisCreateEmploymentRequestDtoSchemasPayFrequencyValueOpen =
  OpenEnum<typeof HrisCreateEmploymentRequestDtoSchemasPayFrequencyValue>;

/**
 * The pay frequency
 */
export type HrisCreateEmploymentRequestDtoPayFrequency = {
  /**
   * The source value of the pay frequency.
   */
  sourceValue?:
    | HrisCreateEmploymentRequestDtoSchemasPayFrequency4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The pay frequency of the job postings.
   */
  value?:
    | HrisCreateEmploymentRequestDtoSchemasPayFrequencyValueOpen
    | null
    | undefined;
};

export type HrisCreateEmploymentRequestDtoSchemasPayPeriod4 = {};

/**
 * The source value of the pay period.
 */
export type HrisCreateEmploymentRequestDtoSchemasPayPeriodSourceValue =
  | HrisCreateEmploymentRequestDtoSchemasPayPeriod4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The pay period of the job postings.
 */
export enum HrisCreateEmploymentRequestDtoSchemasPayPeriodValue {
  Hour = "hour",
  Day = "day",
  Week = "week",
  EveryTwoWeeks = "every_two_weeks",
  Month = "month",
  TwiceAMonth = "twice_a_month",
  EveryTwoMonths = "every_two_months",
  Quarter = "quarter",
  EverySixMonths = "every_six_months",
  Year = "year",
  OneOff = "one_off",
  None = "none",
  UnmappedValue = "unmapped_value",
}
/**
 * The pay period of the job postings.
 */
export type HrisCreateEmploymentRequestDtoSchemasPayPeriodValueOpen = OpenEnum<
  typeof HrisCreateEmploymentRequestDtoSchemasPayPeriodValue
>;

/**
 * The pay period
 */
export type HrisCreateEmploymentRequestDtoPayPeriod = {
  /**
   * The source value of the pay period.
   */
  sourceValue?:
    | HrisCreateEmploymentRequestDtoSchemasPayPeriod4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The pay period of the job postings.
   */
  value?:
    | HrisCreateEmploymentRequestDtoSchemasPayPeriodValueOpen
    | null
    | undefined;
};

export type HrisCreateEmploymentRequestDtoSchemasWorkTime4 = {};

export type HrisCreateEmploymentRequestDtoSchemasWorkTimeSourceValue =
  | HrisCreateEmploymentRequestDtoSchemasWorkTime4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The unified value for the duration unit.
 */
export enum HrisCreateEmploymentRequestDtoSchemasWorkTimeValue {
  Day = "day",
  Week = "week",
  Month = "month",
  Year = "year",
  UnmappedValue = "unmapped_value",
}
/**
 * The unified value for the duration unit.
 */
export type HrisCreateEmploymentRequestDtoSchemasWorkTimeValueOpen = OpenEnum<
  typeof HrisCreateEmploymentRequestDtoSchemasWorkTimeValue
>;

/**
 * The duration unit of the work time
 */
export type HrisCreateEmploymentRequestDtoDurationUnit = {
  sourceValue?:
    | HrisCreateEmploymentRequestDtoSchemasWorkTime4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The unified value for the duration unit.
   */
  value?:
    | HrisCreateEmploymentRequestDtoSchemasWorkTimeValueOpen
    | null
    | undefined;
};

export type HrisCreateEmploymentRequestDtoWorkTime = {
  /**
   * The work time duration in ISO 8601 duration format
   */
  duration?: string | null | undefined;
  /**
   * The duration unit of the work time
   */
  durationUnit?: HrisCreateEmploymentRequestDtoDurationUnit | null | undefined;
};

export type HrisCreateEmploymentRequestDto = {
  /**
   * The effective date of the employment contract
   */
  effectiveDate?: Date | null | undefined;
  /**
   * The employment work schedule type (e.g., full-time, part-time)
   */
  employmentContractType?:
    | HrisCreateEmploymentRequestDtoEmploymentContractType
    | null
    | undefined;
  /**
   * The type of employment (e.g., contractor, permanent)
   */
  employmentType?:
    | HrisCreateEmploymentRequestDtoEmploymentType
    | null
    | undefined;
  /**
   * Unique identifier
   */
  id?: string | null | undefined;
  /**
   * The employee job id
   */
  jobId?: string | null | undefined;
  /**
   * The job title of the employee
   */
  jobTitle?: string | null | undefined;
  /**
   * Value to pass through to the provider
   */
  passthrough?: { [k: string]: any } | null | undefined;
  /**
   * The currency used for pay
   */
  payCurrency?: string | null | undefined;
  /**
   * The pay frequency
   */
  payFrequency?: HrisCreateEmploymentRequestDtoPayFrequency | null | undefined;
  /**
   * The pay period
   */
  payPeriod?: HrisCreateEmploymentRequestDtoPayPeriod | null | undefined;
  /**
   * The pay rate for the employee
   */
  payRate?: string | null | undefined;
  /**
   * The payroll code of the employee
   */
  payrollCode?: string | null | undefined;
  /**
   * Custom Unified Fields configured in your StackOne project
   */
  unifiedCustomFields?: { [k: string]: any } | null | undefined;
  workTime?: HrisCreateEmploymentRequestDtoWorkTime | null | undefined;
};

/** @internal */
export const HrisCreateEmploymentRequestDto4$inboundSchema: z.ZodType<
  HrisCreateEmploymentRequestDto4,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type HrisCreateEmploymentRequestDto4$Outbound = {};

/** @internal */
export const HrisCreateEmploymentRequestDto4$outboundSchema: z.ZodType<
  HrisCreateEmploymentRequestDto4$Outbound,
  z.ZodTypeDef,
  HrisCreateEmploymentRequestDto4
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmploymentRequestDto4$ {
  /** @deprecated use `HrisCreateEmploymentRequestDto4$inboundSchema` instead. */
  export const inboundSchema = HrisCreateEmploymentRequestDto4$inboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDto4$outboundSchema` instead. */
  export const outboundSchema = HrisCreateEmploymentRequestDto4$outboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDto4$Outbound` instead. */
  export type Outbound = HrisCreateEmploymentRequestDto4$Outbound;
}

export function hrisCreateEmploymentRequestDto4ToJSON(
  hrisCreateEmploymentRequestDto4: HrisCreateEmploymentRequestDto4,
): string {
  return JSON.stringify(
    HrisCreateEmploymentRequestDto4$outboundSchema.parse(
      hrisCreateEmploymentRequestDto4,
    ),
  );
}

export function hrisCreateEmploymentRequestDto4FromJSON(
  jsonString: string,
): SafeParseResult<HrisCreateEmploymentRequestDto4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HrisCreateEmploymentRequestDto4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmploymentRequestDto4' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmploymentRequestDtoSourceValue$inboundSchema: z.ZodType<
  HrisCreateEmploymentRequestDtoSourceValue,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => HrisCreateEmploymentRequestDto4$inboundSchema),
  z.string(),
  z.number(),
  z.boolean(),
  z.array(z.any()),
]);

/** @internal */
export type HrisCreateEmploymentRequestDtoSourceValue$Outbound =
  | HrisCreateEmploymentRequestDto4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const HrisCreateEmploymentRequestDtoSourceValue$outboundSchema:
  z.ZodType<
    HrisCreateEmploymentRequestDtoSourceValue$Outbound,
    z.ZodTypeDef,
    HrisCreateEmploymentRequestDtoSourceValue
  > = z.union([
    z.lazy(() => HrisCreateEmploymentRequestDto4$outboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmploymentRequestDtoSourceValue$ {
  /** @deprecated use `HrisCreateEmploymentRequestDtoSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmploymentRequestDtoSourceValue$inboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmploymentRequestDtoSourceValue$outboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoSourceValue$Outbound` instead. */
  export type Outbound = HrisCreateEmploymentRequestDtoSourceValue$Outbound;
}

export function hrisCreateEmploymentRequestDtoSourceValueToJSON(
  hrisCreateEmploymentRequestDtoSourceValue:
    HrisCreateEmploymentRequestDtoSourceValue,
): string {
  return JSON.stringify(
    HrisCreateEmploymentRequestDtoSourceValue$outboundSchema.parse(
      hrisCreateEmploymentRequestDtoSourceValue,
    ),
  );
}

export function hrisCreateEmploymentRequestDtoSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmploymentRequestDtoSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmploymentRequestDtoSourceValue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmploymentRequestDtoSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmploymentRequestDtoValue$inboundSchema: z.ZodType<
  HrisCreateEmploymentRequestDtoValueOpen,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(HrisCreateEmploymentRequestDtoValue),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const HrisCreateEmploymentRequestDtoValue$outboundSchema: z.ZodType<
  HrisCreateEmploymentRequestDtoValueOpen,
  z.ZodTypeDef,
  HrisCreateEmploymentRequestDtoValueOpen
> = z.union([
  z.nativeEnum(HrisCreateEmploymentRequestDtoValue),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmploymentRequestDtoValue$ {
  /** @deprecated use `HrisCreateEmploymentRequestDtoValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmploymentRequestDtoValue$inboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmploymentRequestDtoValue$outboundSchema;
}

/** @internal */
export const HrisCreateEmploymentRequestDtoEmploymentContractType$inboundSchema:
  z.ZodType<
    HrisCreateEmploymentRequestDtoEmploymentContractType,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source_value: z.nullable(
      z.union([
        z.lazy(() => HrisCreateEmploymentRequestDto4$inboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(HrisCreateEmploymentRequestDtoValue$inboundSchema)
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      "source_value": "sourceValue",
    });
  });

/** @internal */
export type HrisCreateEmploymentRequestDtoEmploymentContractType$Outbound = {
  source_value?:
    | HrisCreateEmploymentRequestDto4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisCreateEmploymentRequestDtoEmploymentContractType$outboundSchema:
  z.ZodType<
    HrisCreateEmploymentRequestDtoEmploymentContractType$Outbound,
    z.ZodTypeDef,
    HrisCreateEmploymentRequestDtoEmploymentContractType
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.lazy(() => HrisCreateEmploymentRequestDto4$outboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(HrisCreateEmploymentRequestDtoValue$outboundSchema)
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmploymentRequestDtoEmploymentContractType$ {
  /** @deprecated use `HrisCreateEmploymentRequestDtoEmploymentContractType$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmploymentRequestDtoEmploymentContractType$inboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoEmploymentContractType$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmploymentRequestDtoEmploymentContractType$outboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoEmploymentContractType$Outbound` instead. */
  export type Outbound =
    HrisCreateEmploymentRequestDtoEmploymentContractType$Outbound;
}

export function hrisCreateEmploymentRequestDtoEmploymentContractTypeToJSON(
  hrisCreateEmploymentRequestDtoEmploymentContractType:
    HrisCreateEmploymentRequestDtoEmploymentContractType,
): string {
  return JSON.stringify(
    HrisCreateEmploymentRequestDtoEmploymentContractType$outboundSchema.parse(
      hrisCreateEmploymentRequestDtoEmploymentContractType,
    ),
  );
}

export function hrisCreateEmploymentRequestDtoEmploymentContractTypeFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmploymentRequestDtoEmploymentContractType,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmploymentRequestDtoEmploymentContractType$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmploymentRequestDtoEmploymentContractType' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmploymentRequestDtoSchemas4$inboundSchema: z.ZodType<
  HrisCreateEmploymentRequestDtoSchemas4,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type HrisCreateEmploymentRequestDtoSchemas4$Outbound = {};

/** @internal */
export const HrisCreateEmploymentRequestDtoSchemas4$outboundSchema: z.ZodType<
  HrisCreateEmploymentRequestDtoSchemas4$Outbound,
  z.ZodTypeDef,
  HrisCreateEmploymentRequestDtoSchemas4
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmploymentRequestDtoSchemas4$ {
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemas4$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmploymentRequestDtoSchemas4$inboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemas4$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmploymentRequestDtoSchemas4$outboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemas4$Outbound` instead. */
  export type Outbound = HrisCreateEmploymentRequestDtoSchemas4$Outbound;
}

export function hrisCreateEmploymentRequestDtoSchemas4ToJSON(
  hrisCreateEmploymentRequestDtoSchemas4:
    HrisCreateEmploymentRequestDtoSchemas4,
): string {
  return JSON.stringify(
    HrisCreateEmploymentRequestDtoSchemas4$outboundSchema.parse(
      hrisCreateEmploymentRequestDtoSchemas4,
    ),
  );
}

export function hrisCreateEmploymentRequestDtoSchemas4FromJSON(
  jsonString: string,
): SafeParseResult<HrisCreateEmploymentRequestDtoSchemas4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmploymentRequestDtoSchemas4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmploymentRequestDtoSchemas4' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmploymentRequestDtoSchemasSourceValue$inboundSchema:
  z.ZodType<
    HrisCreateEmploymentRequestDtoSchemasSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => HrisCreateEmploymentRequestDtoSchemas4$inboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisCreateEmploymentRequestDtoSchemasSourceValue$Outbound =
  | HrisCreateEmploymentRequestDtoSchemas4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const HrisCreateEmploymentRequestDtoSchemasSourceValue$outboundSchema:
  z.ZodType<
    HrisCreateEmploymentRequestDtoSchemasSourceValue$Outbound,
    z.ZodTypeDef,
    HrisCreateEmploymentRequestDtoSchemasSourceValue
  > = z.union([
    z.lazy(() => HrisCreateEmploymentRequestDtoSchemas4$outboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmploymentRequestDtoSchemasSourceValue$ {
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemasSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmploymentRequestDtoSchemasSourceValue$inboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemasSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmploymentRequestDtoSchemasSourceValue$outboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemasSourceValue$Outbound` instead. */
  export type Outbound =
    HrisCreateEmploymentRequestDtoSchemasSourceValue$Outbound;
}

export function hrisCreateEmploymentRequestDtoSchemasSourceValueToJSON(
  hrisCreateEmploymentRequestDtoSchemasSourceValue:
    HrisCreateEmploymentRequestDtoSchemasSourceValue,
): string {
  return JSON.stringify(
    HrisCreateEmploymentRequestDtoSchemasSourceValue$outboundSchema.parse(
      hrisCreateEmploymentRequestDtoSchemasSourceValue,
    ),
  );
}

export function hrisCreateEmploymentRequestDtoSchemasSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmploymentRequestDtoSchemasSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmploymentRequestDtoSchemasSourceValue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmploymentRequestDtoSchemasSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmploymentRequestDtoSchemasValue$inboundSchema:
  z.ZodType<
    HrisCreateEmploymentRequestDtoSchemasValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(HrisCreateEmploymentRequestDtoSchemasValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisCreateEmploymentRequestDtoSchemasValue$outboundSchema:
  z.ZodType<
    HrisCreateEmploymentRequestDtoSchemasValueOpen,
    z.ZodTypeDef,
    HrisCreateEmploymentRequestDtoSchemasValueOpen
  > = z.union([
    z.nativeEnum(HrisCreateEmploymentRequestDtoSchemasValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmploymentRequestDtoSchemasValue$ {
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemasValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmploymentRequestDtoSchemasValue$inboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemasValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmploymentRequestDtoSchemasValue$outboundSchema;
}

/** @internal */
export const HrisCreateEmploymentRequestDtoEmploymentType$inboundSchema:
  z.ZodType<
    HrisCreateEmploymentRequestDtoEmploymentType,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source_value: z.nullable(
      z.union([
        z.lazy(() => HrisCreateEmploymentRequestDtoSchemas4$inboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(HrisCreateEmploymentRequestDtoSchemasValue$inboundSchema)
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      "source_value": "sourceValue",
    });
  });

/** @internal */
export type HrisCreateEmploymentRequestDtoEmploymentType$Outbound = {
  source_value?:
    | HrisCreateEmploymentRequestDtoSchemas4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisCreateEmploymentRequestDtoEmploymentType$outboundSchema:
  z.ZodType<
    HrisCreateEmploymentRequestDtoEmploymentType$Outbound,
    z.ZodTypeDef,
    HrisCreateEmploymentRequestDtoEmploymentType
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.lazy(() => HrisCreateEmploymentRequestDtoSchemas4$outboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(HrisCreateEmploymentRequestDtoSchemasValue$outboundSchema)
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmploymentRequestDtoEmploymentType$ {
  /** @deprecated use `HrisCreateEmploymentRequestDtoEmploymentType$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmploymentRequestDtoEmploymentType$inboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoEmploymentType$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmploymentRequestDtoEmploymentType$outboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoEmploymentType$Outbound` instead. */
  export type Outbound = HrisCreateEmploymentRequestDtoEmploymentType$Outbound;
}

export function hrisCreateEmploymentRequestDtoEmploymentTypeToJSON(
  hrisCreateEmploymentRequestDtoEmploymentType:
    HrisCreateEmploymentRequestDtoEmploymentType,
): string {
  return JSON.stringify(
    HrisCreateEmploymentRequestDtoEmploymentType$outboundSchema.parse(
      hrisCreateEmploymentRequestDtoEmploymentType,
    ),
  );
}

export function hrisCreateEmploymentRequestDtoEmploymentTypeFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmploymentRequestDtoEmploymentType,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmploymentRequestDtoEmploymentType$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmploymentRequestDtoEmploymentType' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmploymentRequestDtoSchemasPayFrequency4$inboundSchema:
  z.ZodType<
    HrisCreateEmploymentRequestDtoSchemasPayFrequency4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisCreateEmploymentRequestDtoSchemasPayFrequency4$Outbound = {};

/** @internal */
export const HrisCreateEmploymentRequestDtoSchemasPayFrequency4$outboundSchema:
  z.ZodType<
    HrisCreateEmploymentRequestDtoSchemasPayFrequency4$Outbound,
    z.ZodTypeDef,
    HrisCreateEmploymentRequestDtoSchemasPayFrequency4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmploymentRequestDtoSchemasPayFrequency4$ {
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemasPayFrequency4$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmploymentRequestDtoSchemasPayFrequency4$inboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemasPayFrequency4$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmploymentRequestDtoSchemasPayFrequency4$outboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemasPayFrequency4$Outbound` instead. */
  export type Outbound =
    HrisCreateEmploymentRequestDtoSchemasPayFrequency4$Outbound;
}

export function hrisCreateEmploymentRequestDtoSchemasPayFrequency4ToJSON(
  hrisCreateEmploymentRequestDtoSchemasPayFrequency4:
    HrisCreateEmploymentRequestDtoSchemasPayFrequency4,
): string {
  return JSON.stringify(
    HrisCreateEmploymentRequestDtoSchemasPayFrequency4$outboundSchema.parse(
      hrisCreateEmploymentRequestDtoSchemasPayFrequency4,
    ),
  );
}

export function hrisCreateEmploymentRequestDtoSchemasPayFrequency4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmploymentRequestDtoSchemasPayFrequency4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmploymentRequestDtoSchemasPayFrequency4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmploymentRequestDtoSchemasPayFrequency4' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmploymentRequestDtoSchemasPayFrequencySourceValue$inboundSchema:
  z.ZodType<
    HrisCreateEmploymentRequestDtoSchemasPayFrequencySourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      HrisCreateEmploymentRequestDtoSchemasPayFrequency4$inboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisCreateEmploymentRequestDtoSchemasPayFrequencySourceValue$Outbound =
  | HrisCreateEmploymentRequestDtoSchemasPayFrequency4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const HrisCreateEmploymentRequestDtoSchemasPayFrequencySourceValue$outboundSchema:
  z.ZodType<
    HrisCreateEmploymentRequestDtoSchemasPayFrequencySourceValue$Outbound,
    z.ZodTypeDef,
    HrisCreateEmploymentRequestDtoSchemasPayFrequencySourceValue
  > = z.union([
    z.lazy(() =>
      HrisCreateEmploymentRequestDtoSchemasPayFrequency4$outboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmploymentRequestDtoSchemasPayFrequencySourceValue$ {
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemasPayFrequencySourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmploymentRequestDtoSchemasPayFrequencySourceValue$inboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemasPayFrequencySourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmploymentRequestDtoSchemasPayFrequencySourceValue$outboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemasPayFrequencySourceValue$Outbound` instead. */
  export type Outbound =
    HrisCreateEmploymentRequestDtoSchemasPayFrequencySourceValue$Outbound;
}

export function hrisCreateEmploymentRequestDtoSchemasPayFrequencySourceValueToJSON(
  hrisCreateEmploymentRequestDtoSchemasPayFrequencySourceValue:
    HrisCreateEmploymentRequestDtoSchemasPayFrequencySourceValue,
): string {
  return JSON.stringify(
    HrisCreateEmploymentRequestDtoSchemasPayFrequencySourceValue$outboundSchema
      .parse(hrisCreateEmploymentRequestDtoSchemasPayFrequencySourceValue),
  );
}

export function hrisCreateEmploymentRequestDtoSchemasPayFrequencySourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmploymentRequestDtoSchemasPayFrequencySourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmploymentRequestDtoSchemasPayFrequencySourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmploymentRequestDtoSchemasPayFrequencySourceValue' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmploymentRequestDtoSchemasPayFrequencyValue$inboundSchema:
  z.ZodType<
    HrisCreateEmploymentRequestDtoSchemasPayFrequencyValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(HrisCreateEmploymentRequestDtoSchemasPayFrequencyValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisCreateEmploymentRequestDtoSchemasPayFrequencyValue$outboundSchema:
  z.ZodType<
    HrisCreateEmploymentRequestDtoSchemasPayFrequencyValueOpen,
    z.ZodTypeDef,
    HrisCreateEmploymentRequestDtoSchemasPayFrequencyValueOpen
  > = z.union([
    z.nativeEnum(HrisCreateEmploymentRequestDtoSchemasPayFrequencyValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmploymentRequestDtoSchemasPayFrequencyValue$ {
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemasPayFrequencyValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmploymentRequestDtoSchemasPayFrequencyValue$inboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemasPayFrequencyValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmploymentRequestDtoSchemasPayFrequencyValue$outboundSchema;
}

/** @internal */
export const HrisCreateEmploymentRequestDtoPayFrequency$inboundSchema:
  z.ZodType<HrisCreateEmploymentRequestDtoPayFrequency, z.ZodTypeDef, unknown> =
    z.object({
      source_value: z.nullable(
        z.union([
          z.lazy(() =>
            HrisCreateEmploymentRequestDtoSchemasPayFrequency4$inboundSchema
          ),
          z.string(),
          z.number(),
          z.boolean(),
          z.array(z.any()),
        ]),
      ).optional(),
      value: z.nullable(
        HrisCreateEmploymentRequestDtoSchemasPayFrequencyValue$inboundSchema,
      ).optional(),
    }).transform((v) => {
      return remap$(v, {
        "source_value": "sourceValue",
      });
    });

/** @internal */
export type HrisCreateEmploymentRequestDtoPayFrequency$Outbound = {
  source_value?:
    | HrisCreateEmploymentRequestDtoSchemasPayFrequency4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisCreateEmploymentRequestDtoPayFrequency$outboundSchema:
  z.ZodType<
    HrisCreateEmploymentRequestDtoPayFrequency$Outbound,
    z.ZodTypeDef,
    HrisCreateEmploymentRequestDtoPayFrequency
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.lazy(() =>
          HrisCreateEmploymentRequestDtoSchemasPayFrequency4$outboundSchema
        ),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      HrisCreateEmploymentRequestDtoSchemasPayFrequencyValue$outboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmploymentRequestDtoPayFrequency$ {
  /** @deprecated use `HrisCreateEmploymentRequestDtoPayFrequency$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmploymentRequestDtoPayFrequency$inboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoPayFrequency$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmploymentRequestDtoPayFrequency$outboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoPayFrequency$Outbound` instead. */
  export type Outbound = HrisCreateEmploymentRequestDtoPayFrequency$Outbound;
}

export function hrisCreateEmploymentRequestDtoPayFrequencyToJSON(
  hrisCreateEmploymentRequestDtoPayFrequency:
    HrisCreateEmploymentRequestDtoPayFrequency,
): string {
  return JSON.stringify(
    HrisCreateEmploymentRequestDtoPayFrequency$outboundSchema.parse(
      hrisCreateEmploymentRequestDtoPayFrequency,
    ),
  );
}

export function hrisCreateEmploymentRequestDtoPayFrequencyFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmploymentRequestDtoPayFrequency,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmploymentRequestDtoPayFrequency$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmploymentRequestDtoPayFrequency' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmploymentRequestDtoSchemasPayPeriod4$inboundSchema:
  z.ZodType<
    HrisCreateEmploymentRequestDtoSchemasPayPeriod4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisCreateEmploymentRequestDtoSchemasPayPeriod4$Outbound = {};

/** @internal */
export const HrisCreateEmploymentRequestDtoSchemasPayPeriod4$outboundSchema:
  z.ZodType<
    HrisCreateEmploymentRequestDtoSchemasPayPeriod4$Outbound,
    z.ZodTypeDef,
    HrisCreateEmploymentRequestDtoSchemasPayPeriod4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmploymentRequestDtoSchemasPayPeriod4$ {
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemasPayPeriod4$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmploymentRequestDtoSchemasPayPeriod4$inboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemasPayPeriod4$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmploymentRequestDtoSchemasPayPeriod4$outboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemasPayPeriod4$Outbound` instead. */
  export type Outbound =
    HrisCreateEmploymentRequestDtoSchemasPayPeriod4$Outbound;
}

export function hrisCreateEmploymentRequestDtoSchemasPayPeriod4ToJSON(
  hrisCreateEmploymentRequestDtoSchemasPayPeriod4:
    HrisCreateEmploymentRequestDtoSchemasPayPeriod4,
): string {
  return JSON.stringify(
    HrisCreateEmploymentRequestDtoSchemasPayPeriod4$outboundSchema.parse(
      hrisCreateEmploymentRequestDtoSchemasPayPeriod4,
    ),
  );
}

export function hrisCreateEmploymentRequestDtoSchemasPayPeriod4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmploymentRequestDtoSchemasPayPeriod4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmploymentRequestDtoSchemasPayPeriod4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmploymentRequestDtoSchemasPayPeriod4' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmploymentRequestDtoSchemasPayPeriodSourceValue$inboundSchema:
  z.ZodType<
    HrisCreateEmploymentRequestDtoSchemasPayPeriodSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => HrisCreateEmploymentRequestDtoSchemasPayPeriod4$inboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisCreateEmploymentRequestDtoSchemasPayPeriodSourceValue$Outbound =
  | HrisCreateEmploymentRequestDtoSchemasPayPeriod4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const HrisCreateEmploymentRequestDtoSchemasPayPeriodSourceValue$outboundSchema:
  z.ZodType<
    HrisCreateEmploymentRequestDtoSchemasPayPeriodSourceValue$Outbound,
    z.ZodTypeDef,
    HrisCreateEmploymentRequestDtoSchemasPayPeriodSourceValue
  > = z.union([
    z.lazy(() =>
      HrisCreateEmploymentRequestDtoSchemasPayPeriod4$outboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmploymentRequestDtoSchemasPayPeriodSourceValue$ {
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemasPayPeriodSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmploymentRequestDtoSchemasPayPeriodSourceValue$inboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemasPayPeriodSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmploymentRequestDtoSchemasPayPeriodSourceValue$outboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemasPayPeriodSourceValue$Outbound` instead. */
  export type Outbound =
    HrisCreateEmploymentRequestDtoSchemasPayPeriodSourceValue$Outbound;
}

export function hrisCreateEmploymentRequestDtoSchemasPayPeriodSourceValueToJSON(
  hrisCreateEmploymentRequestDtoSchemasPayPeriodSourceValue:
    HrisCreateEmploymentRequestDtoSchemasPayPeriodSourceValue,
): string {
  return JSON.stringify(
    HrisCreateEmploymentRequestDtoSchemasPayPeriodSourceValue$outboundSchema
      .parse(hrisCreateEmploymentRequestDtoSchemasPayPeriodSourceValue),
  );
}

export function hrisCreateEmploymentRequestDtoSchemasPayPeriodSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmploymentRequestDtoSchemasPayPeriodSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmploymentRequestDtoSchemasPayPeriodSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmploymentRequestDtoSchemasPayPeriodSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmploymentRequestDtoSchemasPayPeriodValue$inboundSchema:
  z.ZodType<
    HrisCreateEmploymentRequestDtoSchemasPayPeriodValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(HrisCreateEmploymentRequestDtoSchemasPayPeriodValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisCreateEmploymentRequestDtoSchemasPayPeriodValue$outboundSchema:
  z.ZodType<
    HrisCreateEmploymentRequestDtoSchemasPayPeriodValueOpen,
    z.ZodTypeDef,
    HrisCreateEmploymentRequestDtoSchemasPayPeriodValueOpen
  > = z.union([
    z.nativeEnum(HrisCreateEmploymentRequestDtoSchemasPayPeriodValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmploymentRequestDtoSchemasPayPeriodValue$ {
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemasPayPeriodValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmploymentRequestDtoSchemasPayPeriodValue$inboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemasPayPeriodValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmploymentRequestDtoSchemasPayPeriodValue$outboundSchema;
}

/** @internal */
export const HrisCreateEmploymentRequestDtoPayPeriod$inboundSchema: z.ZodType<
  HrisCreateEmploymentRequestDtoPayPeriod,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() =>
        HrisCreateEmploymentRequestDtoSchemasPayPeriod4$inboundSchema
      ),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisCreateEmploymentRequestDtoSchemasPayPeriodValue$inboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type HrisCreateEmploymentRequestDtoPayPeriod$Outbound = {
  source_value?:
    | HrisCreateEmploymentRequestDtoSchemasPayPeriod4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisCreateEmploymentRequestDtoPayPeriod$outboundSchema: z.ZodType<
  HrisCreateEmploymentRequestDtoPayPeriod$Outbound,
  z.ZodTypeDef,
  HrisCreateEmploymentRequestDtoPayPeriod
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() =>
        HrisCreateEmploymentRequestDtoSchemasPayPeriod4$outboundSchema
      ),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisCreateEmploymentRequestDtoSchemasPayPeriodValue$outboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmploymentRequestDtoPayPeriod$ {
  /** @deprecated use `HrisCreateEmploymentRequestDtoPayPeriod$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmploymentRequestDtoPayPeriod$inboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoPayPeriod$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmploymentRequestDtoPayPeriod$outboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoPayPeriod$Outbound` instead. */
  export type Outbound = HrisCreateEmploymentRequestDtoPayPeriod$Outbound;
}

export function hrisCreateEmploymentRequestDtoPayPeriodToJSON(
  hrisCreateEmploymentRequestDtoPayPeriod:
    HrisCreateEmploymentRequestDtoPayPeriod,
): string {
  return JSON.stringify(
    HrisCreateEmploymentRequestDtoPayPeriod$outboundSchema.parse(
      hrisCreateEmploymentRequestDtoPayPeriod,
    ),
  );
}

export function hrisCreateEmploymentRequestDtoPayPeriodFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmploymentRequestDtoPayPeriod,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmploymentRequestDtoPayPeriod$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmploymentRequestDtoPayPeriod' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmploymentRequestDtoSchemasWorkTime4$inboundSchema:
  z.ZodType<
    HrisCreateEmploymentRequestDtoSchemasWorkTime4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisCreateEmploymentRequestDtoSchemasWorkTime4$Outbound = {};

/** @internal */
export const HrisCreateEmploymentRequestDtoSchemasWorkTime4$outboundSchema:
  z.ZodType<
    HrisCreateEmploymentRequestDtoSchemasWorkTime4$Outbound,
    z.ZodTypeDef,
    HrisCreateEmploymentRequestDtoSchemasWorkTime4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmploymentRequestDtoSchemasWorkTime4$ {
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemasWorkTime4$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmploymentRequestDtoSchemasWorkTime4$inboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemasWorkTime4$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmploymentRequestDtoSchemasWorkTime4$outboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemasWorkTime4$Outbound` instead. */
  export type Outbound =
    HrisCreateEmploymentRequestDtoSchemasWorkTime4$Outbound;
}

export function hrisCreateEmploymentRequestDtoSchemasWorkTime4ToJSON(
  hrisCreateEmploymentRequestDtoSchemasWorkTime4:
    HrisCreateEmploymentRequestDtoSchemasWorkTime4,
): string {
  return JSON.stringify(
    HrisCreateEmploymentRequestDtoSchemasWorkTime4$outboundSchema.parse(
      hrisCreateEmploymentRequestDtoSchemasWorkTime4,
    ),
  );
}

export function hrisCreateEmploymentRequestDtoSchemasWorkTime4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmploymentRequestDtoSchemasWorkTime4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmploymentRequestDtoSchemasWorkTime4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmploymentRequestDtoSchemasWorkTime4' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmploymentRequestDtoSchemasWorkTimeSourceValue$inboundSchema:
  z.ZodType<
    HrisCreateEmploymentRequestDtoSchemasWorkTimeSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => HrisCreateEmploymentRequestDtoSchemasWorkTime4$inboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisCreateEmploymentRequestDtoSchemasWorkTimeSourceValue$Outbound =
  | HrisCreateEmploymentRequestDtoSchemasWorkTime4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const HrisCreateEmploymentRequestDtoSchemasWorkTimeSourceValue$outboundSchema:
  z.ZodType<
    HrisCreateEmploymentRequestDtoSchemasWorkTimeSourceValue$Outbound,
    z.ZodTypeDef,
    HrisCreateEmploymentRequestDtoSchemasWorkTimeSourceValue
  > = z.union([
    z.lazy(() => HrisCreateEmploymentRequestDtoSchemasWorkTime4$outboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmploymentRequestDtoSchemasWorkTimeSourceValue$ {
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemasWorkTimeSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmploymentRequestDtoSchemasWorkTimeSourceValue$inboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemasWorkTimeSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmploymentRequestDtoSchemasWorkTimeSourceValue$outboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemasWorkTimeSourceValue$Outbound` instead. */
  export type Outbound =
    HrisCreateEmploymentRequestDtoSchemasWorkTimeSourceValue$Outbound;
}

export function hrisCreateEmploymentRequestDtoSchemasWorkTimeSourceValueToJSON(
  hrisCreateEmploymentRequestDtoSchemasWorkTimeSourceValue:
    HrisCreateEmploymentRequestDtoSchemasWorkTimeSourceValue,
): string {
  return JSON.stringify(
    HrisCreateEmploymentRequestDtoSchemasWorkTimeSourceValue$outboundSchema
      .parse(hrisCreateEmploymentRequestDtoSchemasWorkTimeSourceValue),
  );
}

export function hrisCreateEmploymentRequestDtoSchemasWorkTimeSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmploymentRequestDtoSchemasWorkTimeSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmploymentRequestDtoSchemasWorkTimeSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmploymentRequestDtoSchemasWorkTimeSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmploymentRequestDtoSchemasWorkTimeValue$inboundSchema:
  z.ZodType<
    HrisCreateEmploymentRequestDtoSchemasWorkTimeValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(HrisCreateEmploymentRequestDtoSchemasWorkTimeValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisCreateEmploymentRequestDtoSchemasWorkTimeValue$outboundSchema:
  z.ZodType<
    HrisCreateEmploymentRequestDtoSchemasWorkTimeValueOpen,
    z.ZodTypeDef,
    HrisCreateEmploymentRequestDtoSchemasWorkTimeValueOpen
  > = z.union([
    z.nativeEnum(HrisCreateEmploymentRequestDtoSchemasWorkTimeValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmploymentRequestDtoSchemasWorkTimeValue$ {
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemasWorkTimeValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmploymentRequestDtoSchemasWorkTimeValue$inboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoSchemasWorkTimeValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmploymentRequestDtoSchemasWorkTimeValue$outboundSchema;
}

/** @internal */
export const HrisCreateEmploymentRequestDtoDurationUnit$inboundSchema:
  z.ZodType<HrisCreateEmploymentRequestDtoDurationUnit, z.ZodTypeDef, unknown> =
    z.object({
      source_value: z.nullable(
        z.union([
          z.lazy(() =>
            HrisCreateEmploymentRequestDtoSchemasWorkTime4$inboundSchema
          ),
          z.string(),
          z.number(),
          z.boolean(),
          z.array(z.any()),
        ]),
      ).optional(),
      value: z.nullable(
        HrisCreateEmploymentRequestDtoSchemasWorkTimeValue$inboundSchema,
      ).optional(),
    }).transform((v) => {
      return remap$(v, {
        "source_value": "sourceValue",
      });
    });

/** @internal */
export type HrisCreateEmploymentRequestDtoDurationUnit$Outbound = {
  source_value?:
    | HrisCreateEmploymentRequestDtoSchemasWorkTime4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisCreateEmploymentRequestDtoDurationUnit$outboundSchema:
  z.ZodType<
    HrisCreateEmploymentRequestDtoDurationUnit$Outbound,
    z.ZodTypeDef,
    HrisCreateEmploymentRequestDtoDurationUnit
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.lazy(() =>
          HrisCreateEmploymentRequestDtoSchemasWorkTime4$outboundSchema
        ),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      HrisCreateEmploymentRequestDtoSchemasWorkTimeValue$outboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmploymentRequestDtoDurationUnit$ {
  /** @deprecated use `HrisCreateEmploymentRequestDtoDurationUnit$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmploymentRequestDtoDurationUnit$inboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoDurationUnit$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmploymentRequestDtoDurationUnit$outboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoDurationUnit$Outbound` instead. */
  export type Outbound = HrisCreateEmploymentRequestDtoDurationUnit$Outbound;
}

export function hrisCreateEmploymentRequestDtoDurationUnitToJSON(
  hrisCreateEmploymentRequestDtoDurationUnit:
    HrisCreateEmploymentRequestDtoDurationUnit,
): string {
  return JSON.stringify(
    HrisCreateEmploymentRequestDtoDurationUnit$outboundSchema.parse(
      hrisCreateEmploymentRequestDtoDurationUnit,
    ),
  );
}

export function hrisCreateEmploymentRequestDtoDurationUnitFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisCreateEmploymentRequestDtoDurationUnit,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmploymentRequestDtoDurationUnit$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisCreateEmploymentRequestDtoDurationUnit' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmploymentRequestDtoWorkTime$inboundSchema: z.ZodType<
  HrisCreateEmploymentRequestDtoWorkTime,
  z.ZodTypeDef,
  unknown
> = z.object({
  duration: z.nullable(z.string()).optional(),
  duration_unit: z.nullable(
    z.lazy(() => HrisCreateEmploymentRequestDtoDurationUnit$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "duration_unit": "durationUnit",
  });
});

/** @internal */
export type HrisCreateEmploymentRequestDtoWorkTime$Outbound = {
  duration?: string | null | undefined;
  duration_unit?:
    | HrisCreateEmploymentRequestDtoDurationUnit$Outbound
    | null
    | undefined;
};

/** @internal */
export const HrisCreateEmploymentRequestDtoWorkTime$outboundSchema: z.ZodType<
  HrisCreateEmploymentRequestDtoWorkTime$Outbound,
  z.ZodTypeDef,
  HrisCreateEmploymentRequestDtoWorkTime
> = z.object({
  duration: z.nullable(z.string()).optional(),
  durationUnit: z.nullable(
    z.lazy(() => HrisCreateEmploymentRequestDtoDurationUnit$outboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    durationUnit: "duration_unit",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmploymentRequestDtoWorkTime$ {
  /** @deprecated use `HrisCreateEmploymentRequestDtoWorkTime$inboundSchema` instead. */
  export const inboundSchema =
    HrisCreateEmploymentRequestDtoWorkTime$inboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoWorkTime$outboundSchema` instead. */
  export const outboundSchema =
    HrisCreateEmploymentRequestDtoWorkTime$outboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDtoWorkTime$Outbound` instead. */
  export type Outbound = HrisCreateEmploymentRequestDtoWorkTime$Outbound;
}

export function hrisCreateEmploymentRequestDtoWorkTimeToJSON(
  hrisCreateEmploymentRequestDtoWorkTime:
    HrisCreateEmploymentRequestDtoWorkTime,
): string {
  return JSON.stringify(
    HrisCreateEmploymentRequestDtoWorkTime$outboundSchema.parse(
      hrisCreateEmploymentRequestDtoWorkTime,
    ),
  );
}

export function hrisCreateEmploymentRequestDtoWorkTimeFromJSON(
  jsonString: string,
): SafeParseResult<HrisCreateEmploymentRequestDtoWorkTime, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      HrisCreateEmploymentRequestDtoWorkTime$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmploymentRequestDtoWorkTime' from JSON`,
  );
}

/** @internal */
export const HrisCreateEmploymentRequestDto$inboundSchema: z.ZodType<
  HrisCreateEmploymentRequestDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  effective_date: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  employment_contract_type: z.nullable(
    z.lazy(() =>
      HrisCreateEmploymentRequestDtoEmploymentContractType$inboundSchema
    ),
  ).optional(),
  employment_type: z.nullable(
    z.lazy(() => HrisCreateEmploymentRequestDtoEmploymentType$inboundSchema),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  job_id: z.nullable(z.string()).optional(),
  job_title: z.nullable(z.string()).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  pay_currency: z.nullable(z.string()).optional(),
  pay_frequency: z.nullable(
    z.lazy(() => HrisCreateEmploymentRequestDtoPayFrequency$inboundSchema),
  ).optional(),
  pay_period: z.nullable(
    z.lazy(() => HrisCreateEmploymentRequestDtoPayPeriod$inboundSchema),
  ).optional(),
  pay_rate: z.nullable(z.string()).optional(),
  payroll_code: z.nullable(z.string()).optional(),
  unified_custom_fields: z.nullable(z.record(z.any())).optional(),
  work_time: z.nullable(
    z.lazy(() => HrisCreateEmploymentRequestDtoWorkTime$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "effective_date": "effectiveDate",
    "employment_contract_type": "employmentContractType",
    "employment_type": "employmentType",
    "job_id": "jobId",
    "job_title": "jobTitle",
    "pay_currency": "payCurrency",
    "pay_frequency": "payFrequency",
    "pay_period": "payPeriod",
    "pay_rate": "payRate",
    "payroll_code": "payrollCode",
    "unified_custom_fields": "unifiedCustomFields",
    "work_time": "workTime",
  });
});

/** @internal */
export type HrisCreateEmploymentRequestDto$Outbound = {
  effective_date?: string | null | undefined;
  employment_contract_type?:
    | HrisCreateEmploymentRequestDtoEmploymentContractType$Outbound
    | null
    | undefined;
  employment_type?:
    | HrisCreateEmploymentRequestDtoEmploymentType$Outbound
    | null
    | undefined;
  id?: string | null | undefined;
  job_id?: string | null | undefined;
  job_title?: string | null | undefined;
  passthrough?: { [k: string]: any } | null | undefined;
  pay_currency?: string | null | undefined;
  pay_frequency?:
    | HrisCreateEmploymentRequestDtoPayFrequency$Outbound
    | null
    | undefined;
  pay_period?:
    | HrisCreateEmploymentRequestDtoPayPeriod$Outbound
    | null
    | undefined;
  pay_rate?: string | null | undefined;
  payroll_code?: string | null | undefined;
  unified_custom_fields?: { [k: string]: any } | null | undefined;
  work_time?:
    | HrisCreateEmploymentRequestDtoWorkTime$Outbound
    | null
    | undefined;
};

/** @internal */
export const HrisCreateEmploymentRequestDto$outboundSchema: z.ZodType<
  HrisCreateEmploymentRequestDto$Outbound,
  z.ZodTypeDef,
  HrisCreateEmploymentRequestDto
> = z.object({
  effectiveDate: z.nullable(z.date().transform(v => v.toISOString()))
    .optional(),
  employmentContractType: z.nullable(
    z.lazy(() =>
      HrisCreateEmploymentRequestDtoEmploymentContractType$outboundSchema
    ),
  ).optional(),
  employmentType: z.nullable(
    z.lazy(() => HrisCreateEmploymentRequestDtoEmploymentType$outboundSchema),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  jobId: z.nullable(z.string()).optional(),
  jobTitle: z.nullable(z.string()).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  payCurrency: z.nullable(z.string()).optional(),
  payFrequency: z.nullable(
    z.lazy(() => HrisCreateEmploymentRequestDtoPayFrequency$outboundSchema),
  ).optional(),
  payPeriod: z.nullable(
    z.lazy(() => HrisCreateEmploymentRequestDtoPayPeriod$outboundSchema),
  ).optional(),
  payRate: z.nullable(z.string()).optional(),
  payrollCode: z.nullable(z.string()).optional(),
  unifiedCustomFields: z.nullable(z.record(z.any())).optional(),
  workTime: z.nullable(
    z.lazy(() => HrisCreateEmploymentRequestDtoWorkTime$outboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    effectiveDate: "effective_date",
    employmentContractType: "employment_contract_type",
    employmentType: "employment_type",
    jobId: "job_id",
    jobTitle: "job_title",
    payCurrency: "pay_currency",
    payFrequency: "pay_frequency",
    payPeriod: "pay_period",
    payRate: "pay_rate",
    payrollCode: "payroll_code",
    unifiedCustomFields: "unified_custom_fields",
    workTime: "work_time",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisCreateEmploymentRequestDto$ {
  /** @deprecated use `HrisCreateEmploymentRequestDto$inboundSchema` instead. */
  export const inboundSchema = HrisCreateEmploymentRequestDto$inboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDto$outboundSchema` instead. */
  export const outboundSchema = HrisCreateEmploymentRequestDto$outboundSchema;
  /** @deprecated use `HrisCreateEmploymentRequestDto$Outbound` instead. */
  export type Outbound = HrisCreateEmploymentRequestDto$Outbound;
}

export function hrisCreateEmploymentRequestDtoToJSON(
  hrisCreateEmploymentRequestDto: HrisCreateEmploymentRequestDto,
): string {
  return JSON.stringify(
    HrisCreateEmploymentRequestDto$outboundSchema.parse(
      hrisCreateEmploymentRequestDto,
    ),
  );
}

export function hrisCreateEmploymentRequestDtoFromJSON(
  jsonString: string,
): SafeParseResult<HrisCreateEmploymentRequestDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HrisCreateEmploymentRequestDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisCreateEmploymentRequestDto' from JSON`,
  );
}
