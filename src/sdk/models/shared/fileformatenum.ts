/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type FileFormatEnum4 = {};

export type FileFormatEnumSourceValue = FileFormatEnum4 | string | number | boolean;

export enum FileFormatEnumValue {
    Pdf = "pdf",
    Jpg = "jpg",
    Csv = "csv",
    Xlsx = "xlsx",
    Xls = "xls",
    Ppt = "ppt",
    Png = "png",
    Doc = "doc",
    Htm = "htm",
    Mle = "mle",
    Rtf = "rtf",
    Bmp = "bmp",
    Docx = "docx",
    Pptx = "pptx",
    Txt = "txt",
    Jpeg = "jpeg",
    UnmappedValue = "unmapped_value",
}

export type FileFormatEnum = {
    sourceValue?: FileFormatEnum4 | string | number | boolean | null | undefined;
    value?: FileFormatEnumValue | null | undefined;
};

/** @internal */
export namespace FileFormatEnum4$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<FileFormatEnum4, z.ZodTypeDef, Inbound> = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, FileFormatEnum4> = z.object({});
}

/** @internal */
export namespace FileFormatEnumSourceValue$ {
    export type Inbound = FileFormatEnum4$.Inbound | string | number | boolean;

    export type Outbound = FileFormatEnum4$.Outbound | string | number | boolean;

    export const inboundSchema: z.ZodType<FileFormatEnumSourceValue, z.ZodTypeDef, Inbound> =
        z.union([
            z.lazy(() => FileFormatEnum4$.inboundSchema),
            z.string(),
            z.number(),
            z.boolean(),
        ]);

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, FileFormatEnumSourceValue> =
        z.union([
            z.lazy(() => FileFormatEnum4$.outboundSchema),
            z.string(),
            z.number(),
            z.boolean(),
        ]);
}

/** @internal */
export const FileFormatEnumValue$ = z.nativeEnum(FileFormatEnumValue);

/** @internal */
export namespace FileFormatEnum$ {
    export type Inbound = {
        source_value?: FileFormatEnum4$.Inbound | string | number | boolean | null | undefined;
        value?: FileFormatEnumValue | null | undefined;
    };

    export const inboundSchema: z.ZodType<FileFormatEnum, z.ZodTypeDef, Inbound> = z
        .object({
            source_value: z
                .nullable(
                    z.union([
                        z.lazy(() => FileFormatEnum4$.inboundSchema),
                        z.string(),
                        z.number(),
                        z.boolean(),
                    ])
                )
                .optional(),
            value: z.nullable(FileFormatEnumValue$).optional(),
        })
        .transform((v) => {
            return {
                ...(v.source_value === undefined ? null : { sourceValue: v.source_value }),
                ...(v.value === undefined ? null : { value: v.value }),
            };
        });

    export type Outbound = {
        source_value?: FileFormatEnum4$.Outbound | string | number | boolean | null | undefined;
        value?: FileFormatEnumValue | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, FileFormatEnum> = z
        .object({
            sourceValue: z
                .nullable(
                    z.union([
                        z.lazy(() => FileFormatEnum4$.outboundSchema),
                        z.string(),
                        z.number(),
                        z.boolean(),
                    ])
                )
                .optional(),
            value: z.nullable(FileFormatEnumValue$).optional(),
        })
        .transform((v) => {
            return {
                ...(v.sourceValue === undefined ? null : { source_value: v.sourceValue }),
                ...(v.value === undefined ? null : { value: v.value }),
            };
        });
}
