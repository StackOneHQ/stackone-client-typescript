/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UnifiedWarningApiModel = {
  message?: string | null | undefined;
};

/** @internal */
export const UnifiedWarningApiModel$inboundSchema: z.ZodType<
  UnifiedWarningApiModel,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.nullable(z.string()).optional(),
});

/** @internal */
export type UnifiedWarningApiModel$Outbound = {
  message?: string | null | undefined;
};

/** @internal */
export const UnifiedWarningApiModel$outboundSchema: z.ZodType<
  UnifiedWarningApiModel$Outbound,
  z.ZodTypeDef,
  UnifiedWarningApiModel
> = z.object({
  message: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedWarningApiModel$ {
  /** @deprecated use `UnifiedWarningApiModel$inboundSchema` instead. */
  export const inboundSchema = UnifiedWarningApiModel$inboundSchema;
  /** @deprecated use `UnifiedWarningApiModel$outboundSchema` instead. */
  export const outboundSchema = UnifiedWarningApiModel$outboundSchema;
  /** @deprecated use `UnifiedWarningApiModel$Outbound` instead. */
  export type Outbound = UnifiedWarningApiModel$Outbound;
}

export function unifiedWarningApiModelToJSON(
  unifiedWarningApiModel: UnifiedWarningApiModel,
): string {
  return JSON.stringify(
    UnifiedWarningApiModel$outboundSchema.parse(unifiedWarningApiModel),
  );
}

export function unifiedWarningApiModelFromJSON(
  jsonString: string,
): SafeParseResult<UnifiedWarningApiModel, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UnifiedWarningApiModel$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UnifiedWarningApiModel' from JSON`,
  );
}
