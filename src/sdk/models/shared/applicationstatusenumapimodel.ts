/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

/**
 * The status of the application.
 */
export enum ApplicationStatusEnumApiModelValue {
    Active = "active",
    Assessment = "assessment",
    BackgroundCheck = "background_check",
    Converted = "converted",
    DeclinedByCandidate = "declined_by_candidate",
    Hired = "hired",
    Interview = "interview",
    Lead = "lead",
    Offer = "offer",
    ReferenceCheck = "reference_check",
    Rejected = "rejected",
    Review = "review",
    Screen = "screen",
    UnmappedValue = "unmapped_value",
}

export type ApplicationStatusEnumApiModel = {
    /**
     * The source value of the application status.
     */
    sourceValue: string;
    /**
     * The status of the application.
     */
    value: ApplicationStatusEnumApiModelValue;
};

/** @internal */
export const ApplicationStatusEnumApiModelValue$ = z.nativeEnum(ApplicationStatusEnumApiModelValue);

/** @internal */
export namespace ApplicationStatusEnumApiModel$ {
    export type Inbound = {
        source_value: string;
        value: ApplicationStatusEnumApiModelValue;
    };

    export const inboundSchema: z.ZodType<ApplicationStatusEnumApiModel, z.ZodTypeDef, Inbound> = z
        .object({
            source_value: z.string(),
            value: ApplicationStatusEnumApiModelValue$,
        })
        .transform((v) => {
            return {
                sourceValue: v.source_value,
                value: v.value,
            };
        });

    export type Outbound = {
        source_value: string;
        value: ApplicationStatusEnumApiModelValue;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ApplicationStatusEnumApiModel> =
        z
            .object({
                sourceValue: z.string(),
                value: ApplicationStatusEnumApiModelValue$,
            })
            .transform((v) => {
                return {
                    source_value: v.sourceValue,
                    value: v.value,
                };
            });
}
