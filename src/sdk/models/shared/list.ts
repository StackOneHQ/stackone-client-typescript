/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ListTypeEnum } from "./listtypeenum";
import { Expose, Transform, Type } from "class-transformer";

export class List extends SpeakeasyBase {
    /**
     * Timestamp when the list was created
     */
    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    @SpeakeasyMetadata()
    @Expose({ name: "items" })
    items?: string[];

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    /**
     * The list type
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    @Type(() => ListTypeEnum)
    type?: ListTypeEnum;

    /**
     * Timestamp when the list was last updated
     */
    @SpeakeasyMetadata()
    @Expose({ name: "updated_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updatedAt?: Date;
}
