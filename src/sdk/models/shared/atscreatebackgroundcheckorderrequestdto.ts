/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  CandidateEmail,
  CandidateEmail$inboundSchema,
  CandidateEmail$Outbound,
  CandidateEmail$outboundSchema,
} from "./candidateemail.js";
import {
  JobHiringTeam,
  JobHiringTeam$inboundSchema,
  JobHiringTeam$Outbound,
  JobHiringTeam$outboundSchema,
} from "./jobhiringteam.js";
import {
  Package,
  Package$inboundSchema,
  Package$Outbound,
  Package$outboundSchema,
} from "./package.js";

export type AtsCreateBackgroundCheckOrderRequestDto4 = {};

/**
 * The source value of the application status.
 */
export type AtsCreateBackgroundCheckOrderRequestDtoSourceValue =
  | AtsCreateBackgroundCheckOrderRequestDto4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The status of the application.
 */
export enum AtsCreateBackgroundCheckOrderRequestDtoValue {
  Active = "active",
  Assessment = "assessment",
  BackgroundCheck = "background_check",
  Converted = "converted",
  DeclinedByCandidate = "declined_by_candidate",
  Hired = "hired",
  Interview = "interview",
  Lead = "lead",
  Offer = "offer",
  ReferenceCheck = "reference_check",
  Rejected = "rejected",
  Review = "review",
  Screen = "screen",
  New = "new",
  Onboarding = "onboarding",
  Created = "created",
  Accepted = "accepted",
  ShortList = "short_list",
  Approved = "approved",
  UnmappedValue = "unmapped_value",
}
/**
 * The status of the application.
 */
export type AtsCreateBackgroundCheckOrderRequestDtoValueOpen = OpenEnum<
  typeof AtsCreateBackgroundCheckOrderRequestDtoValue
>;

export type AtsCreateBackgroundCheckOrderRequestDtoApplicationStatus = {
  /**
   * The source value of the application status.
   */
  sourceValue?:
    | AtsCreateBackgroundCheckOrderRequestDto4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The status of the application.
   */
  value?: AtsCreateBackgroundCheckOrderRequestDtoValueOpen | null | undefined;
};

export type AtsCreateBackgroundCheckOrderRequestDtoApplication = {
  applicationStatus?:
    | AtsCreateBackgroundCheckOrderRequestDtoApplicationStatus
    | null
    | undefined;
  /**
   * Unique identifier
   */
  id?: string | null | undefined;
  /**
   * Value to pass through to the provider
   */
  passthrough?: { [k: string]: any } | null | undefined;
  /**
   * Provider's unique identifier
   */
  remoteId?: string | null | undefined;
};

export type AtsCreateBackgroundCheckOrderRequestDtoCandidate = {
  /**
   * List of candidate emails
   */
  emails?: Array<CandidateEmail> | null | undefined;
  /**
   * Candidate first name
   */
  firstName?: string | null | undefined;
  /**
   * Unique identifier
   */
  id?: string | null | undefined;
  /**
   * Candidate last name
   */
  lastName?: string | null | undefined;
  /**
   * Value to pass through to the provider
   */
  passthrough?: { [k: string]: any } | null | undefined;
  /**
   * Candidate profile url
   */
  profileUrl?: string | null | undefined;
  /**
   * Provider's unique identifier
   */
  remoteId?: string | null | undefined;
};

export type AtsCreateBackgroundCheckOrderRequestDtoJob = {
  /**
   * Hiring team for the job.
   */
  hiringTeam?: Array<JobHiringTeam> | null | undefined;
  /**
   * Unique identifier
   */
  id?: string | null | undefined;
  /**
   * Value to pass through to the provider
   */
  passthrough?: { [k: string]: any } | null | undefined;
  /**
   * Provider's unique identifier
   */
  remoteId?: string | null | undefined;
  /**
   * Title of the job
   */
  title?: string | null | undefined;
};

export type AtsCreateBackgroundCheckOrderRequestDtoPackage = {
  /**
   * Package description
   */
  description?: string | null | undefined;
  /**
   * Unique identifier
   */
  id?: string | null | undefined;
  /**
   * Package name
   */
  name?: string | null | undefined;
  /**
   * Provider's unique identifier
   */
  remoteId?: string | null | undefined;
  /**
   * Package tests
   */
  tests?: Array<Package> | null | undefined;
};

export type Requester = {
  /**
   * Email of the hiring team member.
   */
  email?: string | null | undefined;
  /**
   * First name of the hiring team member.
   */
  firstName?: string | null | undefined;
  /**
   * Last name of the hiring team member.
   */
  lastName?: string | null | undefined;
  /**
   * Provider's unique identifier of the user
   */
  remoteUserId?: string | null | undefined;
  /**
   * Role of the hiring team member.
   */
  role?: string | null | undefined;
  /**
   * User ID of the hiring team member.
   */
  userId?: string | null | undefined;
};

export type AtsCreateBackgroundCheckOrderRequestDto = {
  application?:
    | AtsCreateBackgroundCheckOrderRequestDtoApplication
    | null
    | undefined;
  candidate?:
    | AtsCreateBackgroundCheckOrderRequestDtoCandidate
    | null
    | undefined;
  /**
   * Unique identifier
   */
  id?: string | null | undefined;
  job?: AtsCreateBackgroundCheckOrderRequestDtoJob | null | undefined;
  package?: AtsCreateBackgroundCheckOrderRequestDtoPackage | null | undefined;
  /**
   * Value to pass through to the provider
   */
  passthrough?: { [k: string]: any } | null | undefined;
  /**
   * Provider's unique identifier
   */
  remoteId?: string | null | undefined;
  requester?: Requester | null | undefined;
  /**
   * Results update url
   */
  resultsUpdateUrl?: string | null | undefined;
};

/** @internal */
export const AtsCreateBackgroundCheckOrderRequestDto4$inboundSchema: z.ZodType<
  AtsCreateBackgroundCheckOrderRequestDto4,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type AtsCreateBackgroundCheckOrderRequestDto4$Outbound = {};

/** @internal */
export const AtsCreateBackgroundCheckOrderRequestDto4$outboundSchema: z.ZodType<
  AtsCreateBackgroundCheckOrderRequestDto4$Outbound,
  z.ZodTypeDef,
  AtsCreateBackgroundCheckOrderRequestDto4
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsCreateBackgroundCheckOrderRequestDto4$ {
  /** @deprecated use `AtsCreateBackgroundCheckOrderRequestDto4$inboundSchema` instead. */
  export const inboundSchema =
    AtsCreateBackgroundCheckOrderRequestDto4$inboundSchema;
  /** @deprecated use `AtsCreateBackgroundCheckOrderRequestDto4$outboundSchema` instead. */
  export const outboundSchema =
    AtsCreateBackgroundCheckOrderRequestDto4$outboundSchema;
  /** @deprecated use `AtsCreateBackgroundCheckOrderRequestDto4$Outbound` instead. */
  export type Outbound = AtsCreateBackgroundCheckOrderRequestDto4$Outbound;
}

export function atsCreateBackgroundCheckOrderRequestDto4ToJSON(
  atsCreateBackgroundCheckOrderRequestDto4:
    AtsCreateBackgroundCheckOrderRequestDto4,
): string {
  return JSON.stringify(
    AtsCreateBackgroundCheckOrderRequestDto4$outboundSchema.parse(
      atsCreateBackgroundCheckOrderRequestDto4,
    ),
  );
}

export function atsCreateBackgroundCheckOrderRequestDto4FromJSON(
  jsonString: string,
): SafeParseResult<
  AtsCreateBackgroundCheckOrderRequestDto4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AtsCreateBackgroundCheckOrderRequestDto4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AtsCreateBackgroundCheckOrderRequestDto4' from JSON`,
  );
}

/** @internal */
export const AtsCreateBackgroundCheckOrderRequestDtoSourceValue$inboundSchema:
  z.ZodType<
    AtsCreateBackgroundCheckOrderRequestDtoSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => AtsCreateBackgroundCheckOrderRequestDto4$inboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type AtsCreateBackgroundCheckOrderRequestDtoSourceValue$Outbound =
  | AtsCreateBackgroundCheckOrderRequestDto4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const AtsCreateBackgroundCheckOrderRequestDtoSourceValue$outboundSchema:
  z.ZodType<
    AtsCreateBackgroundCheckOrderRequestDtoSourceValue$Outbound,
    z.ZodTypeDef,
    AtsCreateBackgroundCheckOrderRequestDtoSourceValue
  > = z.union([
    z.lazy(() => AtsCreateBackgroundCheckOrderRequestDto4$outboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsCreateBackgroundCheckOrderRequestDtoSourceValue$ {
  /** @deprecated use `AtsCreateBackgroundCheckOrderRequestDtoSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    AtsCreateBackgroundCheckOrderRequestDtoSourceValue$inboundSchema;
  /** @deprecated use `AtsCreateBackgroundCheckOrderRequestDtoSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    AtsCreateBackgroundCheckOrderRequestDtoSourceValue$outboundSchema;
  /** @deprecated use `AtsCreateBackgroundCheckOrderRequestDtoSourceValue$Outbound` instead. */
  export type Outbound =
    AtsCreateBackgroundCheckOrderRequestDtoSourceValue$Outbound;
}

export function atsCreateBackgroundCheckOrderRequestDtoSourceValueToJSON(
  atsCreateBackgroundCheckOrderRequestDtoSourceValue:
    AtsCreateBackgroundCheckOrderRequestDtoSourceValue,
): string {
  return JSON.stringify(
    AtsCreateBackgroundCheckOrderRequestDtoSourceValue$outboundSchema.parse(
      atsCreateBackgroundCheckOrderRequestDtoSourceValue,
    ),
  );
}

export function atsCreateBackgroundCheckOrderRequestDtoSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  AtsCreateBackgroundCheckOrderRequestDtoSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AtsCreateBackgroundCheckOrderRequestDtoSourceValue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AtsCreateBackgroundCheckOrderRequestDtoSourceValue' from JSON`,
  );
}

/** @internal */
export const AtsCreateBackgroundCheckOrderRequestDtoValue$inboundSchema:
  z.ZodType<
    AtsCreateBackgroundCheckOrderRequestDtoValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(AtsCreateBackgroundCheckOrderRequestDtoValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const AtsCreateBackgroundCheckOrderRequestDtoValue$outboundSchema:
  z.ZodType<
    AtsCreateBackgroundCheckOrderRequestDtoValueOpen,
    z.ZodTypeDef,
    AtsCreateBackgroundCheckOrderRequestDtoValueOpen
  > = z.union([
    z.nativeEnum(AtsCreateBackgroundCheckOrderRequestDtoValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsCreateBackgroundCheckOrderRequestDtoValue$ {
  /** @deprecated use `AtsCreateBackgroundCheckOrderRequestDtoValue$inboundSchema` instead. */
  export const inboundSchema =
    AtsCreateBackgroundCheckOrderRequestDtoValue$inboundSchema;
  /** @deprecated use `AtsCreateBackgroundCheckOrderRequestDtoValue$outboundSchema` instead. */
  export const outboundSchema =
    AtsCreateBackgroundCheckOrderRequestDtoValue$outboundSchema;
}

/** @internal */
export const AtsCreateBackgroundCheckOrderRequestDtoApplicationStatus$inboundSchema:
  z.ZodType<
    AtsCreateBackgroundCheckOrderRequestDtoApplicationStatus,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source_value: z.nullable(
      z.union([
        z.lazy(() => AtsCreateBackgroundCheckOrderRequestDto4$inboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      AtsCreateBackgroundCheckOrderRequestDtoValue$inboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "source_value": "sourceValue",
    });
  });

/** @internal */
export type AtsCreateBackgroundCheckOrderRequestDtoApplicationStatus$Outbound =
  {
    source_value?:
      | AtsCreateBackgroundCheckOrderRequestDto4$Outbound
      | string
      | number
      | boolean
      | Array<any>
      | null
      | undefined;
    value?: string | null | undefined;
  };

/** @internal */
export const AtsCreateBackgroundCheckOrderRequestDtoApplicationStatus$outboundSchema:
  z.ZodType<
    AtsCreateBackgroundCheckOrderRequestDtoApplicationStatus$Outbound,
    z.ZodTypeDef,
    AtsCreateBackgroundCheckOrderRequestDtoApplicationStatus
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.lazy(() => AtsCreateBackgroundCheckOrderRequestDto4$outboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      AtsCreateBackgroundCheckOrderRequestDtoValue$outboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsCreateBackgroundCheckOrderRequestDtoApplicationStatus$ {
  /** @deprecated use `AtsCreateBackgroundCheckOrderRequestDtoApplicationStatus$inboundSchema` instead. */
  export const inboundSchema =
    AtsCreateBackgroundCheckOrderRequestDtoApplicationStatus$inboundSchema;
  /** @deprecated use `AtsCreateBackgroundCheckOrderRequestDtoApplicationStatus$outboundSchema` instead. */
  export const outboundSchema =
    AtsCreateBackgroundCheckOrderRequestDtoApplicationStatus$outboundSchema;
  /** @deprecated use `AtsCreateBackgroundCheckOrderRequestDtoApplicationStatus$Outbound` instead. */
  export type Outbound =
    AtsCreateBackgroundCheckOrderRequestDtoApplicationStatus$Outbound;
}

export function atsCreateBackgroundCheckOrderRequestDtoApplicationStatusToJSON(
  atsCreateBackgroundCheckOrderRequestDtoApplicationStatus:
    AtsCreateBackgroundCheckOrderRequestDtoApplicationStatus,
): string {
  return JSON.stringify(
    AtsCreateBackgroundCheckOrderRequestDtoApplicationStatus$outboundSchema
      .parse(atsCreateBackgroundCheckOrderRequestDtoApplicationStatus),
  );
}

export function atsCreateBackgroundCheckOrderRequestDtoApplicationStatusFromJSON(
  jsonString: string,
): SafeParseResult<
  AtsCreateBackgroundCheckOrderRequestDtoApplicationStatus,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AtsCreateBackgroundCheckOrderRequestDtoApplicationStatus$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'AtsCreateBackgroundCheckOrderRequestDtoApplicationStatus' from JSON`,
  );
}

/** @internal */
export const AtsCreateBackgroundCheckOrderRequestDtoApplication$inboundSchema:
  z.ZodType<
    AtsCreateBackgroundCheckOrderRequestDtoApplication,
    z.ZodTypeDef,
    unknown
  > = z.object({
    application_status: z.nullable(
      z.lazy(() =>
        AtsCreateBackgroundCheckOrderRequestDtoApplicationStatus$inboundSchema
      ),
    ).optional(),
    id: z.nullable(z.string()).optional(),
    passthrough: z.nullable(z.record(z.any())).optional(),
    remote_id: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      "application_status": "applicationStatus",
      "remote_id": "remoteId",
    });
  });

/** @internal */
export type AtsCreateBackgroundCheckOrderRequestDtoApplication$Outbound = {
  application_status?:
    | AtsCreateBackgroundCheckOrderRequestDtoApplicationStatus$Outbound
    | null
    | undefined;
  id?: string | null | undefined;
  passthrough?: { [k: string]: any } | null | undefined;
  remote_id?: string | null | undefined;
};

/** @internal */
export const AtsCreateBackgroundCheckOrderRequestDtoApplication$outboundSchema:
  z.ZodType<
    AtsCreateBackgroundCheckOrderRequestDtoApplication$Outbound,
    z.ZodTypeDef,
    AtsCreateBackgroundCheckOrderRequestDtoApplication
  > = z.object({
    applicationStatus: z.nullable(
      z.lazy(() =>
        AtsCreateBackgroundCheckOrderRequestDtoApplicationStatus$outboundSchema
      ),
    ).optional(),
    id: z.nullable(z.string()).optional(),
    passthrough: z.nullable(z.record(z.any())).optional(),
    remoteId: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      applicationStatus: "application_status",
      remoteId: "remote_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsCreateBackgroundCheckOrderRequestDtoApplication$ {
  /** @deprecated use `AtsCreateBackgroundCheckOrderRequestDtoApplication$inboundSchema` instead. */
  export const inboundSchema =
    AtsCreateBackgroundCheckOrderRequestDtoApplication$inboundSchema;
  /** @deprecated use `AtsCreateBackgroundCheckOrderRequestDtoApplication$outboundSchema` instead. */
  export const outboundSchema =
    AtsCreateBackgroundCheckOrderRequestDtoApplication$outboundSchema;
  /** @deprecated use `AtsCreateBackgroundCheckOrderRequestDtoApplication$Outbound` instead. */
  export type Outbound =
    AtsCreateBackgroundCheckOrderRequestDtoApplication$Outbound;
}

export function atsCreateBackgroundCheckOrderRequestDtoApplicationToJSON(
  atsCreateBackgroundCheckOrderRequestDtoApplication:
    AtsCreateBackgroundCheckOrderRequestDtoApplication,
): string {
  return JSON.stringify(
    AtsCreateBackgroundCheckOrderRequestDtoApplication$outboundSchema.parse(
      atsCreateBackgroundCheckOrderRequestDtoApplication,
    ),
  );
}

export function atsCreateBackgroundCheckOrderRequestDtoApplicationFromJSON(
  jsonString: string,
): SafeParseResult<
  AtsCreateBackgroundCheckOrderRequestDtoApplication,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AtsCreateBackgroundCheckOrderRequestDtoApplication$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AtsCreateBackgroundCheckOrderRequestDtoApplication' from JSON`,
  );
}

/** @internal */
export const AtsCreateBackgroundCheckOrderRequestDtoCandidate$inboundSchema:
  z.ZodType<
    AtsCreateBackgroundCheckOrderRequestDtoCandidate,
    z.ZodTypeDef,
    unknown
  > = z.object({
    emails: z.nullable(z.array(CandidateEmail$inboundSchema)).optional(),
    first_name: z.nullable(z.string()).optional(),
    id: z.nullable(z.string()).optional(),
    last_name: z.nullable(z.string()).optional(),
    passthrough: z.nullable(z.record(z.any())).optional(),
    profile_url: z.nullable(z.string()).optional(),
    remote_id: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      "first_name": "firstName",
      "last_name": "lastName",
      "profile_url": "profileUrl",
      "remote_id": "remoteId",
    });
  });

/** @internal */
export type AtsCreateBackgroundCheckOrderRequestDtoCandidate$Outbound = {
  emails?: Array<CandidateEmail$Outbound> | null | undefined;
  first_name?: string | null | undefined;
  id?: string | null | undefined;
  last_name?: string | null | undefined;
  passthrough?: { [k: string]: any } | null | undefined;
  profile_url?: string | null | undefined;
  remote_id?: string | null | undefined;
};

/** @internal */
export const AtsCreateBackgroundCheckOrderRequestDtoCandidate$outboundSchema:
  z.ZodType<
    AtsCreateBackgroundCheckOrderRequestDtoCandidate$Outbound,
    z.ZodTypeDef,
    AtsCreateBackgroundCheckOrderRequestDtoCandidate
  > = z.object({
    emails: z.nullable(z.array(CandidateEmail$outboundSchema)).optional(),
    firstName: z.nullable(z.string()).optional(),
    id: z.nullable(z.string()).optional(),
    lastName: z.nullable(z.string()).optional(),
    passthrough: z.nullable(z.record(z.any())).optional(),
    profileUrl: z.nullable(z.string()).optional(),
    remoteId: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      firstName: "first_name",
      lastName: "last_name",
      profileUrl: "profile_url",
      remoteId: "remote_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsCreateBackgroundCheckOrderRequestDtoCandidate$ {
  /** @deprecated use `AtsCreateBackgroundCheckOrderRequestDtoCandidate$inboundSchema` instead. */
  export const inboundSchema =
    AtsCreateBackgroundCheckOrderRequestDtoCandidate$inboundSchema;
  /** @deprecated use `AtsCreateBackgroundCheckOrderRequestDtoCandidate$outboundSchema` instead. */
  export const outboundSchema =
    AtsCreateBackgroundCheckOrderRequestDtoCandidate$outboundSchema;
  /** @deprecated use `AtsCreateBackgroundCheckOrderRequestDtoCandidate$Outbound` instead. */
  export type Outbound =
    AtsCreateBackgroundCheckOrderRequestDtoCandidate$Outbound;
}

export function atsCreateBackgroundCheckOrderRequestDtoCandidateToJSON(
  atsCreateBackgroundCheckOrderRequestDtoCandidate:
    AtsCreateBackgroundCheckOrderRequestDtoCandidate,
): string {
  return JSON.stringify(
    AtsCreateBackgroundCheckOrderRequestDtoCandidate$outboundSchema.parse(
      atsCreateBackgroundCheckOrderRequestDtoCandidate,
    ),
  );
}

export function atsCreateBackgroundCheckOrderRequestDtoCandidateFromJSON(
  jsonString: string,
): SafeParseResult<
  AtsCreateBackgroundCheckOrderRequestDtoCandidate,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AtsCreateBackgroundCheckOrderRequestDtoCandidate$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AtsCreateBackgroundCheckOrderRequestDtoCandidate' from JSON`,
  );
}

/** @internal */
export const AtsCreateBackgroundCheckOrderRequestDtoJob$inboundSchema:
  z.ZodType<AtsCreateBackgroundCheckOrderRequestDtoJob, z.ZodTypeDef, unknown> =
    z.object({
      hiring_team: z.nullable(z.array(JobHiringTeam$inboundSchema)).optional(),
      id: z.nullable(z.string()).optional(),
      passthrough: z.nullable(z.record(z.any())).optional(),
      remote_id: z.nullable(z.string()).optional(),
      title: z.nullable(z.string()).optional(),
    }).transform((v) => {
      return remap$(v, {
        "hiring_team": "hiringTeam",
        "remote_id": "remoteId",
      });
    });

/** @internal */
export type AtsCreateBackgroundCheckOrderRequestDtoJob$Outbound = {
  hiring_team?: Array<JobHiringTeam$Outbound> | null | undefined;
  id?: string | null | undefined;
  passthrough?: { [k: string]: any } | null | undefined;
  remote_id?: string | null | undefined;
  title?: string | null | undefined;
};

/** @internal */
export const AtsCreateBackgroundCheckOrderRequestDtoJob$outboundSchema:
  z.ZodType<
    AtsCreateBackgroundCheckOrderRequestDtoJob$Outbound,
    z.ZodTypeDef,
    AtsCreateBackgroundCheckOrderRequestDtoJob
  > = z.object({
    hiringTeam: z.nullable(z.array(JobHiringTeam$outboundSchema)).optional(),
    id: z.nullable(z.string()).optional(),
    passthrough: z.nullable(z.record(z.any())).optional(),
    remoteId: z.nullable(z.string()).optional(),
    title: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      hiringTeam: "hiring_team",
      remoteId: "remote_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsCreateBackgroundCheckOrderRequestDtoJob$ {
  /** @deprecated use `AtsCreateBackgroundCheckOrderRequestDtoJob$inboundSchema` instead. */
  export const inboundSchema =
    AtsCreateBackgroundCheckOrderRequestDtoJob$inboundSchema;
  /** @deprecated use `AtsCreateBackgroundCheckOrderRequestDtoJob$outboundSchema` instead. */
  export const outboundSchema =
    AtsCreateBackgroundCheckOrderRequestDtoJob$outboundSchema;
  /** @deprecated use `AtsCreateBackgroundCheckOrderRequestDtoJob$Outbound` instead. */
  export type Outbound = AtsCreateBackgroundCheckOrderRequestDtoJob$Outbound;
}

export function atsCreateBackgroundCheckOrderRequestDtoJobToJSON(
  atsCreateBackgroundCheckOrderRequestDtoJob:
    AtsCreateBackgroundCheckOrderRequestDtoJob,
): string {
  return JSON.stringify(
    AtsCreateBackgroundCheckOrderRequestDtoJob$outboundSchema.parse(
      atsCreateBackgroundCheckOrderRequestDtoJob,
    ),
  );
}

export function atsCreateBackgroundCheckOrderRequestDtoJobFromJSON(
  jsonString: string,
): SafeParseResult<
  AtsCreateBackgroundCheckOrderRequestDtoJob,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AtsCreateBackgroundCheckOrderRequestDtoJob$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AtsCreateBackgroundCheckOrderRequestDtoJob' from JSON`,
  );
}

/** @internal */
export const AtsCreateBackgroundCheckOrderRequestDtoPackage$inboundSchema:
  z.ZodType<
    AtsCreateBackgroundCheckOrderRequestDtoPackage,
    z.ZodTypeDef,
    unknown
  > = z.object({
    description: z.nullable(z.string()).optional(),
    id: z.nullable(z.string()).optional(),
    name: z.nullable(z.string()).optional(),
    remote_id: z.nullable(z.string()).optional(),
    tests: z.nullable(z.array(Package$inboundSchema)).optional(),
  }).transform((v) => {
    return remap$(v, {
      "remote_id": "remoteId",
    });
  });

/** @internal */
export type AtsCreateBackgroundCheckOrderRequestDtoPackage$Outbound = {
  description?: string | null | undefined;
  id?: string | null | undefined;
  name?: string | null | undefined;
  remote_id?: string | null | undefined;
  tests?: Array<Package$Outbound> | null | undefined;
};

/** @internal */
export const AtsCreateBackgroundCheckOrderRequestDtoPackage$outboundSchema:
  z.ZodType<
    AtsCreateBackgroundCheckOrderRequestDtoPackage$Outbound,
    z.ZodTypeDef,
    AtsCreateBackgroundCheckOrderRequestDtoPackage
  > = z.object({
    description: z.nullable(z.string()).optional(),
    id: z.nullable(z.string()).optional(),
    name: z.nullable(z.string()).optional(),
    remoteId: z.nullable(z.string()).optional(),
    tests: z.nullable(z.array(Package$outboundSchema)).optional(),
  }).transform((v) => {
    return remap$(v, {
      remoteId: "remote_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsCreateBackgroundCheckOrderRequestDtoPackage$ {
  /** @deprecated use `AtsCreateBackgroundCheckOrderRequestDtoPackage$inboundSchema` instead. */
  export const inboundSchema =
    AtsCreateBackgroundCheckOrderRequestDtoPackage$inboundSchema;
  /** @deprecated use `AtsCreateBackgroundCheckOrderRequestDtoPackage$outboundSchema` instead. */
  export const outboundSchema =
    AtsCreateBackgroundCheckOrderRequestDtoPackage$outboundSchema;
  /** @deprecated use `AtsCreateBackgroundCheckOrderRequestDtoPackage$Outbound` instead. */
  export type Outbound =
    AtsCreateBackgroundCheckOrderRequestDtoPackage$Outbound;
}

export function atsCreateBackgroundCheckOrderRequestDtoPackageToJSON(
  atsCreateBackgroundCheckOrderRequestDtoPackage:
    AtsCreateBackgroundCheckOrderRequestDtoPackage,
): string {
  return JSON.stringify(
    AtsCreateBackgroundCheckOrderRequestDtoPackage$outboundSchema.parse(
      atsCreateBackgroundCheckOrderRequestDtoPackage,
    ),
  );
}

export function atsCreateBackgroundCheckOrderRequestDtoPackageFromJSON(
  jsonString: string,
): SafeParseResult<
  AtsCreateBackgroundCheckOrderRequestDtoPackage,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AtsCreateBackgroundCheckOrderRequestDtoPackage$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AtsCreateBackgroundCheckOrderRequestDtoPackage' from JSON`,
  );
}

/** @internal */
export const Requester$inboundSchema: z.ZodType<
  Requester,
  z.ZodTypeDef,
  unknown
> = z.object({
  email: z.nullable(z.string()).optional(),
  first_name: z.nullable(z.string()).optional(),
  last_name: z.nullable(z.string()).optional(),
  remote_user_id: z.nullable(z.string()).optional(),
  role: z.nullable(z.string()).optional(),
  user_id: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "first_name": "firstName",
    "last_name": "lastName",
    "remote_user_id": "remoteUserId",
    "user_id": "userId",
  });
});

/** @internal */
export type Requester$Outbound = {
  email?: string | null | undefined;
  first_name?: string | null | undefined;
  last_name?: string | null | undefined;
  remote_user_id?: string | null | undefined;
  role?: string | null | undefined;
  user_id?: string | null | undefined;
};

/** @internal */
export const Requester$outboundSchema: z.ZodType<
  Requester$Outbound,
  z.ZodTypeDef,
  Requester
> = z.object({
  email: z.nullable(z.string()).optional(),
  firstName: z.nullable(z.string()).optional(),
  lastName: z.nullable(z.string()).optional(),
  remoteUserId: z.nullable(z.string()).optional(),
  role: z.nullable(z.string()).optional(),
  userId: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    firstName: "first_name",
    lastName: "last_name",
    remoteUserId: "remote_user_id",
    userId: "user_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Requester$ {
  /** @deprecated use `Requester$inboundSchema` instead. */
  export const inboundSchema = Requester$inboundSchema;
  /** @deprecated use `Requester$outboundSchema` instead. */
  export const outboundSchema = Requester$outboundSchema;
  /** @deprecated use `Requester$Outbound` instead. */
  export type Outbound = Requester$Outbound;
}

export function requesterToJSON(requester: Requester): string {
  return JSON.stringify(Requester$outboundSchema.parse(requester));
}

export function requesterFromJSON(
  jsonString: string,
): SafeParseResult<Requester, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Requester$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Requester' from JSON`,
  );
}

/** @internal */
export const AtsCreateBackgroundCheckOrderRequestDto$inboundSchema: z.ZodType<
  AtsCreateBackgroundCheckOrderRequestDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  application: z.nullable(
    z.lazy(() =>
      AtsCreateBackgroundCheckOrderRequestDtoApplication$inboundSchema
    ),
  ).optional(),
  candidate: z.nullable(
    z.lazy(() =>
      AtsCreateBackgroundCheckOrderRequestDtoCandidate$inboundSchema
    ),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  job: z.nullable(
    z.lazy(() => AtsCreateBackgroundCheckOrderRequestDtoJob$inboundSchema),
  ).optional(),
  package: z.nullable(
    z.lazy(() => AtsCreateBackgroundCheckOrderRequestDtoPackage$inboundSchema),
  ).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  remote_id: z.nullable(z.string()).optional(),
  requester: z.nullable(z.lazy(() => Requester$inboundSchema)).optional(),
  results_update_url: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "remote_id": "remoteId",
    "results_update_url": "resultsUpdateUrl",
  });
});

/** @internal */
export type AtsCreateBackgroundCheckOrderRequestDto$Outbound = {
  application?:
    | AtsCreateBackgroundCheckOrderRequestDtoApplication$Outbound
    | null
    | undefined;
  candidate?:
    | AtsCreateBackgroundCheckOrderRequestDtoCandidate$Outbound
    | null
    | undefined;
  id?: string | null | undefined;
  job?: AtsCreateBackgroundCheckOrderRequestDtoJob$Outbound | null | undefined;
  package?:
    | AtsCreateBackgroundCheckOrderRequestDtoPackage$Outbound
    | null
    | undefined;
  passthrough?: { [k: string]: any } | null | undefined;
  remote_id?: string | null | undefined;
  requester?: Requester$Outbound | null | undefined;
  results_update_url?: string | null | undefined;
};

/** @internal */
export const AtsCreateBackgroundCheckOrderRequestDto$outboundSchema: z.ZodType<
  AtsCreateBackgroundCheckOrderRequestDto$Outbound,
  z.ZodTypeDef,
  AtsCreateBackgroundCheckOrderRequestDto
> = z.object({
  application: z.nullable(
    z.lazy(() =>
      AtsCreateBackgroundCheckOrderRequestDtoApplication$outboundSchema
    ),
  ).optional(),
  candidate: z.nullable(
    z.lazy(() =>
      AtsCreateBackgroundCheckOrderRequestDtoCandidate$outboundSchema
    ),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  job: z.nullable(
    z.lazy(() => AtsCreateBackgroundCheckOrderRequestDtoJob$outboundSchema),
  ).optional(),
  package: z.nullable(
    z.lazy(() => AtsCreateBackgroundCheckOrderRequestDtoPackage$outboundSchema),
  ).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  remoteId: z.nullable(z.string()).optional(),
  requester: z.nullable(z.lazy(() => Requester$outboundSchema)).optional(),
  resultsUpdateUrl: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    remoteId: "remote_id",
    resultsUpdateUrl: "results_update_url",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsCreateBackgroundCheckOrderRequestDto$ {
  /** @deprecated use `AtsCreateBackgroundCheckOrderRequestDto$inboundSchema` instead. */
  export const inboundSchema =
    AtsCreateBackgroundCheckOrderRequestDto$inboundSchema;
  /** @deprecated use `AtsCreateBackgroundCheckOrderRequestDto$outboundSchema` instead. */
  export const outboundSchema =
    AtsCreateBackgroundCheckOrderRequestDto$outboundSchema;
  /** @deprecated use `AtsCreateBackgroundCheckOrderRequestDto$Outbound` instead. */
  export type Outbound = AtsCreateBackgroundCheckOrderRequestDto$Outbound;
}

export function atsCreateBackgroundCheckOrderRequestDtoToJSON(
  atsCreateBackgroundCheckOrderRequestDto:
    AtsCreateBackgroundCheckOrderRequestDto,
): string {
  return JSON.stringify(
    AtsCreateBackgroundCheckOrderRequestDto$outboundSchema.parse(
      atsCreateBackgroundCheckOrderRequestDto,
    ),
  );
}

export function atsCreateBackgroundCheckOrderRequestDtoFromJSON(
  jsonString: string,
): SafeParseResult<
  AtsCreateBackgroundCheckOrderRequestDto,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AtsCreateBackgroundCheckOrderRequestDto$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AtsCreateBackgroundCheckOrderRequestDto' from JSON`,
  );
}
