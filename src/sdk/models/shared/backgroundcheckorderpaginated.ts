/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  BackgroundCheckOrder,
  BackgroundCheckOrder$inboundSchema,
  BackgroundCheckOrder$Outbound,
  BackgroundCheckOrder$outboundSchema,
} from "./backgroundcheckorder.js";
import {
  RawResponse,
  RawResponse$inboundSchema,
  RawResponse$Outbound,
  RawResponse$outboundSchema,
} from "./rawresponse.js";

export type BackgroundCheckOrderPaginated = {
  data: Array<BackgroundCheckOrder>;
  next?: string | null | undefined;
  /**
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  nextPage?: string | null | undefined;
  raw?: Array<RawResponse> | null | undefined;
};

/** @internal */
export const BackgroundCheckOrderPaginated$inboundSchema: z.ZodType<
  BackgroundCheckOrderPaginated,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.array(BackgroundCheckOrder$inboundSchema),
  next: z.nullable(z.string()).optional(),
  next_page: z.nullable(z.string()).optional(),
  raw: z.nullable(z.array(RawResponse$inboundSchema)).optional(),
}).transform((v) => {
  return remap$(v, {
    "next_page": "nextPage",
  });
});

/** @internal */
export type BackgroundCheckOrderPaginated$Outbound = {
  data: Array<BackgroundCheckOrder$Outbound>;
  next?: string | null | undefined;
  next_page?: string | null | undefined;
  raw?: Array<RawResponse$Outbound> | null | undefined;
};

/** @internal */
export const BackgroundCheckOrderPaginated$outboundSchema: z.ZodType<
  BackgroundCheckOrderPaginated$Outbound,
  z.ZodTypeDef,
  BackgroundCheckOrderPaginated
> = z.object({
  data: z.array(BackgroundCheckOrder$outboundSchema),
  next: z.nullable(z.string()).optional(),
  nextPage: z.nullable(z.string()).optional(),
  raw: z.nullable(z.array(RawResponse$outboundSchema)).optional(),
}).transform((v) => {
  return remap$(v, {
    nextPage: "next_page",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BackgroundCheckOrderPaginated$ {
  /** @deprecated use `BackgroundCheckOrderPaginated$inboundSchema` instead. */
  export const inboundSchema = BackgroundCheckOrderPaginated$inboundSchema;
  /** @deprecated use `BackgroundCheckOrderPaginated$outboundSchema` instead. */
  export const outboundSchema = BackgroundCheckOrderPaginated$outboundSchema;
  /** @deprecated use `BackgroundCheckOrderPaginated$Outbound` instead. */
  export type Outbound = BackgroundCheckOrderPaginated$Outbound;
}

export function backgroundCheckOrderPaginatedToJSON(
  backgroundCheckOrderPaginated: BackgroundCheckOrderPaginated,
): string {
  return JSON.stringify(
    BackgroundCheckOrderPaginated$outboundSchema.parse(
      backgroundCheckOrderPaginated,
    ),
  );
}

export function backgroundCheckOrderPaginatedFromJSON(
  jsonString: string,
): SafeParseResult<BackgroundCheckOrderPaginated, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BackgroundCheckOrderPaginated$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BackgroundCheckOrderPaginated' from JSON`,
  );
}
