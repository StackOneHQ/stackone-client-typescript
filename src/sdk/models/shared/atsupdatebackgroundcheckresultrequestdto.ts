/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Attachment,
  Attachment$inboundSchema,
  Attachment$Outbound,
  Attachment$outboundSchema,
} from "./attachment.js";

export type AtsUpdateBackgroundCheckResultRequestDtoCandidate = {
  /**
   * Unique identifier
   */
  id?: string | null | undefined;
  /**
   * Candidate profile url
   */
  profileUrl?: string | null | undefined;
};

export type AtsUpdateBackgroundCheckResultRequestDto4 = {};

/**
 * The source value of the test result.
 */
export type AtsUpdateBackgroundCheckResultRequestDtoSourceValue =
  | AtsUpdateBackgroundCheckResultRequestDto4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The result of the test.
 */
export enum AtsUpdateBackgroundCheckResultRequestDtoValue {
  Cancelled = "cancelled",
  Completed = "completed",
  Expired = "expired",
  Failed = "failed",
  Passed = "passed",
}
/**
 * The result of the test.
 */
export type AtsUpdateBackgroundCheckResultRequestDtoValueOpen = OpenEnum<
  typeof AtsUpdateBackgroundCheckResultRequestDtoValue
>;

export type AtsUpdateBackgroundCheckResultRequestDtoResult = {
  /**
   * The source value of the test result.
   */
  sourceValue?:
    | AtsUpdateBackgroundCheckResultRequestDto4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The result of the test.
   */
  value?: AtsUpdateBackgroundCheckResultRequestDtoValueOpen | null | undefined;
};

export type AtsUpdateBackgroundCheckResultRequestDtoScore = {
  /**
   * The label of the score
   */
  label?: string | null | undefined;
  /**
   * The maximum value of the score
   */
  max?: string | null | undefined;
  /**
   * The minimum value of the score
   */
  min?: string | null | undefined;
  /**
   * The value is the actual score
   */
  value?: string | null | undefined;
};

export type AtsUpdateBackgroundCheckResultRequestDto = {
  attachments?: Array<Attachment> | null | undefined;
  candidate?:
    | AtsUpdateBackgroundCheckResultRequestDtoCandidate
    | null
    | undefined;
  /**
   * Unique identifier
   */
  id?: string | null | undefined;
  /**
   * Value to pass through to the provider
   */
  passthrough?: { [k: string]: any } | null | undefined;
  result?: AtsUpdateBackgroundCheckResultRequestDtoResult | null | undefined;
  /**
   * The test`s result url
   */
  resultUrl?: string | null | undefined;
  score?: AtsUpdateBackgroundCheckResultRequestDtoScore | null | undefined;
  /**
   * The start date of the candidate test
   */
  startDate?: Date | null | undefined;
  /**
   * The submission date of the candidate test
   */
  submissionDate?: Date | null | undefined;
  /**
   * The summary about the result of the test
   */
  summary?: string | null | undefined;
};

/** @internal */
export const AtsUpdateBackgroundCheckResultRequestDtoCandidate$inboundSchema:
  z.ZodType<
    AtsUpdateBackgroundCheckResultRequestDtoCandidate,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    profile_url: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      "profile_url": "profileUrl",
    });
  });

/** @internal */
export type AtsUpdateBackgroundCheckResultRequestDtoCandidate$Outbound = {
  id?: string | null | undefined;
  profile_url?: string | null | undefined;
};

/** @internal */
export const AtsUpdateBackgroundCheckResultRequestDtoCandidate$outboundSchema:
  z.ZodType<
    AtsUpdateBackgroundCheckResultRequestDtoCandidate$Outbound,
    z.ZodTypeDef,
    AtsUpdateBackgroundCheckResultRequestDtoCandidate
  > = z.object({
    id: z.nullable(z.string()).optional(),
    profileUrl: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      profileUrl: "profile_url",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsUpdateBackgroundCheckResultRequestDtoCandidate$ {
  /** @deprecated use `AtsUpdateBackgroundCheckResultRequestDtoCandidate$inboundSchema` instead. */
  export const inboundSchema =
    AtsUpdateBackgroundCheckResultRequestDtoCandidate$inboundSchema;
  /** @deprecated use `AtsUpdateBackgroundCheckResultRequestDtoCandidate$outboundSchema` instead. */
  export const outboundSchema =
    AtsUpdateBackgroundCheckResultRequestDtoCandidate$outboundSchema;
  /** @deprecated use `AtsUpdateBackgroundCheckResultRequestDtoCandidate$Outbound` instead. */
  export type Outbound =
    AtsUpdateBackgroundCheckResultRequestDtoCandidate$Outbound;
}

export function atsUpdateBackgroundCheckResultRequestDtoCandidateToJSON(
  atsUpdateBackgroundCheckResultRequestDtoCandidate:
    AtsUpdateBackgroundCheckResultRequestDtoCandidate,
): string {
  return JSON.stringify(
    AtsUpdateBackgroundCheckResultRequestDtoCandidate$outboundSchema.parse(
      atsUpdateBackgroundCheckResultRequestDtoCandidate,
    ),
  );
}

export function atsUpdateBackgroundCheckResultRequestDtoCandidateFromJSON(
  jsonString: string,
): SafeParseResult<
  AtsUpdateBackgroundCheckResultRequestDtoCandidate,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AtsUpdateBackgroundCheckResultRequestDtoCandidate$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AtsUpdateBackgroundCheckResultRequestDtoCandidate' from JSON`,
  );
}

/** @internal */
export const AtsUpdateBackgroundCheckResultRequestDto4$inboundSchema: z.ZodType<
  AtsUpdateBackgroundCheckResultRequestDto4,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type AtsUpdateBackgroundCheckResultRequestDto4$Outbound = {};

/** @internal */
export const AtsUpdateBackgroundCheckResultRequestDto4$outboundSchema:
  z.ZodType<
    AtsUpdateBackgroundCheckResultRequestDto4$Outbound,
    z.ZodTypeDef,
    AtsUpdateBackgroundCheckResultRequestDto4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsUpdateBackgroundCheckResultRequestDto4$ {
  /** @deprecated use `AtsUpdateBackgroundCheckResultRequestDto4$inboundSchema` instead. */
  export const inboundSchema =
    AtsUpdateBackgroundCheckResultRequestDto4$inboundSchema;
  /** @deprecated use `AtsUpdateBackgroundCheckResultRequestDto4$outboundSchema` instead. */
  export const outboundSchema =
    AtsUpdateBackgroundCheckResultRequestDto4$outboundSchema;
  /** @deprecated use `AtsUpdateBackgroundCheckResultRequestDto4$Outbound` instead. */
  export type Outbound = AtsUpdateBackgroundCheckResultRequestDto4$Outbound;
}

export function atsUpdateBackgroundCheckResultRequestDto4ToJSON(
  atsUpdateBackgroundCheckResultRequestDto4:
    AtsUpdateBackgroundCheckResultRequestDto4,
): string {
  return JSON.stringify(
    AtsUpdateBackgroundCheckResultRequestDto4$outboundSchema.parse(
      atsUpdateBackgroundCheckResultRequestDto4,
    ),
  );
}

export function atsUpdateBackgroundCheckResultRequestDto4FromJSON(
  jsonString: string,
): SafeParseResult<
  AtsUpdateBackgroundCheckResultRequestDto4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AtsUpdateBackgroundCheckResultRequestDto4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AtsUpdateBackgroundCheckResultRequestDto4' from JSON`,
  );
}

/** @internal */
export const AtsUpdateBackgroundCheckResultRequestDtoSourceValue$inboundSchema:
  z.ZodType<
    AtsUpdateBackgroundCheckResultRequestDtoSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => AtsUpdateBackgroundCheckResultRequestDto4$inboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type AtsUpdateBackgroundCheckResultRequestDtoSourceValue$Outbound =
  | AtsUpdateBackgroundCheckResultRequestDto4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const AtsUpdateBackgroundCheckResultRequestDtoSourceValue$outboundSchema:
  z.ZodType<
    AtsUpdateBackgroundCheckResultRequestDtoSourceValue$Outbound,
    z.ZodTypeDef,
    AtsUpdateBackgroundCheckResultRequestDtoSourceValue
  > = z.union([
    z.lazy(() => AtsUpdateBackgroundCheckResultRequestDto4$outboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsUpdateBackgroundCheckResultRequestDtoSourceValue$ {
  /** @deprecated use `AtsUpdateBackgroundCheckResultRequestDtoSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    AtsUpdateBackgroundCheckResultRequestDtoSourceValue$inboundSchema;
  /** @deprecated use `AtsUpdateBackgroundCheckResultRequestDtoSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    AtsUpdateBackgroundCheckResultRequestDtoSourceValue$outboundSchema;
  /** @deprecated use `AtsUpdateBackgroundCheckResultRequestDtoSourceValue$Outbound` instead. */
  export type Outbound =
    AtsUpdateBackgroundCheckResultRequestDtoSourceValue$Outbound;
}

export function atsUpdateBackgroundCheckResultRequestDtoSourceValueToJSON(
  atsUpdateBackgroundCheckResultRequestDtoSourceValue:
    AtsUpdateBackgroundCheckResultRequestDtoSourceValue,
): string {
  return JSON.stringify(
    AtsUpdateBackgroundCheckResultRequestDtoSourceValue$outboundSchema.parse(
      atsUpdateBackgroundCheckResultRequestDtoSourceValue,
    ),
  );
}

export function atsUpdateBackgroundCheckResultRequestDtoSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  AtsUpdateBackgroundCheckResultRequestDtoSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AtsUpdateBackgroundCheckResultRequestDtoSourceValue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AtsUpdateBackgroundCheckResultRequestDtoSourceValue' from JSON`,
  );
}

/** @internal */
export const AtsUpdateBackgroundCheckResultRequestDtoValue$inboundSchema:
  z.ZodType<
    AtsUpdateBackgroundCheckResultRequestDtoValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(AtsUpdateBackgroundCheckResultRequestDtoValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const AtsUpdateBackgroundCheckResultRequestDtoValue$outboundSchema:
  z.ZodType<
    AtsUpdateBackgroundCheckResultRequestDtoValueOpen,
    z.ZodTypeDef,
    AtsUpdateBackgroundCheckResultRequestDtoValueOpen
  > = z.union([
    z.nativeEnum(AtsUpdateBackgroundCheckResultRequestDtoValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsUpdateBackgroundCheckResultRequestDtoValue$ {
  /** @deprecated use `AtsUpdateBackgroundCheckResultRequestDtoValue$inboundSchema` instead. */
  export const inboundSchema =
    AtsUpdateBackgroundCheckResultRequestDtoValue$inboundSchema;
  /** @deprecated use `AtsUpdateBackgroundCheckResultRequestDtoValue$outboundSchema` instead. */
  export const outboundSchema =
    AtsUpdateBackgroundCheckResultRequestDtoValue$outboundSchema;
}

/** @internal */
export const AtsUpdateBackgroundCheckResultRequestDtoResult$inboundSchema:
  z.ZodType<
    AtsUpdateBackgroundCheckResultRequestDtoResult,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source_value: z.nullable(
      z.union([
        z.lazy(() => AtsUpdateBackgroundCheckResultRequestDto4$inboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      AtsUpdateBackgroundCheckResultRequestDtoValue$inboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "source_value": "sourceValue",
    });
  });

/** @internal */
export type AtsUpdateBackgroundCheckResultRequestDtoResult$Outbound = {
  source_value?:
    | AtsUpdateBackgroundCheckResultRequestDto4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const AtsUpdateBackgroundCheckResultRequestDtoResult$outboundSchema:
  z.ZodType<
    AtsUpdateBackgroundCheckResultRequestDtoResult$Outbound,
    z.ZodTypeDef,
    AtsUpdateBackgroundCheckResultRequestDtoResult
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.lazy(() => AtsUpdateBackgroundCheckResultRequestDto4$outboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      AtsUpdateBackgroundCheckResultRequestDtoValue$outboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsUpdateBackgroundCheckResultRequestDtoResult$ {
  /** @deprecated use `AtsUpdateBackgroundCheckResultRequestDtoResult$inboundSchema` instead. */
  export const inboundSchema =
    AtsUpdateBackgroundCheckResultRequestDtoResult$inboundSchema;
  /** @deprecated use `AtsUpdateBackgroundCheckResultRequestDtoResult$outboundSchema` instead. */
  export const outboundSchema =
    AtsUpdateBackgroundCheckResultRequestDtoResult$outboundSchema;
  /** @deprecated use `AtsUpdateBackgroundCheckResultRequestDtoResult$Outbound` instead. */
  export type Outbound =
    AtsUpdateBackgroundCheckResultRequestDtoResult$Outbound;
}

export function atsUpdateBackgroundCheckResultRequestDtoResultToJSON(
  atsUpdateBackgroundCheckResultRequestDtoResult:
    AtsUpdateBackgroundCheckResultRequestDtoResult,
): string {
  return JSON.stringify(
    AtsUpdateBackgroundCheckResultRequestDtoResult$outboundSchema.parse(
      atsUpdateBackgroundCheckResultRequestDtoResult,
    ),
  );
}

export function atsUpdateBackgroundCheckResultRequestDtoResultFromJSON(
  jsonString: string,
): SafeParseResult<
  AtsUpdateBackgroundCheckResultRequestDtoResult,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AtsUpdateBackgroundCheckResultRequestDtoResult$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AtsUpdateBackgroundCheckResultRequestDtoResult' from JSON`,
  );
}

/** @internal */
export const AtsUpdateBackgroundCheckResultRequestDtoScore$inboundSchema:
  z.ZodType<
    AtsUpdateBackgroundCheckResultRequestDtoScore,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.nullable(z.string()).optional(),
    max: z.nullable(z.string()).optional(),
    min: z.nullable(z.string()).optional(),
    value: z.nullable(z.string()).optional(),
  });

/** @internal */
export type AtsUpdateBackgroundCheckResultRequestDtoScore$Outbound = {
  label?: string | null | undefined;
  max?: string | null | undefined;
  min?: string | null | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const AtsUpdateBackgroundCheckResultRequestDtoScore$outboundSchema:
  z.ZodType<
    AtsUpdateBackgroundCheckResultRequestDtoScore$Outbound,
    z.ZodTypeDef,
    AtsUpdateBackgroundCheckResultRequestDtoScore
  > = z.object({
    label: z.nullable(z.string()).optional(),
    max: z.nullable(z.string()).optional(),
    min: z.nullable(z.string()).optional(),
    value: z.nullable(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsUpdateBackgroundCheckResultRequestDtoScore$ {
  /** @deprecated use `AtsUpdateBackgroundCheckResultRequestDtoScore$inboundSchema` instead. */
  export const inboundSchema =
    AtsUpdateBackgroundCheckResultRequestDtoScore$inboundSchema;
  /** @deprecated use `AtsUpdateBackgroundCheckResultRequestDtoScore$outboundSchema` instead. */
  export const outboundSchema =
    AtsUpdateBackgroundCheckResultRequestDtoScore$outboundSchema;
  /** @deprecated use `AtsUpdateBackgroundCheckResultRequestDtoScore$Outbound` instead. */
  export type Outbound = AtsUpdateBackgroundCheckResultRequestDtoScore$Outbound;
}

export function atsUpdateBackgroundCheckResultRequestDtoScoreToJSON(
  atsUpdateBackgroundCheckResultRequestDtoScore:
    AtsUpdateBackgroundCheckResultRequestDtoScore,
): string {
  return JSON.stringify(
    AtsUpdateBackgroundCheckResultRequestDtoScore$outboundSchema.parse(
      atsUpdateBackgroundCheckResultRequestDtoScore,
    ),
  );
}

export function atsUpdateBackgroundCheckResultRequestDtoScoreFromJSON(
  jsonString: string,
): SafeParseResult<
  AtsUpdateBackgroundCheckResultRequestDtoScore,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AtsUpdateBackgroundCheckResultRequestDtoScore$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AtsUpdateBackgroundCheckResultRequestDtoScore' from JSON`,
  );
}

/** @internal */
export const AtsUpdateBackgroundCheckResultRequestDto$inboundSchema: z.ZodType<
  AtsUpdateBackgroundCheckResultRequestDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  attachments: z.nullable(z.array(Attachment$inboundSchema)).optional(),
  candidate: z.nullable(
    z.lazy(() =>
      AtsUpdateBackgroundCheckResultRequestDtoCandidate$inboundSchema
    ),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  result: z.nullable(
    z.lazy(() => AtsUpdateBackgroundCheckResultRequestDtoResult$inboundSchema),
  ).optional(),
  result_url: z.nullable(z.string()).optional(),
  score: z.nullable(
    z.lazy(() => AtsUpdateBackgroundCheckResultRequestDtoScore$inboundSchema),
  ).optional(),
  start_date: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  submission_date: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  summary: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "result_url": "resultUrl",
    "start_date": "startDate",
    "submission_date": "submissionDate",
  });
});

/** @internal */
export type AtsUpdateBackgroundCheckResultRequestDto$Outbound = {
  attachments?: Array<Attachment$Outbound> | null | undefined;
  candidate?:
    | AtsUpdateBackgroundCheckResultRequestDtoCandidate$Outbound
    | null
    | undefined;
  id?: string | null | undefined;
  passthrough?: { [k: string]: any } | null | undefined;
  result?:
    | AtsUpdateBackgroundCheckResultRequestDtoResult$Outbound
    | null
    | undefined;
  result_url?: string | null | undefined;
  score?:
    | AtsUpdateBackgroundCheckResultRequestDtoScore$Outbound
    | null
    | undefined;
  start_date?: string | null | undefined;
  submission_date?: string | null | undefined;
  summary?: string | null | undefined;
};

/** @internal */
export const AtsUpdateBackgroundCheckResultRequestDto$outboundSchema: z.ZodType<
  AtsUpdateBackgroundCheckResultRequestDto$Outbound,
  z.ZodTypeDef,
  AtsUpdateBackgroundCheckResultRequestDto
> = z.object({
  attachments: z.nullable(z.array(Attachment$outboundSchema)).optional(),
  candidate: z.nullable(
    z.lazy(() =>
      AtsUpdateBackgroundCheckResultRequestDtoCandidate$outboundSchema
    ),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  result: z.nullable(
    z.lazy(() => AtsUpdateBackgroundCheckResultRequestDtoResult$outboundSchema),
  ).optional(),
  resultUrl: z.nullable(z.string()).optional(),
  score: z.nullable(
    z.lazy(() => AtsUpdateBackgroundCheckResultRequestDtoScore$outboundSchema),
  ).optional(),
  startDate: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  submissionDate: z.nullable(z.date().transform(v => v.toISOString()))
    .optional(),
  summary: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    resultUrl: "result_url",
    startDate: "start_date",
    submissionDate: "submission_date",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsUpdateBackgroundCheckResultRequestDto$ {
  /** @deprecated use `AtsUpdateBackgroundCheckResultRequestDto$inboundSchema` instead. */
  export const inboundSchema =
    AtsUpdateBackgroundCheckResultRequestDto$inboundSchema;
  /** @deprecated use `AtsUpdateBackgroundCheckResultRequestDto$outboundSchema` instead. */
  export const outboundSchema =
    AtsUpdateBackgroundCheckResultRequestDto$outboundSchema;
  /** @deprecated use `AtsUpdateBackgroundCheckResultRequestDto$Outbound` instead. */
  export type Outbound = AtsUpdateBackgroundCheckResultRequestDto$Outbound;
}

export function atsUpdateBackgroundCheckResultRequestDtoToJSON(
  atsUpdateBackgroundCheckResultRequestDto:
    AtsUpdateBackgroundCheckResultRequestDto,
): string {
  return JSON.stringify(
    AtsUpdateBackgroundCheckResultRequestDto$outboundSchema.parse(
      atsUpdateBackgroundCheckResultRequestDto,
    ),
  );
}

export function atsUpdateBackgroundCheckResultRequestDtoFromJSON(
  jsonString: string,
): SafeParseResult<
  AtsUpdateBackgroundCheckResultRequestDto,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AtsUpdateBackgroundCheckResultRequestDto$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AtsUpdateBackgroundCheckResultRequestDto' from JSON`,
  );
}
