/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type SocialLink = {
    /**
     * Type of the social link
     */
    type?: string | null | undefined;
    /**
     * URL of the social link
     */
    url?: string | null | undefined;
};

/** @internal */
export namespace SocialLink$ {
    export type Inbound = {
        type?: string | null | undefined;
        url?: string | null | undefined;
    };

    export const inboundSchema: z.ZodType<SocialLink, z.ZodTypeDef, Inbound> = z
        .object({
            type: z.nullable(z.string()).optional(),
            url: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.url === undefined ? null : { url: v.url }),
            };
        });

    export type Outbound = {
        type?: string | null | undefined;
        url?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SocialLink> = z
        .object({
            type: z.nullable(z.string()).optional(),
            url: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.url === undefined ? null : { url: v.url }),
            };
        });
}
