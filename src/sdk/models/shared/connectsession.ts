/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export enum ConnectSessionCategories {
    Ats = "ats",
    Hris = "hris",
    HrisLegacy = "hris-legacy",
    Crm = "crm",
    Marketing = "marketing",
    Stackone = "stackone",
}

export class ConnectSession extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "categories" })
    categories?: ConnectSessionCategories[];

    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    @SpeakeasyMetadata()
    @Expose({ name: "organization_id" })
    organizationId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "origin_owner_id" })
    originOwnerId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "origin_owner_name" })
    originOwnerName: string;

    @SpeakeasyMetadata()
    @Expose({ name: "origin_username" })
    originUsername?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "project_id" })
    projectId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "provider" })
    provider: string;
}
