/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import {
  InAppMessages,
  InAppMessages$inboundSchema,
  InAppMessages$Outbound,
  InAppMessages$outboundSchema,
} from "./inappmessages.js";

export type InAppTemplate = {
  /**
   * Unique identifier
   */
  id?: string | null | undefined;
  messages?: Array<InAppMessages> | null | undefined;
  name?: string | null | undefined;
  /**
   * Provider's unique identifier
   */
  remoteId?: string | null | undefined;
  tags?: Array<string> | null | undefined;
};

/** @internal */
export const InAppTemplate$inboundSchema: z.ZodType<
  InAppTemplate,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.nullable(z.string()).optional(),
  messages: z.nullable(z.array(InAppMessages$inboundSchema)).optional(),
  name: z.nullable(z.string()).optional(),
  remote_id: z.nullable(z.string()).optional(),
  tags: z.nullable(z.array(z.string())).optional(),
}).transform((v) => {
  return remap$(v, {
    "remote_id": "remoteId",
  });
});

/** @internal */
export type InAppTemplate$Outbound = {
  id?: string | null | undefined;
  messages?: Array<InAppMessages$Outbound> | null | undefined;
  name?: string | null | undefined;
  remote_id?: string | null | undefined;
  tags?: Array<string> | null | undefined;
};

/** @internal */
export const InAppTemplate$outboundSchema: z.ZodType<
  InAppTemplate$Outbound,
  z.ZodTypeDef,
  InAppTemplate
> = z.object({
  id: z.nullable(z.string()).optional(),
  messages: z.nullable(z.array(InAppMessages$outboundSchema)).optional(),
  name: z.nullable(z.string()).optional(),
  remoteId: z.nullable(z.string()).optional(),
  tags: z.nullable(z.array(z.string())).optional(),
}).transform((v) => {
  return remap$(v, {
    remoteId: "remote_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InAppTemplate$ {
  /** @deprecated use `InAppTemplate$inboundSchema` instead. */
  export const inboundSchema = InAppTemplate$inboundSchema;
  /** @deprecated use `InAppTemplate$outboundSchema` instead. */
  export const outboundSchema = InAppTemplate$outboundSchema;
  /** @deprecated use `InAppTemplate$Outbound` instead. */
  export type Outbound = InAppTemplate$Outbound;
}
