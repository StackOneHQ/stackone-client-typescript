/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  CreateAnswer,
  CreateAnswer$inboundSchema,
  CreateAnswer$Outbound,
  CreateAnswer$outboundSchema,
} from "./createanswer.js";

export type CreateQuestionnaire = {
  answers?: Array<CreateAnswer> | null | undefined;
  /**
   * Unique identifier
   */
  id?: string | null | undefined;
};

/** @internal */
export const CreateQuestionnaire$inboundSchema: z.ZodType<
  CreateQuestionnaire,
  z.ZodTypeDef,
  unknown
> = z.object({
  answers: z.nullable(z.array(CreateAnswer$inboundSchema)).optional(),
  id: z.nullable(z.string()).optional(),
});

/** @internal */
export type CreateQuestionnaire$Outbound = {
  answers?: Array<CreateAnswer$Outbound> | null | undefined;
  id?: string | null | undefined;
};

/** @internal */
export const CreateQuestionnaire$outboundSchema: z.ZodType<
  CreateQuestionnaire$Outbound,
  z.ZodTypeDef,
  CreateQuestionnaire
> = z.object({
  answers: z.nullable(z.array(CreateAnswer$outboundSchema)).optional(),
  id: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateQuestionnaire$ {
  /** @deprecated use `CreateQuestionnaire$inboundSchema` instead. */
  export const inboundSchema = CreateQuestionnaire$inboundSchema;
  /** @deprecated use `CreateQuestionnaire$outboundSchema` instead. */
  export const outboundSchema = CreateQuestionnaire$outboundSchema;
  /** @deprecated use `CreateQuestionnaire$Outbound` instead. */
  export type Outbound = CreateQuestionnaire$Outbound;
}
