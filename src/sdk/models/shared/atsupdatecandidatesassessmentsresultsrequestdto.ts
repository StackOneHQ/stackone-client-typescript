/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Attachment,
  Attachment$inboundSchema,
  Attachment$Outbound,
  Attachment$outboundSchema,
} from "./attachment.js";

export type AtsUpdateCandidatesAssessmentsResultsRequestDtoCandidate = {
  /**
   * Unique identifier
   */
  id?: string | null | undefined;
  /**
   * Candidate profile url
   */
  profileUrl?: string | null | undefined;
};

export type AtsUpdateCandidatesAssessmentsResultsRequestDto4 = {};

/**
 * The source value of the test result.
 */
export type AtsUpdateCandidatesAssessmentsResultsRequestDtoSourceValue =
  | AtsUpdateCandidatesAssessmentsResultsRequestDto4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The result of the test.
 */
export enum AtsUpdateCandidatesAssessmentsResultsRequestDtoValue {
  Initiated = "initiated",
  InProgress = "in_progress",
  Cancelled = "cancelled",
  Completed = "completed",
  Expired = "expired",
  Failed = "failed",
  Passed = "passed",
  UnmappedValue = "unmapped_value",
}
/**
 * The result of the test.
 */
export type AtsUpdateCandidatesAssessmentsResultsRequestDtoValueOpen = OpenEnum<
  typeof AtsUpdateCandidatesAssessmentsResultsRequestDtoValue
>;

export type AtsUpdateCandidatesAssessmentsResultsRequestDtoResult = {
  /**
   * The source value of the test result.
   */
  sourceValue?:
    | AtsUpdateCandidatesAssessmentsResultsRequestDto4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The result of the test.
   */
  value?:
    | AtsUpdateCandidatesAssessmentsResultsRequestDtoValueOpen
    | null
    | undefined;
};

export type AtsUpdateCandidatesAssessmentsResultsRequestDtoScore = {
  /**
   * The label of the score
   */
  label?: string | null | undefined;
  /**
   * The maximum value of the score
   */
  max?: string | null | undefined;
  /**
   * The minimum value of the score
   */
  min?: string | null | undefined;
  /**
   * The value is the actual score
   */
  value?: string | null | undefined;
};

export type AtsUpdateCandidatesAssessmentsResultsRequestDto = {
  attachments?: Array<Attachment> | null | undefined;
  candidate?:
    | AtsUpdateCandidatesAssessmentsResultsRequestDtoCandidate
    | null
    | undefined;
  /**
   * Unique identifier
   */
  id?: string | null | undefined;
  /**
   * Value to pass through to the provider
   */
  passthrough?: { [k: string]: any } | null | undefined;
  result?:
    | AtsUpdateCandidatesAssessmentsResultsRequestDtoResult
    | null
    | undefined;
  /**
   * The test`s result url
   */
  resultUrl?: string | null | undefined;
  score?:
    | AtsUpdateCandidatesAssessmentsResultsRequestDtoScore
    | null
    | undefined;
  /**
   * The start date of the candidate test
   */
  startDate?: Date | null | undefined;
  /**
   * The submission date of the candidate test
   */
  submissionDate?: Date | null | undefined;
  /**
   * The summary about the result of the test
   */
  summary?: string | null | undefined;
};

/** @internal */
export const AtsUpdateCandidatesAssessmentsResultsRequestDtoCandidate$inboundSchema:
  z.ZodType<
    AtsUpdateCandidatesAssessmentsResultsRequestDtoCandidate,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    profile_url: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      "profile_url": "profileUrl",
    });
  });

/** @internal */
export type AtsUpdateCandidatesAssessmentsResultsRequestDtoCandidate$Outbound =
  {
    id?: string | null | undefined;
    profile_url?: string | null | undefined;
  };

/** @internal */
export const AtsUpdateCandidatesAssessmentsResultsRequestDtoCandidate$outboundSchema:
  z.ZodType<
    AtsUpdateCandidatesAssessmentsResultsRequestDtoCandidate$Outbound,
    z.ZodTypeDef,
    AtsUpdateCandidatesAssessmentsResultsRequestDtoCandidate
  > = z.object({
    id: z.nullable(z.string()).optional(),
    profileUrl: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      profileUrl: "profile_url",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsUpdateCandidatesAssessmentsResultsRequestDtoCandidate$ {
  /** @deprecated use `AtsUpdateCandidatesAssessmentsResultsRequestDtoCandidate$inboundSchema` instead. */
  export const inboundSchema =
    AtsUpdateCandidatesAssessmentsResultsRequestDtoCandidate$inboundSchema;
  /** @deprecated use `AtsUpdateCandidatesAssessmentsResultsRequestDtoCandidate$outboundSchema` instead. */
  export const outboundSchema =
    AtsUpdateCandidatesAssessmentsResultsRequestDtoCandidate$outboundSchema;
  /** @deprecated use `AtsUpdateCandidatesAssessmentsResultsRequestDtoCandidate$Outbound` instead. */
  export type Outbound =
    AtsUpdateCandidatesAssessmentsResultsRequestDtoCandidate$Outbound;
}

export function atsUpdateCandidatesAssessmentsResultsRequestDtoCandidateToJSON(
  atsUpdateCandidatesAssessmentsResultsRequestDtoCandidate:
    AtsUpdateCandidatesAssessmentsResultsRequestDtoCandidate,
): string {
  return JSON.stringify(
    AtsUpdateCandidatesAssessmentsResultsRequestDtoCandidate$outboundSchema
      .parse(atsUpdateCandidatesAssessmentsResultsRequestDtoCandidate),
  );
}

export function atsUpdateCandidatesAssessmentsResultsRequestDtoCandidateFromJSON(
  jsonString: string,
): SafeParseResult<
  AtsUpdateCandidatesAssessmentsResultsRequestDtoCandidate,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AtsUpdateCandidatesAssessmentsResultsRequestDtoCandidate$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'AtsUpdateCandidatesAssessmentsResultsRequestDtoCandidate' from JSON`,
  );
}

/** @internal */
export const AtsUpdateCandidatesAssessmentsResultsRequestDto4$inboundSchema:
  z.ZodType<
    AtsUpdateCandidatesAssessmentsResultsRequestDto4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type AtsUpdateCandidatesAssessmentsResultsRequestDto4$Outbound = {};

/** @internal */
export const AtsUpdateCandidatesAssessmentsResultsRequestDto4$outboundSchema:
  z.ZodType<
    AtsUpdateCandidatesAssessmentsResultsRequestDto4$Outbound,
    z.ZodTypeDef,
    AtsUpdateCandidatesAssessmentsResultsRequestDto4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsUpdateCandidatesAssessmentsResultsRequestDto4$ {
  /** @deprecated use `AtsUpdateCandidatesAssessmentsResultsRequestDto4$inboundSchema` instead. */
  export const inboundSchema =
    AtsUpdateCandidatesAssessmentsResultsRequestDto4$inboundSchema;
  /** @deprecated use `AtsUpdateCandidatesAssessmentsResultsRequestDto4$outboundSchema` instead. */
  export const outboundSchema =
    AtsUpdateCandidatesAssessmentsResultsRequestDto4$outboundSchema;
  /** @deprecated use `AtsUpdateCandidatesAssessmentsResultsRequestDto4$Outbound` instead. */
  export type Outbound =
    AtsUpdateCandidatesAssessmentsResultsRequestDto4$Outbound;
}

export function atsUpdateCandidatesAssessmentsResultsRequestDto4ToJSON(
  atsUpdateCandidatesAssessmentsResultsRequestDto4:
    AtsUpdateCandidatesAssessmentsResultsRequestDto4,
): string {
  return JSON.stringify(
    AtsUpdateCandidatesAssessmentsResultsRequestDto4$outboundSchema.parse(
      atsUpdateCandidatesAssessmentsResultsRequestDto4,
    ),
  );
}

export function atsUpdateCandidatesAssessmentsResultsRequestDto4FromJSON(
  jsonString: string,
): SafeParseResult<
  AtsUpdateCandidatesAssessmentsResultsRequestDto4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AtsUpdateCandidatesAssessmentsResultsRequestDto4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AtsUpdateCandidatesAssessmentsResultsRequestDto4' from JSON`,
  );
}

/** @internal */
export const AtsUpdateCandidatesAssessmentsResultsRequestDtoSourceValue$inboundSchema:
  z.ZodType<
    AtsUpdateCandidatesAssessmentsResultsRequestDtoSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      AtsUpdateCandidatesAssessmentsResultsRequestDto4$inboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type AtsUpdateCandidatesAssessmentsResultsRequestDtoSourceValue$Outbound =
  | AtsUpdateCandidatesAssessmentsResultsRequestDto4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const AtsUpdateCandidatesAssessmentsResultsRequestDtoSourceValue$outboundSchema:
  z.ZodType<
    AtsUpdateCandidatesAssessmentsResultsRequestDtoSourceValue$Outbound,
    z.ZodTypeDef,
    AtsUpdateCandidatesAssessmentsResultsRequestDtoSourceValue
  > = z.union([
    z.lazy(() =>
      AtsUpdateCandidatesAssessmentsResultsRequestDto4$outboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsUpdateCandidatesAssessmentsResultsRequestDtoSourceValue$ {
  /** @deprecated use `AtsUpdateCandidatesAssessmentsResultsRequestDtoSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    AtsUpdateCandidatesAssessmentsResultsRequestDtoSourceValue$inboundSchema;
  /** @deprecated use `AtsUpdateCandidatesAssessmentsResultsRequestDtoSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    AtsUpdateCandidatesAssessmentsResultsRequestDtoSourceValue$outboundSchema;
  /** @deprecated use `AtsUpdateCandidatesAssessmentsResultsRequestDtoSourceValue$Outbound` instead. */
  export type Outbound =
    AtsUpdateCandidatesAssessmentsResultsRequestDtoSourceValue$Outbound;
}

export function atsUpdateCandidatesAssessmentsResultsRequestDtoSourceValueToJSON(
  atsUpdateCandidatesAssessmentsResultsRequestDtoSourceValue:
    AtsUpdateCandidatesAssessmentsResultsRequestDtoSourceValue,
): string {
  return JSON.stringify(
    AtsUpdateCandidatesAssessmentsResultsRequestDtoSourceValue$outboundSchema
      .parse(atsUpdateCandidatesAssessmentsResultsRequestDtoSourceValue),
  );
}

export function atsUpdateCandidatesAssessmentsResultsRequestDtoSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  AtsUpdateCandidatesAssessmentsResultsRequestDtoSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AtsUpdateCandidatesAssessmentsResultsRequestDtoSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'AtsUpdateCandidatesAssessmentsResultsRequestDtoSourceValue' from JSON`,
  );
}

/** @internal */
export const AtsUpdateCandidatesAssessmentsResultsRequestDtoValue$inboundSchema:
  z.ZodType<
    AtsUpdateCandidatesAssessmentsResultsRequestDtoValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(AtsUpdateCandidatesAssessmentsResultsRequestDtoValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const AtsUpdateCandidatesAssessmentsResultsRequestDtoValue$outboundSchema:
  z.ZodType<
    AtsUpdateCandidatesAssessmentsResultsRequestDtoValueOpen,
    z.ZodTypeDef,
    AtsUpdateCandidatesAssessmentsResultsRequestDtoValueOpen
  > = z.union([
    z.nativeEnum(AtsUpdateCandidatesAssessmentsResultsRequestDtoValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsUpdateCandidatesAssessmentsResultsRequestDtoValue$ {
  /** @deprecated use `AtsUpdateCandidatesAssessmentsResultsRequestDtoValue$inboundSchema` instead. */
  export const inboundSchema =
    AtsUpdateCandidatesAssessmentsResultsRequestDtoValue$inboundSchema;
  /** @deprecated use `AtsUpdateCandidatesAssessmentsResultsRequestDtoValue$outboundSchema` instead. */
  export const outboundSchema =
    AtsUpdateCandidatesAssessmentsResultsRequestDtoValue$outboundSchema;
}

/** @internal */
export const AtsUpdateCandidatesAssessmentsResultsRequestDtoResult$inboundSchema:
  z.ZodType<
    AtsUpdateCandidatesAssessmentsResultsRequestDtoResult,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source_value: z.nullable(
      z.union([
        z.lazy(() =>
          AtsUpdateCandidatesAssessmentsResultsRequestDto4$inboundSchema
        ),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      AtsUpdateCandidatesAssessmentsResultsRequestDtoValue$inboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "source_value": "sourceValue",
    });
  });

/** @internal */
export type AtsUpdateCandidatesAssessmentsResultsRequestDtoResult$Outbound = {
  source_value?:
    | AtsUpdateCandidatesAssessmentsResultsRequestDto4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const AtsUpdateCandidatesAssessmentsResultsRequestDtoResult$outboundSchema:
  z.ZodType<
    AtsUpdateCandidatesAssessmentsResultsRequestDtoResult$Outbound,
    z.ZodTypeDef,
    AtsUpdateCandidatesAssessmentsResultsRequestDtoResult
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.lazy(() =>
          AtsUpdateCandidatesAssessmentsResultsRequestDto4$outboundSchema
        ),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      AtsUpdateCandidatesAssessmentsResultsRequestDtoValue$outboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsUpdateCandidatesAssessmentsResultsRequestDtoResult$ {
  /** @deprecated use `AtsUpdateCandidatesAssessmentsResultsRequestDtoResult$inboundSchema` instead. */
  export const inboundSchema =
    AtsUpdateCandidatesAssessmentsResultsRequestDtoResult$inboundSchema;
  /** @deprecated use `AtsUpdateCandidatesAssessmentsResultsRequestDtoResult$outboundSchema` instead. */
  export const outboundSchema =
    AtsUpdateCandidatesAssessmentsResultsRequestDtoResult$outboundSchema;
  /** @deprecated use `AtsUpdateCandidatesAssessmentsResultsRequestDtoResult$Outbound` instead. */
  export type Outbound =
    AtsUpdateCandidatesAssessmentsResultsRequestDtoResult$Outbound;
}

export function atsUpdateCandidatesAssessmentsResultsRequestDtoResultToJSON(
  atsUpdateCandidatesAssessmentsResultsRequestDtoResult:
    AtsUpdateCandidatesAssessmentsResultsRequestDtoResult,
): string {
  return JSON.stringify(
    AtsUpdateCandidatesAssessmentsResultsRequestDtoResult$outboundSchema.parse(
      atsUpdateCandidatesAssessmentsResultsRequestDtoResult,
    ),
  );
}

export function atsUpdateCandidatesAssessmentsResultsRequestDtoResultFromJSON(
  jsonString: string,
): SafeParseResult<
  AtsUpdateCandidatesAssessmentsResultsRequestDtoResult,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AtsUpdateCandidatesAssessmentsResultsRequestDtoResult$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AtsUpdateCandidatesAssessmentsResultsRequestDtoResult' from JSON`,
  );
}

/** @internal */
export const AtsUpdateCandidatesAssessmentsResultsRequestDtoScore$inboundSchema:
  z.ZodType<
    AtsUpdateCandidatesAssessmentsResultsRequestDtoScore,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.nullable(z.string()).optional(),
    max: z.nullable(z.string()).optional(),
    min: z.nullable(z.string()).optional(),
    value: z.nullable(z.string()).optional(),
  });

/** @internal */
export type AtsUpdateCandidatesAssessmentsResultsRequestDtoScore$Outbound = {
  label?: string | null | undefined;
  max?: string | null | undefined;
  min?: string | null | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const AtsUpdateCandidatesAssessmentsResultsRequestDtoScore$outboundSchema:
  z.ZodType<
    AtsUpdateCandidatesAssessmentsResultsRequestDtoScore$Outbound,
    z.ZodTypeDef,
    AtsUpdateCandidatesAssessmentsResultsRequestDtoScore
  > = z.object({
    label: z.nullable(z.string()).optional(),
    max: z.nullable(z.string()).optional(),
    min: z.nullable(z.string()).optional(),
    value: z.nullable(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsUpdateCandidatesAssessmentsResultsRequestDtoScore$ {
  /** @deprecated use `AtsUpdateCandidatesAssessmentsResultsRequestDtoScore$inboundSchema` instead. */
  export const inboundSchema =
    AtsUpdateCandidatesAssessmentsResultsRequestDtoScore$inboundSchema;
  /** @deprecated use `AtsUpdateCandidatesAssessmentsResultsRequestDtoScore$outboundSchema` instead. */
  export const outboundSchema =
    AtsUpdateCandidatesAssessmentsResultsRequestDtoScore$outboundSchema;
  /** @deprecated use `AtsUpdateCandidatesAssessmentsResultsRequestDtoScore$Outbound` instead. */
  export type Outbound =
    AtsUpdateCandidatesAssessmentsResultsRequestDtoScore$Outbound;
}

export function atsUpdateCandidatesAssessmentsResultsRequestDtoScoreToJSON(
  atsUpdateCandidatesAssessmentsResultsRequestDtoScore:
    AtsUpdateCandidatesAssessmentsResultsRequestDtoScore,
): string {
  return JSON.stringify(
    AtsUpdateCandidatesAssessmentsResultsRequestDtoScore$outboundSchema.parse(
      atsUpdateCandidatesAssessmentsResultsRequestDtoScore,
    ),
  );
}

export function atsUpdateCandidatesAssessmentsResultsRequestDtoScoreFromJSON(
  jsonString: string,
): SafeParseResult<
  AtsUpdateCandidatesAssessmentsResultsRequestDtoScore,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AtsUpdateCandidatesAssessmentsResultsRequestDtoScore$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AtsUpdateCandidatesAssessmentsResultsRequestDtoScore' from JSON`,
  );
}

/** @internal */
export const AtsUpdateCandidatesAssessmentsResultsRequestDto$inboundSchema:
  z.ZodType<
    AtsUpdateCandidatesAssessmentsResultsRequestDto,
    z.ZodTypeDef,
    unknown
  > = z.object({
    attachments: z.nullable(z.array(Attachment$inboundSchema)).optional(),
    candidate: z.nullable(
      z.lazy(() =>
        AtsUpdateCandidatesAssessmentsResultsRequestDtoCandidate$inboundSchema
      ),
    ).optional(),
    id: z.nullable(z.string()).optional(),
    passthrough: z.nullable(z.record(z.any())).optional(),
    result: z.nullable(
      z.lazy(() =>
        AtsUpdateCandidatesAssessmentsResultsRequestDtoResult$inboundSchema
      ),
    ).optional(),
    result_url: z.nullable(z.string()).optional(),
    score: z.nullable(
      z.lazy(() =>
        AtsUpdateCandidatesAssessmentsResultsRequestDtoScore$inboundSchema
      ),
    ).optional(),
    start_date: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ).optional(),
    submission_date: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ).optional(),
    summary: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      "result_url": "resultUrl",
      "start_date": "startDate",
      "submission_date": "submissionDate",
    });
  });

/** @internal */
export type AtsUpdateCandidatesAssessmentsResultsRequestDto$Outbound = {
  attachments?: Array<Attachment$Outbound> | null | undefined;
  candidate?:
    | AtsUpdateCandidatesAssessmentsResultsRequestDtoCandidate$Outbound
    | null
    | undefined;
  id?: string | null | undefined;
  passthrough?: { [k: string]: any } | null | undefined;
  result?:
    | AtsUpdateCandidatesAssessmentsResultsRequestDtoResult$Outbound
    | null
    | undefined;
  result_url?: string | null | undefined;
  score?:
    | AtsUpdateCandidatesAssessmentsResultsRequestDtoScore$Outbound
    | null
    | undefined;
  start_date?: string | null | undefined;
  submission_date?: string | null | undefined;
  summary?: string | null | undefined;
};

/** @internal */
export const AtsUpdateCandidatesAssessmentsResultsRequestDto$outboundSchema:
  z.ZodType<
    AtsUpdateCandidatesAssessmentsResultsRequestDto$Outbound,
    z.ZodTypeDef,
    AtsUpdateCandidatesAssessmentsResultsRequestDto
  > = z.object({
    attachments: z.nullable(z.array(Attachment$outboundSchema)).optional(),
    candidate: z.nullable(
      z.lazy(() =>
        AtsUpdateCandidatesAssessmentsResultsRequestDtoCandidate$outboundSchema
      ),
    ).optional(),
    id: z.nullable(z.string()).optional(),
    passthrough: z.nullable(z.record(z.any())).optional(),
    result: z.nullable(
      z.lazy(() =>
        AtsUpdateCandidatesAssessmentsResultsRequestDtoResult$outboundSchema
      ),
    ).optional(),
    resultUrl: z.nullable(z.string()).optional(),
    score: z.nullable(
      z.lazy(() =>
        AtsUpdateCandidatesAssessmentsResultsRequestDtoScore$outboundSchema
      ),
    ).optional(),
    startDate: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    submissionDate: z.nullable(z.date().transform(v => v.toISOString()))
      .optional(),
    summary: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      resultUrl: "result_url",
      startDate: "start_date",
      submissionDate: "submission_date",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsUpdateCandidatesAssessmentsResultsRequestDto$ {
  /** @deprecated use `AtsUpdateCandidatesAssessmentsResultsRequestDto$inboundSchema` instead. */
  export const inboundSchema =
    AtsUpdateCandidatesAssessmentsResultsRequestDto$inboundSchema;
  /** @deprecated use `AtsUpdateCandidatesAssessmentsResultsRequestDto$outboundSchema` instead. */
  export const outboundSchema =
    AtsUpdateCandidatesAssessmentsResultsRequestDto$outboundSchema;
  /** @deprecated use `AtsUpdateCandidatesAssessmentsResultsRequestDto$Outbound` instead. */
  export type Outbound =
    AtsUpdateCandidatesAssessmentsResultsRequestDto$Outbound;
}

export function atsUpdateCandidatesAssessmentsResultsRequestDtoToJSON(
  atsUpdateCandidatesAssessmentsResultsRequestDto:
    AtsUpdateCandidatesAssessmentsResultsRequestDto,
): string {
  return JSON.stringify(
    AtsUpdateCandidatesAssessmentsResultsRequestDto$outboundSchema.parse(
      atsUpdateCandidatesAssessmentsResultsRequestDto,
    ),
  );
}

export function atsUpdateCandidatesAssessmentsResultsRequestDtoFromJSON(
  jsonString: string,
): SafeParseResult<
  AtsUpdateCandidatesAssessmentsResultsRequestDto,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AtsUpdateCandidatesAssessmentsResultsRequestDto$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AtsUpdateCandidatesAssessmentsResultsRequestDto' from JSON`,
  );
}
