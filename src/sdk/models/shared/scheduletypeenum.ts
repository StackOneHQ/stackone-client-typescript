/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

/**
 * The schedule type of the campaign.
 */
export enum ScheduleTypeEnumValue {
    Immediate = "immediate",
    Scheduled = "scheduled",
    Recurring = "recurring",
    Custom = "custom",
    Triggered = "triggered",
}

export type ScheduleTypeEnum = {
    /**
     * The source value of the schedule type.
     */
    sourceValue: string;
    /**
     * The schedule type of the campaign.
     */
    value: ScheduleTypeEnumValue;
};

/** @internal */
export const ScheduleTypeEnumValue$ = z.nativeEnum(ScheduleTypeEnumValue);

/** @internal */
export namespace ScheduleTypeEnum$ {
    export type Inbound = {
        source_value: string;
        value: ScheduleTypeEnumValue;
    };

    export const inboundSchema: z.ZodType<ScheduleTypeEnum, z.ZodTypeDef, Inbound> = z
        .object({
            source_value: z.string(),
            value: ScheduleTypeEnumValue$,
        })
        .transform((v) => {
            return {
                sourceValue: v.source_value,
                value: v.value,
            };
        });

    export type Outbound = {
        source_value: string;
        value: ScheduleTypeEnumValue;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ScheduleTypeEnum> = z
        .object({
            sourceValue: z.string(),
            value: ScheduleTypeEnumValue$,
        })
        .transform((v) => {
            return {
                source_value: v.sourceValue,
                value: v.value,
            };
        });
}
