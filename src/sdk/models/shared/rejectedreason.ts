/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { RejectedReasonTypeEnum, RejectedReasonTypeEnum$ } from "./rejectedreasontypeenum";
import { z } from "zod";

export type RejectedReason = {
    /**
     * The ID of the rejected reason.
     */
    id: string;
    /**
     * The label of the rejected reason.
     */
    label: string;
    rejectedReasonType: RejectedReasonTypeEnum;
};

/** @internal */
export namespace RejectedReason$ {
    export type Inbound = {
        id: string;
        label: string;
        rejected_reason_type: RejectedReasonTypeEnum$.Inbound;
    };

    export const inboundSchema: z.ZodType<RejectedReason, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string(),
            label: z.string(),
            rejected_reason_type: RejectedReasonTypeEnum$.inboundSchema,
        })
        .transform((v) => {
            return {
                id: v.id,
                label: v.label,
                rejectedReasonType: v.rejected_reason_type,
            };
        });

    export type Outbound = {
        id: string;
        label: string;
        rejected_reason_type: RejectedReasonTypeEnum$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RejectedReason> = z
        .object({
            id: z.string(),
            label: z.string(),
            rejectedReasonType: RejectedReasonTypeEnum$.outboundSchema,
        })
        .transform((v) => {
            return {
                id: v.id,
                label: v.label,
                rejected_reason_type: v.rejectedReasonType,
            };
        });
}
