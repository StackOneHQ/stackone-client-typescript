/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { TimeOffStatusEnum, TimeOffStatusEnum$ } from "./timeoffstatusenum";
import { TimeOffTypeEnum, TimeOffTypeEnum$ } from "./timeofftypeenum";
import { z } from "zod";

export type HrisCreateTimeOffRequestDto = {
    /**
     * The approver ID
     */
    approverId?: string | undefined;
    /**
     * The employee ID
     */
    employeeId?: string | undefined;
    /**
     * The end date of the time off request
     */
    endDate?: Date | undefined;
    /**
     * The start date of the time off request
     */
    startDate?: Date | undefined;
    /**
     * The status of the time off request
     */
    status?: TimeOffStatusEnum | undefined;
    /**
     * The type of the time off request
     */
    type?: TimeOffTypeEnum | undefined;
};

/** @internal */
export namespace HrisCreateTimeOffRequestDto$ {
    export type Inbound = {
        approver_id?: string | undefined;
        employee_id?: string | undefined;
        end_date?: string | undefined;
        start_date?: string | undefined;
        status?: TimeOffStatusEnum$.Inbound | undefined;
        type?: TimeOffTypeEnum$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<HrisCreateTimeOffRequestDto, z.ZodTypeDef, Inbound> = z
        .object({
            approver_id: z.string().optional(),
            employee_id: z.string().optional(),
            end_date: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            start_date: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            status: TimeOffStatusEnum$.inboundSchema.optional(),
            type: TimeOffTypeEnum$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.approver_id === undefined ? null : { approverId: v.approver_id }),
                ...(v.employee_id === undefined ? null : { employeeId: v.employee_id }),
                ...(v.end_date === undefined ? null : { endDate: v.end_date }),
                ...(v.start_date === undefined ? null : { startDate: v.start_date }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.type === undefined ? null : { type: v.type }),
            };
        });

    export type Outbound = {
        approver_id?: string | undefined;
        employee_id?: string | undefined;
        end_date?: string | undefined;
        start_date?: string | undefined;
        status?: TimeOffStatusEnum$.Outbound | undefined;
        type?: TimeOffTypeEnum$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, HrisCreateTimeOffRequestDto> = z
        .object({
            approverId: z.string().optional(),
            employeeId: z.string().optional(),
            endDate: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            startDate: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            status: TimeOffStatusEnum$.outboundSchema.optional(),
            type: TimeOffTypeEnum$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.approverId === undefined ? null : { approver_id: v.approverId }),
                ...(v.employeeId === undefined ? null : { employee_id: v.employeeId }),
                ...(v.endDate === undefined ? null : { end_date: v.endDate }),
                ...(v.startDate === undefined ? null : { start_date: v.startDate }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.type === undefined ? null : { type: v.type }),
            };
        });
}
