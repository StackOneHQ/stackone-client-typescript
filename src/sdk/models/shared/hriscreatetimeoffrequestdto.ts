/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export enum HrisCreateTimeOffRequestDtoValue {
    Approved = "approved",
    UnmappedValue = "unmapped_value",
}

/**
 * The status of the time off request
 */
export type HrisCreateTimeOffRequestDtoStatus = {
    sourceValue: string;
    value: HrisCreateTimeOffRequestDtoValue;
};

export enum HrisCreateTimeOffRequestDtoSchemasValue {
    Sick = "sick",
    UnmappedValue = "unmapped_value",
    Vacation = "vacation",
}

/**
 * The type of the time off request
 */
export type HrisCreateTimeOffRequestDtoType = {
    sourceValue: string;
    value: HrisCreateTimeOffRequestDtoSchemasValue;
};

export type HrisCreateTimeOffRequestDto = {
    /**
     * The approver ID
     */
    approverId?: string | null | undefined;
    /**
     * The employee ID
     */
    employeeId?: string | null | undefined;
    /**
     * The end date of the time off request
     */
    endDate?: Date | null | undefined;
    /**
     * The start date of the time off request
     */
    startDate?: Date | null | undefined;
    /**
     * The status of the time off request
     */
    status?: HrisCreateTimeOffRequestDtoStatus | null | undefined;
    /**
     * The type of the time off request
     */
    type?: HrisCreateTimeOffRequestDtoType | null | undefined;
};

/** @internal */
export const HrisCreateTimeOffRequestDtoValue$ = z.nativeEnum(HrisCreateTimeOffRequestDtoValue);

/** @internal */
export namespace HrisCreateTimeOffRequestDtoStatus$ {
    export type Inbound = {
        source_value: string;
        value: HrisCreateTimeOffRequestDtoValue;
    };

    export const inboundSchema: z.ZodType<
        HrisCreateTimeOffRequestDtoStatus,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            source_value: z.string(),
            value: HrisCreateTimeOffRequestDtoValue$,
        })
        .transform((v) => {
            return {
                sourceValue: v.source_value,
                value: v.value,
            };
        });

    export type Outbound = {
        source_value: string;
        value: HrisCreateTimeOffRequestDtoValue;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        HrisCreateTimeOffRequestDtoStatus
    > = z
        .object({
            sourceValue: z.string(),
            value: HrisCreateTimeOffRequestDtoValue$,
        })
        .transform((v) => {
            return {
                source_value: v.sourceValue,
                value: v.value,
            };
        });
}

/** @internal */
export const HrisCreateTimeOffRequestDtoSchemasValue$ = z.nativeEnum(
    HrisCreateTimeOffRequestDtoSchemasValue
);

/** @internal */
export namespace HrisCreateTimeOffRequestDtoType$ {
    export type Inbound = {
        source_value: string;
        value: HrisCreateTimeOffRequestDtoSchemasValue;
    };

    export const inboundSchema: z.ZodType<HrisCreateTimeOffRequestDtoType, z.ZodTypeDef, Inbound> =
        z
            .object({
                source_value: z.string(),
                value: HrisCreateTimeOffRequestDtoSchemasValue$,
            })
            .transform((v) => {
                return {
                    sourceValue: v.source_value,
                    value: v.value,
                };
            });

    export type Outbound = {
        source_value: string;
        value: HrisCreateTimeOffRequestDtoSchemasValue;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        HrisCreateTimeOffRequestDtoType
    > = z
        .object({
            sourceValue: z.string(),
            value: HrisCreateTimeOffRequestDtoSchemasValue$,
        })
        .transform((v) => {
            return {
                source_value: v.sourceValue,
                value: v.value,
            };
        });
}

/** @internal */
export namespace HrisCreateTimeOffRequestDto$ {
    export type Inbound = {
        approver_id?: string | null | undefined;
        employee_id?: string | null | undefined;
        end_date?: string | null | undefined;
        start_date?: string | null | undefined;
        status?: HrisCreateTimeOffRequestDtoStatus$.Inbound | null | undefined;
        type?: HrisCreateTimeOffRequestDtoType$.Inbound | null | undefined;
    };

    export const inboundSchema: z.ZodType<HrisCreateTimeOffRequestDto, z.ZodTypeDef, Inbound> = z
        .object({
            approver_id: z.nullable(z.string()).optional(),
            employee_id: z.nullable(z.string()).optional(),
            end_date: z
                .nullable(
                    z
                        .string()
                        .datetime({ offset: true })
                        .transform((v) => new Date(v))
                )
                .optional(),
            start_date: z
                .nullable(
                    z
                        .string()
                        .datetime({ offset: true })
                        .transform((v) => new Date(v))
                )
                .optional(),
            status: z
                .nullable(z.lazy(() => HrisCreateTimeOffRequestDtoStatus$.inboundSchema))
                .optional(),
            type: z
                .nullable(z.lazy(() => HrisCreateTimeOffRequestDtoType$.inboundSchema))
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.approver_id === undefined ? null : { approverId: v.approver_id }),
                ...(v.employee_id === undefined ? null : { employeeId: v.employee_id }),
                ...(v.end_date === undefined ? null : { endDate: v.end_date }),
                ...(v.start_date === undefined ? null : { startDate: v.start_date }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.type === undefined ? null : { type: v.type }),
            };
        });

    export type Outbound = {
        approver_id?: string | null | undefined;
        employee_id?: string | null | undefined;
        end_date?: string | null | undefined;
        start_date?: string | null | undefined;
        status?: HrisCreateTimeOffRequestDtoStatus$.Outbound | null | undefined;
        type?: HrisCreateTimeOffRequestDtoType$.Outbound | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, HrisCreateTimeOffRequestDto> = z
        .object({
            approverId: z.nullable(z.string()).optional(),
            employeeId: z.nullable(z.string()).optional(),
            endDate: z.nullable(z.date().transform((v) => v.toISOString())).optional(),
            startDate: z.nullable(z.date().transform((v) => v.toISOString())).optional(),
            status: z
                .nullable(z.lazy(() => HrisCreateTimeOffRequestDtoStatus$.outboundSchema))
                .optional(),
            type: z
                .nullable(z.lazy(() => HrisCreateTimeOffRequestDtoType$.outboundSchema))
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.approverId === undefined ? null : { approver_id: v.approverId }),
                ...(v.employeeId === undefined ? null : { employee_id: v.employeeId }),
                ...(v.endDate === undefined ? null : { end_date: v.endDate }),
                ...(v.startDate === undefined ? null : { start_date: v.startDate }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.type === undefined ? null : { type: v.type }),
            };
        });
}
