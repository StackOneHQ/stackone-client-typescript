/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { CompensationTypeEnum, CompensationTypeEnum$ } from "./compensationtypeenum";
import { PayFrequencyEnum, PayFrequencyEnum$ } from "./payfrequencyenum";
import { PayPeriodEnum, PayPeriodEnum$ } from "./payperiodenum";
import { z } from "zod";

export type Compensation = {
    currency?: string | undefined;
    maxValue?: string | undefined;
    minValue?: string | undefined;
    name?: string | undefined;
    payFrequency?: PayFrequencyEnum | undefined;
    payPeriod?: PayPeriodEnum | undefined;
    type?: CompensationTypeEnum | undefined;
    value?: string | undefined;
};

/** @internal */
export namespace Compensation$ {
    export type Inbound = {
        currency?: string | undefined;
        max_value?: string | undefined;
        min_value?: string | undefined;
        name?: string | undefined;
        pay_frequency?: PayFrequencyEnum$.Inbound | undefined;
        pay_period?: PayPeriodEnum$.Inbound | undefined;
        type?: CompensationTypeEnum$.Inbound | undefined;
        value?: string | undefined;
    };

    export const inboundSchema: z.ZodType<Compensation, z.ZodTypeDef, Inbound> = z
        .object({
            currency: z.string().optional(),
            max_value: z.string().optional(),
            min_value: z.string().optional(),
            name: z.string().optional(),
            pay_frequency: PayFrequencyEnum$.inboundSchema.optional(),
            pay_period: PayPeriodEnum$.inboundSchema.optional(),
            type: CompensationTypeEnum$.inboundSchema.optional(),
            value: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.max_value === undefined ? null : { maxValue: v.max_value }),
                ...(v.min_value === undefined ? null : { minValue: v.min_value }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.pay_frequency === undefined ? null : { payFrequency: v.pay_frequency }),
                ...(v.pay_period === undefined ? null : { payPeriod: v.pay_period }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.value === undefined ? null : { value: v.value }),
            };
        });

    export type Outbound = {
        currency?: string | undefined;
        max_value?: string | undefined;
        min_value?: string | undefined;
        name?: string | undefined;
        pay_frequency?: PayFrequencyEnum$.Outbound | undefined;
        pay_period?: PayPeriodEnum$.Outbound | undefined;
        type?: CompensationTypeEnum$.Outbound | undefined;
        value?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Compensation> = z
        .object({
            currency: z.string().optional(),
            maxValue: z.string().optional(),
            minValue: z.string().optional(),
            name: z.string().optional(),
            payFrequency: PayFrequencyEnum$.outboundSchema.optional(),
            payPeriod: PayPeriodEnum$.outboundSchema.optional(),
            type: CompensationTypeEnum$.outboundSchema.optional(),
            value: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.maxValue === undefined ? null : { max_value: v.maxValue }),
                ...(v.minValue === undefined ? null : { min_value: v.minValue }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.payFrequency === undefined ? null : { pay_frequency: v.payFrequency }),
                ...(v.payPeriod === undefined ? null : { pay_period: v.payPeriod }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.value === undefined ? null : { value: v.value }),
            };
        });
}
