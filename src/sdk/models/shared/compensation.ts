/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CompensationTypeEnum } from "./compensationtypeenum";
import { PayFrequencyEnum } from "./payfrequencyenum";
import { PayPeriodEnum } from "./payperiodenum";
import { Expose, Type } from "class-transformer";

export class Compensation extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "currency" })
    currency?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "max_value" })
    maxValue?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "min_value" })
    minValue?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "pay_frequency" })
    @Type(() => PayFrequencyEnum)
    payFrequency?: PayFrequencyEnum;

    @SpeakeasyMetadata()
    @Expose({ name: "pay_period" })
    @Type(() => PayPeriodEnum)
    payPeriod?: PayPeriodEnum;

    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    @Type(() => CompensationTypeEnum)
    type?: CompensationTypeEnum;

    @SpeakeasyMetadata()
    @Expose({ name: "value" })
    value?: string;
}
