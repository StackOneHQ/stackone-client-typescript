/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum PayFrequency {
    Hourly = "hourly",
    Weekly = "weekly",
    BiWeekly = "bi_weekly",
    FourWeekly = "four_weekly",
    SemiMonthly = "semi_monthly",
    Monthly = "monthly",
    BiMonthly = "bi_monthly",
    Quarterly = "quarterly",
    SemiAnnually = "semi_annually",
    Yearly = "yearly",
    ThirteenMonthly = "thirteen_monthly",
    ProRata = "pro_rata",
    UnmappedValue = "unmapped_value",
    HalfYearly = "half_yearly",
}

export enum PayPeriod {
    Hour = "hour",
    Day = "day",
    Week = "week",
    EveryTwoWeeks = "every_two_weeks",
    Month = "month",
    Quarter = "quarter",
    EverySixMonths = "every_six_months",
    Year = "year",
    None = "none",
    UnmappedValue = "unmapped_value",
}

export enum TypeT {
    Salary = "salary",
    Hourly = "hourly",
    Commission = "commission",
    Bonus = "bonus",
    Equity = "equity",
    Other = "other",
    UnmappedValue = "unmapped_value",
}

export class Compensation extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "currency" })
    currency?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "max_value" })
    maxValue?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "min_value" })
    minValue?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "pay_frequency" })
    payFrequency?: PayFrequency;

    @SpeakeasyMetadata()
    @Expose({ name: "pay_period" })
    payPeriod?: PayPeriod;

    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: TypeT;

    @SpeakeasyMetadata()
    @Expose({ name: "value" })
    value?: string;
}
