/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import { catchUnrecognizedEnum, OpenEnum, Unrecognized } from "../../types/enums.js";
import * as z from "zod";

export type JobPostingContentSection4 = {};

/**
 * The source value of the description type.
 */
export type JobPostingContentSectionSourceValue =
    | JobPostingContentSection4
    | string
    | number
    | boolean
    | Array<any>;

/**
 * The type of the description.
 */
export enum JobPostingContentSectionValue {
    Responsibilities = "responsibilities",
    Skills = "skills",
    Benefits = "benefits",
}
/**
 * The type of the description.
 */
export type JobPostingContentSectionValueOpen = OpenEnum<typeof JobPostingContentSectionValue>;

export type JobPostingContentSectionType = {
    /**
     * The source value of the description type.
     */
    sourceValue?:
        | JobPostingContentSection4
        | string
        | number
        | boolean
        | Array<any>
        | null
        | undefined;
    /**
     * The type of the description.
     */
    value?: JobPostingContentSectionValueOpen | null | undefined;
};

export type JobPostingContentSection = {
    content?: string | null | undefined;
    /**
     * Unique identifier
     */
    id?: string | null | undefined;
    label?: string | null | undefined;
    /**
     * Provider's unique identifier
     */
    remoteId?: string | null | undefined;
    type?: JobPostingContentSectionType | null | undefined;
};

/** @internal */
export const JobPostingContentSection4$inboundSchema: z.ZodType<
    JobPostingContentSection4,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type JobPostingContentSection4$Outbound = {};

/** @internal */
export const JobPostingContentSection4$outboundSchema: z.ZodType<
    JobPostingContentSection4$Outbound,
    z.ZodTypeDef,
    JobPostingContentSection4
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace JobPostingContentSection4$ {
    /** @deprecated use `JobPostingContentSection4$inboundSchema` instead. */
    export const inboundSchema = JobPostingContentSection4$inboundSchema;
    /** @deprecated use `JobPostingContentSection4$outboundSchema` instead. */
    export const outboundSchema = JobPostingContentSection4$outboundSchema;
    /** @deprecated use `JobPostingContentSection4$Outbound` instead. */
    export type Outbound = JobPostingContentSection4$Outbound;
}

/** @internal */
export const JobPostingContentSectionSourceValue$inboundSchema: z.ZodType<
    JobPostingContentSectionSourceValue,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.lazy(() => JobPostingContentSection4$inboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
]);

/** @internal */
export type JobPostingContentSectionSourceValue$Outbound =
    | JobPostingContentSection4$Outbound
    | string
    | number
    | boolean
    | Array<any>;

/** @internal */
export const JobPostingContentSectionSourceValue$outboundSchema: z.ZodType<
    JobPostingContentSectionSourceValue$Outbound,
    z.ZodTypeDef,
    JobPostingContentSectionSourceValue
> = z.union([
    z.lazy(() => JobPostingContentSection4$outboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace JobPostingContentSectionSourceValue$ {
    /** @deprecated use `JobPostingContentSectionSourceValue$inboundSchema` instead. */
    export const inboundSchema = JobPostingContentSectionSourceValue$inboundSchema;
    /** @deprecated use `JobPostingContentSectionSourceValue$outboundSchema` instead. */
    export const outboundSchema = JobPostingContentSectionSourceValue$outboundSchema;
    /** @deprecated use `JobPostingContentSectionSourceValue$Outbound` instead. */
    export type Outbound = JobPostingContentSectionSourceValue$Outbound;
}

/** @internal */
export const JobPostingContentSectionValue$inboundSchema: z.ZodType<
    JobPostingContentSectionValueOpen,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.nativeEnum(JobPostingContentSectionValue),
    z.string().transform(catchUnrecognizedEnum),
]);

/** @internal */
export const JobPostingContentSectionValue$outboundSchema: z.ZodType<
    JobPostingContentSectionValueOpen,
    z.ZodTypeDef,
    JobPostingContentSectionValueOpen
> = z.union([
    z.nativeEnum(JobPostingContentSectionValue),
    z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace JobPostingContentSectionValue$ {
    /** @deprecated use `JobPostingContentSectionValue$inboundSchema` instead. */
    export const inboundSchema = JobPostingContentSectionValue$inboundSchema;
    /** @deprecated use `JobPostingContentSectionValue$outboundSchema` instead. */
    export const outboundSchema = JobPostingContentSectionValue$outboundSchema;
}

/** @internal */
export const JobPostingContentSectionType$inboundSchema: z.ZodType<
    JobPostingContentSectionType,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        source_value: z
            .nullable(
                z.union([
                    z.lazy(() => JobPostingContentSection4$inboundSchema),
                    z.string(),
                    z.number(),
                    z.boolean(),
                    z.array(z.any()),
                ])
            )
            .optional(),
        value: z.nullable(JobPostingContentSectionValue$inboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            source_value: "sourceValue",
        });
    });

/** @internal */
export type JobPostingContentSectionType$Outbound = {
    source_value?:
        | JobPostingContentSection4$Outbound
        | string
        | number
        | boolean
        | Array<any>
        | null
        | undefined;
    value?: string | null | undefined;
};

/** @internal */
export const JobPostingContentSectionType$outboundSchema: z.ZodType<
    JobPostingContentSectionType$Outbound,
    z.ZodTypeDef,
    JobPostingContentSectionType
> = z
    .object({
        sourceValue: z
            .nullable(
                z.union([
                    z.lazy(() => JobPostingContentSection4$outboundSchema),
                    z.string(),
                    z.number(),
                    z.boolean(),
                    z.array(z.any()),
                ])
            )
            .optional(),
        value: z.nullable(JobPostingContentSectionValue$outboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            sourceValue: "source_value",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace JobPostingContentSectionType$ {
    /** @deprecated use `JobPostingContentSectionType$inboundSchema` instead. */
    export const inboundSchema = JobPostingContentSectionType$inboundSchema;
    /** @deprecated use `JobPostingContentSectionType$outboundSchema` instead. */
    export const outboundSchema = JobPostingContentSectionType$outboundSchema;
    /** @deprecated use `JobPostingContentSectionType$Outbound` instead. */
    export type Outbound = JobPostingContentSectionType$Outbound;
}

/** @internal */
export const JobPostingContentSection$inboundSchema: z.ZodType<
    JobPostingContentSection,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        content: z.nullable(z.string()).optional(),
        id: z.nullable(z.string()).optional(),
        label: z.nullable(z.string()).optional(),
        remote_id: z.nullable(z.string()).optional(),
        type: z.nullable(z.lazy(() => JobPostingContentSectionType$inboundSchema)).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            remote_id: "remoteId",
        });
    });

/** @internal */
export type JobPostingContentSection$Outbound = {
    content?: string | null | undefined;
    id?: string | null | undefined;
    label?: string | null | undefined;
    remote_id?: string | null | undefined;
    type?: JobPostingContentSectionType$Outbound | null | undefined;
};

/** @internal */
export const JobPostingContentSection$outboundSchema: z.ZodType<
    JobPostingContentSection$Outbound,
    z.ZodTypeDef,
    JobPostingContentSection
> = z
    .object({
        content: z.nullable(z.string()).optional(),
        id: z.nullable(z.string()).optional(),
        label: z.nullable(z.string()).optional(),
        remoteId: z.nullable(z.string()).optional(),
        type: z.nullable(z.lazy(() => JobPostingContentSectionType$outboundSchema)).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            remoteId: "remote_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace JobPostingContentSection$ {
    /** @deprecated use `JobPostingContentSection$inboundSchema` instead. */
    export const inboundSchema = JobPostingContentSection$inboundSchema;
    /** @deprecated use `JobPostingContentSection$outboundSchema` instead. */
    export const outboundSchema = JobPostingContentSection$outboundSchema;
    /** @deprecated use `JobPostingContentSection$Outbound` instead. */
    export type Outbound = JobPostingContentSection$Outbound;
}
