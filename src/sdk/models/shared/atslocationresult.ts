/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    ATSLocation,
    ATSLocation$inboundSchema,
    ATSLocation$Outbound,
    ATSLocation$outboundSchema,
} from "./atslocation.js";
import {
    RawResponse,
    RawResponse$inboundSchema,
    RawResponse$Outbound,
    RawResponse$outboundSchema,
} from "./rawresponse.js";
import * as z from "zod";

export type ATSLocationResult = {
    data: ATSLocation;
    raw?: Array<RawResponse> | null | undefined;
};

/** @internal */
export const ATSLocationResult$inboundSchema: z.ZodType<ATSLocationResult, z.ZodTypeDef, unknown> =
    z.object({
        data: ATSLocation$inboundSchema,
        raw: z.nullable(z.array(RawResponse$inboundSchema)).optional(),
    });

/** @internal */
export type ATSLocationResult$Outbound = {
    data: ATSLocation$Outbound;
    raw?: Array<RawResponse$Outbound> | null | undefined;
};

/** @internal */
export const ATSLocationResult$outboundSchema: z.ZodType<
    ATSLocationResult$Outbound,
    z.ZodTypeDef,
    ATSLocationResult
> = z.object({
    data: ATSLocation$outboundSchema,
    raw: z.nullable(z.array(RawResponse$outboundSchema)).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ATSLocationResult$ {
    /** @deprecated use `ATSLocationResult$inboundSchema` instead. */
    export const inboundSchema = ATSLocationResult$inboundSchema;
    /** @deprecated use `ATSLocationResult$outboundSchema` instead. */
    export const outboundSchema = ATSLocationResult$outboundSchema;
    /** @deprecated use `ATSLocationResult$Outbound` instead. */
    export type Outbound = ATSLocationResult$Outbound;
}
