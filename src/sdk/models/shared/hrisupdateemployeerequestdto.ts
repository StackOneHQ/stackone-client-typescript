/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  CountryCodeEnum,
  CountryCodeEnum$inboundSchema,
  CountryCodeEnum$Outbound,
  CountryCodeEnum$outboundSchema,
} from "./countrycodeenum.js";
import {
  CreateHRISBenefit,
  CreateHRISBenefit$inboundSchema,
  CreateHRISBenefit$Outbound,
  CreateHRISBenefit$outboundSchema,
} from "./createhrisbenefit.js";
import {
  CustomFields,
  CustomFields$inboundSchema,
  CustomFields$Outbound,
  CustomFields$outboundSchema,
} from "./customfields.js";
import {
  NationalIdentityNumberApiModel,
  NationalIdentityNumberApiModel$inboundSchema,
  NationalIdentityNumberApiModel$Outbound,
  NationalIdentityNumberApiModel$outboundSchema,
} from "./nationalidentitynumberapimodel.js";

/**
 * The employee avatar
 */
export type HrisUpdateEmployeeRequestDtoAvatar = {
  base64?: string | null | undefined;
  url?: string | null | undefined;
};

export type HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType4 = {};

export type HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeSourceValue =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType4
  | Array<any>;

export enum HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeValue {
  FullTime = "full_time",
  Shifts = "shifts",
  PartTime = "part_time",
  UnmappedValue = "unmapped_value",
}
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeValueOpen =
  OpenEnum<
    typeof HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeValue
  >;

/**
 * The employment work schedule type (e.g., full-time, part-time)
 */
export type HrisUpdateEmployeeRequestDtoSchemasContractType = {
  sourceValue?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType4
    | Array<any>
    | null
    | undefined;
  value?:
    | HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeValueOpen
    | null
    | undefined;
};

/**
 * The employment work schedule type
 */
export type HrisUpdateEmployeeRequestDtoContractType = {
  /**
   * The employment work schedule type (e.g., full-time, part-time)
   */
  contractType?:
    | HrisUpdateEmployeeRequestDtoSchemasContractType
    | null
    | undefined;
  /**
   * Unique identifier
   */
  id?: string | null | undefined;
  /**
   * The label of the employment type
   */
  label?: string | null | undefined;
  /**
   * Provider's unique identifier
   */
  remoteId?: string | null | undefined;
};

export type HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4 =
  {};

export type HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4
  | Array<any>;

export enum HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValue {
  FullTime = "full_time",
  Shifts = "shifts",
  PartTime = "part_time",
  UnmappedValue = "unmapped_value",
}
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValueOpen =
  OpenEnum<
    typeof HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValue
  >;

/**
 * The employment work schedule type (e.g., full-time, part-time)
 *
 * @deprecated class: This will be removed in a future release, please migrate away from it as soon as possible.
 */
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType = {
  sourceValue?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4
    | Array<any>
    | null
    | undefined;
  value?:
    | HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValueOpen
    | null
    | undefined;
};

export type HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentType4 = {};

/**
 * The source value of the employment type.
 */
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentType4
  | Array<any>;

/**
 * The type of the employment.
 */
export enum HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValue {
  Contractor = "contractor",
  Intern = "intern",
  Permanent = "permanent",
  Apprentice = "apprentice",
  Freelance = "freelance",
  Terminated = "terminated",
  Temporary = "temporary",
  Seasonal = "seasonal",
  Volunteer = "volunteer",
  Probation = "probation",
  Internal = "internal",
  External = "external",
  Expatriate = "expatriate",
  EmployerOfRecord = "employer_of_record",
  Casual = "casual",
  Programme = "Programme",
  UnmappedValue = "unmapped_value",
}
/**
 * The type of the employment.
 */
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValueOpen =
  OpenEnum<
    typeof HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValue
  >;

/**
 * The type of employment (e.g., contractor, permanent)
 *
 * @deprecated class: This will be removed in a future release, please migrate away from it as soon as possible.
 */
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentType = {
  /**
   * The source value of the employment type.
   */
  sourceValue?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentType4
    | Array<any>
    | null
    | undefined;
  /**
   * The type of the employment.
   */
  value?:
    | HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValueOpen
    | null
    | undefined;
};

/**
 * Represents the employeeâ€™s position within the organizational hierarchy.
 */
export type HrisUpdateEmployeeRequestDtoGrade = {
  /**
   * description of the grade
   */
  description?: string | null | undefined;
  /**
   * The reference id
   */
  id?: string | null | undefined;
  /**
   * The reference name
   */
  name?: string | null | undefined;
  /**
   * Provider's unique identifier
   */
  remoteId?: string | null | undefined;
};

export type HrisUpdateEmployeeRequestDtoSchemasEmployment4 = {};

/**
 * The source value of the pay frequency.
 */
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentSourceValue =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasEmployment4
  | Array<any>;

/**
 * The pay frequency of the job postings.
 */
export enum HrisUpdateEmployeeRequestDtoSchemasEmploymentValue {
  Hourly = "hourly",
  Weekly = "weekly",
  BiWeekly = "bi_weekly",
  FourWeekly = "four_weekly",
  SemiMonthly = "semi_monthly",
  Monthly = "monthly",
  BiMonthly = "bi_monthly",
  Quarterly = "quarterly",
  SemiAnnually = "semi_annually",
  Yearly = "yearly",
  ThirteenMonthly = "thirteen_monthly",
  ProRata = "pro_rata",
  UnmappedValue = "unmapped_value",
  HalfYearly = "half_yearly",
  Daily = "daily",
}
/**
 * The pay frequency of the job postings.
 */
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentValueOpen = OpenEnum<
  typeof HrisUpdateEmployeeRequestDtoSchemasEmploymentValue
>;

/**
 * The pay frequency
 */
export type HrisUpdateEmployeeRequestDtoPayFrequency = {
  /**
   * The source value of the pay frequency.
   */
  sourceValue?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasEmployment4
    | Array<any>
    | null
    | undefined;
  /**
   * The pay frequency of the job postings.
   */
  value?:
    | HrisUpdateEmployeeRequestDtoSchemasEmploymentValueOpen
    | null
    | undefined;
};

export type HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriod4 = {};

/**
 * The source value of the pay period.
 */
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriod4
  | Array<any>;

/**
 * The pay period of the job postings.
 */
export enum HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodValue {
  Hour = "hour",
  Day = "day",
  Week = "week",
  EveryTwoWeeks = "every_two_weeks",
  Month = "month",
  TwiceAMonth = "twice_a_month",
  EveryTwoMonths = "every_two_months",
  Quarter = "quarter",
  EverySixMonths = "every_six_months",
  Year = "year",
  OneOff = "one_off",
  None = "none",
  UnmappedValue = "unmapped_value",
}
/**
 * The pay period of the job postings.
 */
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodValueOpen =
  OpenEnum<typeof HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodValue>;

/**
 * The pay period
 */
export type HrisUpdateEmployeeRequestDtoPayPeriod = {
  /**
   * The source value of the pay period.
   */
  sourceValue?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriod4
    | Array<any>
    | null
    | undefined;
  /**
   * The pay period of the job postings.
   */
  value?:
    | HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodValueOpen
    | null
    | undefined;
};

export type HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType4 = {};

export type HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeSourceValue =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType4
  | Array<any>;

export enum HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeValue {
  Contractor = "contractor",
  Intern = "intern",
  Permanent = "permanent",
  Apprentice = "apprentice",
  Freelance = "freelance",
  Terminated = "terminated",
  Temporary = "temporary",
  Seasonal = "seasonal",
  Volunteer = "volunteer",
  Probation = "probation",
  Internal = "internal",
  External = "external",
  Expatriate = "expatriate",
  EmployerOfRecord = "employer_of_record",
  Casual = "casual",
  Programme = "Programme",
  UnmappedValue = "unmapped_value",
}
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeValueOpen =
  OpenEnum<typeof HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeValue>;

/**
 * The type of employment (e.g., contractor, permanent)
 */
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType = {
  sourceValue?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType4
    | Array<any>
    | null
    | undefined;
  value?:
    | HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeValueOpen
    | null
    | undefined;
};

/**
 * The type of employment
 */
export type HrisUpdateEmployeeRequestDtoType = {
  /**
   * Unique identifier
   */
  id?: string | null | undefined;
  /**
   * The label of the employment type
   */
  label?: string | null | undefined;
  /**
   * Provider's unique identifier
   */
  remoteId?: string | null | undefined;
  /**
   * The type of employment (e.g., contractor, permanent)
   */
  type?:
    | HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType
    | null
    | undefined;
};

export type HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTime4 = {};

export type HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTime4
  | Array<any>;

/**
 * The unified value for the period.
 */
export enum HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeValue {
  Day = "day",
  Week = "week",
  Month = "month",
  Year = "year",
  UnmappedValue = "unmapped_value",
}
/**
 * The unified value for the period.
 */
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeValueOpen =
  OpenEnum<typeof HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeValue>;

/**
 * The period of the work time
 */
export type HrisUpdateEmployeeRequestDtoPeriod = {
  sourceValue?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTime4
    | Array<any>
    | null
    | undefined;
  /**
   * The unified value for the period.
   */
  value?:
    | HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeValueOpen
    | null
    | undefined;
};

export type HrisUpdateEmployeeRequestDtoWorkTime = {
  /**
   * The work time duration in ISO 8601 duration format
   */
  duration?: string | null | undefined;
  /**
   * The period of the work time
   */
  period?: HrisUpdateEmployeeRequestDtoPeriod | null | undefined;
};

/**
 * The employee employment
 */
export type HrisUpdateEmployeeRequestDtoEmployment = {
  /**
   * The employment work schedule type
   */
  contractType?: HrisUpdateEmployeeRequestDtoContractType | null | undefined;
  /**
   * The employee effective date
   *
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  effectiveDate?: Date | null | undefined;
  /**
   * The employment work schedule type (e.g., full-time, part-time)
   *
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  employmentContractType?:
    | HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType
    | null
    | undefined;
  /**
   * The type of employment (e.g., contractor, permanent)
   *
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  employmentType?:
    | HrisUpdateEmployeeRequestDtoSchemasEmploymentType
    | null
    | undefined;
  /**
   * The end date of employment
   */
  endDate?: Date | null | undefined;
  /**
   * Represents the employeeâ€™s position within the organizational hierarchy.
   */
  grade?: HrisUpdateEmployeeRequestDtoGrade | null | undefined;
  /**
   * The job title of the employee
   */
  jobTitle?: string | null | undefined;
  /**
   * Value to pass through to the provider
   */
  passthrough?: { [k: string]: any } | null | undefined;
  /**
   * The currency used for pay
   */
  payCurrency?: string | null | undefined;
  /**
   * The pay frequency
   */
  payFrequency?: HrisUpdateEmployeeRequestDtoPayFrequency | null | undefined;
  /**
   * The pay period
   */
  payPeriod?: HrisUpdateEmployeeRequestDtoPayPeriod | null | undefined;
  /**
   * The pay rate for the employee
   */
  payRate?: string | null | undefined;
  /**
   * The payroll code of the employee
   */
  payrollCode?: string | null | undefined;
  /**
   * The type of employment
   */
  type?: HrisUpdateEmployeeRequestDtoType | null | undefined;
  /**
   * Custom Unified Fields configured in your StackOne project
   */
  unifiedCustomFields?: { [k: string]: any } | null | undefined;
  workTime?: HrisUpdateEmployeeRequestDtoWorkTime | null | undefined;
};

export type HrisUpdateEmployeeRequestDto4 = {};

export type HrisUpdateEmployeeRequestDtoSourceValue =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDto4
  | Array<any>;

export enum HrisUpdateEmployeeRequestDtoValue {
  FullTime = "full_time",
  Shifts = "shifts",
  PartTime = "part_time",
  UnmappedValue = "unmapped_value",
}
export type HrisUpdateEmployeeRequestDtoValueOpen = OpenEnum<
  typeof HrisUpdateEmployeeRequestDtoValue
>;

/**
 * The employment work schedule type (e.g., full-time, part-time)
 *
 * @deprecated class: This will be removed in a future release, please migrate away from it as soon as possible.
 */
export type HrisUpdateEmployeeRequestDtoEmploymentContractType = {
  sourceValue?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDto4
    | Array<any>
    | null
    | undefined;
  value?: HrisUpdateEmployeeRequestDtoValueOpen | null | undefined;
};

export type HrisUpdateEmployeeRequestDtoSchemas4 = {};

export type HrisUpdateEmployeeRequestDtoSchemasSourceValue =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemas4
  | Array<any>;

export enum HrisUpdateEmployeeRequestDtoSchemasValue {
  Active = "active",
  Pending = "pending",
  Terminated = "terminated",
  Leave = "leave",
  Inactive = "inactive",
  Unknown = "unknown",
  UnmappedValue = "unmapped_value",
}
export type HrisUpdateEmployeeRequestDtoSchemasValueOpen = OpenEnum<
  typeof HrisUpdateEmployeeRequestDtoSchemasValue
>;

/**
 * The employee employment status
 */
export type HrisUpdateEmployeeRequestDtoEmploymentStatus = {
  sourceValue?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemas4
    | Array<any>
    | null
    | undefined;
  value?: HrisUpdateEmployeeRequestDtoSchemasValueOpen | null | undefined;
};

export type HrisUpdateEmployeeRequestDtoSchemasEmploymentType4 = {};

/**
 * The source value of the employment type.
 */
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeSourceValue =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasEmploymentType4
  | Array<any>;

/**
 * The type of the employment.
 */
export enum HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeValue {
  Contractor = "contractor",
  Intern = "intern",
  Permanent = "permanent",
  Apprentice = "apprentice",
  Freelance = "freelance",
  Terminated = "terminated",
  Temporary = "temporary",
  Seasonal = "seasonal",
  Volunteer = "volunteer",
  Probation = "probation",
  Internal = "internal",
  External = "external",
  Expatriate = "expatriate",
  EmployerOfRecord = "employer_of_record",
  Casual = "casual",
  Programme = "Programme",
  UnmappedValue = "unmapped_value",
}
/**
 * The type of the employment.
 */
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeValueOpen =
  OpenEnum<typeof HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeValue>;

/**
 * The employee employment type
 *
 * @deprecated class: This will be removed in a future release, please migrate away from it as soon as possible.
 */
export type HrisUpdateEmployeeRequestDtoEmploymentType = {
  /**
   * The source value of the employment type.
   */
  sourceValue?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasEmploymentType4
    | Array<any>
    | null
    | undefined;
  /**
   * The type of the employment.
   */
  value?:
    | HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeValueOpen
    | null
    | undefined;
};

export type HrisUpdateEmployeeRequestDtoSchemasEthnicity4 = {};

export type HrisUpdateEmployeeRequestDtoSchemasEthnicitySourceValue =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasEthnicity4
  | Array<any>;

export enum HrisUpdateEmployeeRequestDtoSchemasEthnicityValue {
  White = "white",
  BlackOrAfricanAmerican = "black_or_african_american",
  Asian = "asian",
  HispanicOrLatino = "hispanic_or_latino",
  AmericanIndianOrAlaskaNative = "american_indian_or_alaska_native",
  NativeHawaiianOrPacificIslander = "native_hawaiian_or_pacific_islander",
  TwoOrMoreRaces = "two_or_more_races",
  NotDisclosed = "not_disclosed",
  Other = "other",
  UnmappedValue = "unmapped_value",
}
export type HrisUpdateEmployeeRequestDtoSchemasEthnicityValueOpen = OpenEnum<
  typeof HrisUpdateEmployeeRequestDtoSchemasEthnicityValue
>;

/**
 * The employee ethnicity
 */
export type HrisUpdateEmployeeRequestDtoEthnicity = {
  sourceValue?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasEthnicity4
    | Array<any>
    | null
    | undefined;
  value?:
    | HrisUpdateEmployeeRequestDtoSchemasEthnicityValueOpen
    | null
    | undefined;
};

export type HrisUpdateEmployeeRequestDtoSchemasGender4 = {};

export type HrisUpdateEmployeeRequestDtoSchemasGenderSourceValue =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasGender4
  | Array<any>;

export enum HrisUpdateEmployeeRequestDtoSchemasGenderValue {
  Male = "male",
  Female = "female",
  NonBinary = "non_binary",
  Other = "other",
  NotDisclosed = "not_disclosed",
  Diverse = "diverse",
  UnmappedValue = "unmapped_value",
}
export type HrisUpdateEmployeeRequestDtoSchemasGenderValueOpen = OpenEnum<
  typeof HrisUpdateEmployeeRequestDtoSchemasGenderValue
>;

/**
 * The employee gender
 */
export type HrisUpdateEmployeeRequestDtoGender = {
  sourceValue?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasGender4
    | Array<any>
    | null
    | undefined;
  value?: HrisUpdateEmployeeRequestDtoSchemasGenderValueOpen | null | undefined;
};

export type HrisUpdateEmployeeRequestDtoSchemasHomeLocation4 = {};

export type HrisUpdateEmployeeRequestDtoSchemasHomeLocationSourceValue =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasHomeLocation4
  | Array<any>;

/**
 * The ISO3166-1 Alpha2 Code of the Country
 */
export enum HrisUpdateEmployeeRequestDtoSchemasHomeLocationValue {
  Af = "AF",
  Al = "AL",
  Dz = "DZ",
  As = "AS",
  Ad = "AD",
  Ao = "AO",
  Ai = "AI",
  Aq = "AQ",
  Ag = "AG",
  Ar = "AR",
  Am = "AM",
  Aw = "AW",
  Au = "AU",
  At = "AT",
  Az = "AZ",
  Bs = "BS",
  Bh = "BH",
  Bd = "BD",
  Bb = "BB",
  By = "BY",
  Be = "BE",
  Bz = "BZ",
  Bj = "BJ",
  Bm = "BM",
  Bt = "BT",
  Bo = "BO",
  Bq = "BQ",
  Ba = "BA",
  Bw = "BW",
  Bv = "BV",
  Br = "BR",
  Io = "IO",
  Bn = "BN",
  Bg = "BG",
  Bf = "BF",
  Bi = "BI",
  Kh = "KH",
  Cm = "CM",
  Ca = "CA",
  Cv = "CV",
  Ky = "KY",
  Cf = "CF",
  Td = "TD",
  Cl = "CL",
  Cn = "CN",
  Cx = "CX",
  Cc = "CC",
  Co = "CO",
  Km = "KM",
  Cg = "CG",
  Cd = "CD",
  Ck = "CK",
  Cr = "CR",
  Hr = "HR",
  Cu = "CU",
  Cw = "CW",
  Cy = "CY",
  Cz = "CZ",
  Ci = "CI",
  Dk = "DK",
  Dj = "DJ",
  Dm = "DM",
  Do = "DO",
  Ec = "EC",
  Eg = "EG",
  Sv = "SV",
  Gq = "GQ",
  Er = "ER",
  Ee = "EE",
  Et = "ET",
  Fk = "FK",
  Fo = "FO",
  Fj = "FJ",
  Fi = "FI",
  Fr = "FR",
  Gf = "GF",
  Pf = "PF",
  Tf = "TF",
  Ga = "GA",
  Gm = "GM",
  Ge = "GE",
  De = "DE",
  Gh = "GH",
  Gi = "GI",
  Gr = "GR",
  Gl = "GL",
  Gd = "GD",
  Gp = "GP",
  Gu = "GU",
  Gt = "GT",
  Gg = "GG",
  Gn = "GN",
  Gw = "GW",
  Gy = "GY",
  Ht = "HT",
  Hm = "HM",
  Va = "VA",
  Hn = "HN",
  Hk = "HK",
  Hu = "HU",
  Is = "IS",
  In = "IN",
  Id = "ID",
  Ir = "IR",
  Iq = "IQ",
  Ie = "IE",
  Im = "IM",
  Il = "IL",
  It = "IT",
  Jm = "JM",
  Jp = "JP",
  Je = "JE",
  Jo = "JO",
  Kz = "KZ",
  Ke = "KE",
  Ki = "KI",
  Kp = "KP",
  Kr = "KR",
  Kw = "KW",
  Kg = "KG",
  La = "LA",
  Lv = "LV",
  Lb = "LB",
  Ls = "LS",
  Lr = "LR",
  Ly = "LY",
  Li = "LI",
  Lt = "LT",
  Lu = "LU",
  Mo = "MO",
  Mk = "MK",
  Mg = "MG",
  Mw = "MW",
  My = "MY",
  Mv = "MV",
  Ml = "ML",
  Mt = "MT",
  Mh = "MH",
  Mq = "MQ",
  Mr = "MR",
  Mu = "MU",
  Yt = "YT",
  Mx = "MX",
  Fm = "FM",
  Md = "MD",
  Mc = "MC",
  Mn = "MN",
  Me = "ME",
  Ms = "MS",
  Ma = "MA",
  Mz = "MZ",
  Mm = "MM",
  Na = "NA",
  Nr = "NR",
  Np = "NP",
  Nl = "NL",
  Nc = "NC",
  Nz = "NZ",
  Ni = "NI",
  Ne = "NE",
  Ng = "NG",
  Nu = "NU",
  Nf = "NF",
  Mp = "MP",
  No = "NO",
  Om = "OM",
  Pk = "PK",
  Pw = "PW",
  Ps = "PS",
  Pa = "PA",
  Pg = "PG",
  Py = "PY",
  Pe = "PE",
  Ph = "PH",
  Pn = "PN",
  Pl = "PL",
  Pt = "PT",
  Pr = "PR",
  Qa = "QA",
  Ro = "RO",
  Ru = "RU",
  Rw = "RW",
  Re = "RE",
  Bl = "BL",
  Sh = "SH",
  Kn = "KN",
  Lc = "LC",
  Mf = "MF",
  Pm = "PM",
  Vc = "VC",
  Ws = "WS",
  Sm = "SM",
  St = "ST",
  Sa = "SA",
  Sn = "SN",
  Rs = "RS",
  Sc = "SC",
  Sl = "SL",
  Sg = "SG",
  Sx = "SX",
  Sk = "SK",
  Si = "SI",
  Sb = "SB",
  So = "SO",
  Za = "ZA",
  Gs = "GS",
  Ss = "SS",
  Es = "ES",
  Lk = "LK",
  Sd = "SD",
  Sr = "SR",
  Sj = "SJ",
  Sz = "SZ",
  Se = "SE",
  Ch = "CH",
  Sy = "SY",
  Tw = "TW",
  Tj = "TJ",
  Tz = "TZ",
  Th = "TH",
  Tl = "TL",
  Tg = "TG",
  Tk = "TK",
  To = "TO",
  Tt = "TT",
  Tn = "TN",
  Tr = "TR",
  Tm = "TM",
  Tc = "TC",
  Tv = "TV",
  Ug = "UG",
  Ua = "UA",
  Ae = "AE",
  Gb = "GB",
  Us = "US",
  Um = "UM",
  Uy = "UY",
  Uz = "UZ",
  Vu = "VU",
  Ve = "VE",
  Vn = "VN",
  Vg = "VG",
  Vi = "VI",
  Wf = "WF",
  Eh = "EH",
  Ye = "YE",
  Zm = "ZM",
  Zw = "ZW",
  UnmappedValue = "unmapped_value",
}
/**
 * The ISO3166-1 Alpha2 Code of the Country
 */
export type HrisUpdateEmployeeRequestDtoSchemasHomeLocationValueOpen = OpenEnum<
  typeof HrisUpdateEmployeeRequestDtoSchemasHomeLocationValue
>;

/**
 * The country code
 */
export type HrisUpdateEmployeeRequestDtoCountry = {
  sourceValue?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasHomeLocation4
    | Array<any>
    | null
    | undefined;
  /**
   * The ISO3166-1 Alpha2 Code of the Country
   */
  value?:
    | HrisUpdateEmployeeRequestDtoSchemasHomeLocationValueOpen
    | null
    | undefined;
};

export type HrisUpdateEmployeeRequestDtoSchemasHomeLocationState4 = {};

export type HrisUpdateEmployeeRequestDtoSchemasHomeLocationStateSourceValue =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasHomeLocationState4
  | Array<any>;

/**
 * The ISO3166-2 sub division where the location is situated
 */
export type HrisUpdateEmployeeRequestDtoState = {
  sourceValue?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasHomeLocationState4
    | Array<any>
    | null
    | undefined;
  /**
   * state (ISO3166-2 Sub Division Code) - value must be a valid enum value
   */
  value?: string | null | undefined;
};

/**
 * The employee home location
 */
export type HrisUpdateEmployeeRequestDtoHomeLocation = {
  /**
   * The city where the location is situated
   */
  city?: string | null | undefined;
  /**
   * The country code
   */
  country?: HrisUpdateEmployeeRequestDtoCountry | null | undefined;
  /**
   * Unique identifier
   */
  id?: string | null | undefined;
  /**
   * The name of the location
   */
  name?: string | null | undefined;
  /**
   * Value to pass through to the provider
   */
  passthrough?: { [k: string]: any } | null | undefined;
  /**
   * The phone number of the location
   */
  phoneNumber?: string | null | undefined;
  /**
   * The ISO3166-2 sub division where the location is situated
   */
  state?: HrisUpdateEmployeeRequestDtoState | null | undefined;
  /**
   * The first line of the address
   */
  street1?: string | null | undefined;
  /**
   * The second line of the address
   */
  street2?: string | null | undefined;
  /**
   * The ZIP code/Postal code of the location
   */
  zipCode?: string | null | undefined;
};

export type HrisUpdateEmployeeRequestDtoSchemasMaritalStatus4 = {};

export type HrisUpdateEmployeeRequestDtoSchemasMaritalStatusSourceValue =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasMaritalStatus4
  | Array<any>;

export enum HrisUpdateEmployeeRequestDtoSchemasMaritalStatusValue {
  Single = "single",
  Married = "married",
  CommonLaw = "common_law",
  Divorced = "divorced",
  Widowed = "widowed",
  DomesticPartnership = "domestic_partnership",
  Separated = "separated",
  Other = "other",
  NotDisclosed = "not_disclosed",
  UnmappedValue = "unmapped_value",
}
export type HrisUpdateEmployeeRequestDtoSchemasMaritalStatusValueOpen =
  OpenEnum<typeof HrisUpdateEmployeeRequestDtoSchemasMaritalStatusValue>;

/**
 * The employee marital status
 */
export type HrisUpdateEmployeeRequestDtoMaritalStatus = {
  sourceValue?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasMaritalStatus4
    | Array<any>
    | null
    | undefined;
  value?:
    | HrisUpdateEmployeeRequestDtoSchemasMaritalStatusValueOpen
    | null
    | undefined;
};

export type HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumber4 = {};

export type HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumber4
  | Array<any>;

/**
 * The ISO3166-1 Alpha2 Code of the Country
 */
export enum HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberValue {
  Af = "AF",
  Al = "AL",
  Dz = "DZ",
  As = "AS",
  Ad = "AD",
  Ao = "AO",
  Ai = "AI",
  Aq = "AQ",
  Ag = "AG",
  Ar = "AR",
  Am = "AM",
  Aw = "AW",
  Au = "AU",
  At = "AT",
  Az = "AZ",
  Bs = "BS",
  Bh = "BH",
  Bd = "BD",
  Bb = "BB",
  By = "BY",
  Be = "BE",
  Bz = "BZ",
  Bj = "BJ",
  Bm = "BM",
  Bt = "BT",
  Bo = "BO",
  Bq = "BQ",
  Ba = "BA",
  Bw = "BW",
  Bv = "BV",
  Br = "BR",
  Io = "IO",
  Bn = "BN",
  Bg = "BG",
  Bf = "BF",
  Bi = "BI",
  Kh = "KH",
  Cm = "CM",
  Ca = "CA",
  Cv = "CV",
  Ky = "KY",
  Cf = "CF",
  Td = "TD",
  Cl = "CL",
  Cn = "CN",
  Cx = "CX",
  Cc = "CC",
  Co = "CO",
  Km = "KM",
  Cg = "CG",
  Cd = "CD",
  Ck = "CK",
  Cr = "CR",
  Hr = "HR",
  Cu = "CU",
  Cw = "CW",
  Cy = "CY",
  Cz = "CZ",
  Ci = "CI",
  Dk = "DK",
  Dj = "DJ",
  Dm = "DM",
  Do = "DO",
  Ec = "EC",
  Eg = "EG",
  Sv = "SV",
  Gq = "GQ",
  Er = "ER",
  Ee = "EE",
  Et = "ET",
  Fk = "FK",
  Fo = "FO",
  Fj = "FJ",
  Fi = "FI",
  Fr = "FR",
  Gf = "GF",
  Pf = "PF",
  Tf = "TF",
  Ga = "GA",
  Gm = "GM",
  Ge = "GE",
  De = "DE",
  Gh = "GH",
  Gi = "GI",
  Gr = "GR",
  Gl = "GL",
  Gd = "GD",
  Gp = "GP",
  Gu = "GU",
  Gt = "GT",
  Gg = "GG",
  Gn = "GN",
  Gw = "GW",
  Gy = "GY",
  Ht = "HT",
  Hm = "HM",
  Va = "VA",
  Hn = "HN",
  Hk = "HK",
  Hu = "HU",
  Is = "IS",
  In = "IN",
  Id = "ID",
  Ir = "IR",
  Iq = "IQ",
  Ie = "IE",
  Im = "IM",
  Il = "IL",
  It = "IT",
  Jm = "JM",
  Jp = "JP",
  Je = "JE",
  Jo = "JO",
  Kz = "KZ",
  Ke = "KE",
  Ki = "KI",
  Kp = "KP",
  Kr = "KR",
  Kw = "KW",
  Kg = "KG",
  La = "LA",
  Lv = "LV",
  Lb = "LB",
  Ls = "LS",
  Lr = "LR",
  Ly = "LY",
  Li = "LI",
  Lt = "LT",
  Lu = "LU",
  Mo = "MO",
  Mk = "MK",
  Mg = "MG",
  Mw = "MW",
  My = "MY",
  Mv = "MV",
  Ml = "ML",
  Mt = "MT",
  Mh = "MH",
  Mq = "MQ",
  Mr = "MR",
  Mu = "MU",
  Yt = "YT",
  Mx = "MX",
  Fm = "FM",
  Md = "MD",
  Mc = "MC",
  Mn = "MN",
  Me = "ME",
  Ms = "MS",
  Ma = "MA",
  Mz = "MZ",
  Mm = "MM",
  Na = "NA",
  Nr = "NR",
  Np = "NP",
  Nl = "NL",
  Nc = "NC",
  Nz = "NZ",
  Ni = "NI",
  Ne = "NE",
  Ng = "NG",
  Nu = "NU",
  Nf = "NF",
  Mp = "MP",
  No = "NO",
  Om = "OM",
  Pk = "PK",
  Pw = "PW",
  Ps = "PS",
  Pa = "PA",
  Pg = "PG",
  Py = "PY",
  Pe = "PE",
  Ph = "PH",
  Pn = "PN",
  Pl = "PL",
  Pt = "PT",
  Pr = "PR",
  Qa = "QA",
  Ro = "RO",
  Ru = "RU",
  Rw = "RW",
  Re = "RE",
  Bl = "BL",
  Sh = "SH",
  Kn = "KN",
  Lc = "LC",
  Mf = "MF",
  Pm = "PM",
  Vc = "VC",
  Ws = "WS",
  Sm = "SM",
  St = "ST",
  Sa = "SA",
  Sn = "SN",
  Rs = "RS",
  Sc = "SC",
  Sl = "SL",
  Sg = "SG",
  Sx = "SX",
  Sk = "SK",
  Si = "SI",
  Sb = "SB",
  So = "SO",
  Za = "ZA",
  Gs = "GS",
  Ss = "SS",
  Es = "ES",
  Lk = "LK",
  Sd = "SD",
  Sr = "SR",
  Sj = "SJ",
  Sz = "SZ",
  Se = "SE",
  Ch = "CH",
  Sy = "SY",
  Tw = "TW",
  Tj = "TJ",
  Tz = "TZ",
  Th = "TH",
  Tl = "TL",
  Tg = "TG",
  Tk = "TK",
  To = "TO",
  Tt = "TT",
  Tn = "TN",
  Tr = "TR",
  Tm = "TM",
  Tc = "TC",
  Tv = "TV",
  Ug = "UG",
  Ua = "UA",
  Ae = "AE",
  Gb = "GB",
  Us = "US",
  Um = "UM",
  Uy = "UY",
  Uz = "UZ",
  Vu = "VU",
  Ve = "VE",
  Vn = "VN",
  Vg = "VG",
  Vi = "VI",
  Wf = "WF",
  Eh = "EH",
  Ye = "YE",
  Zm = "ZM",
  Zw = "ZW",
  UnmappedValue = "unmapped_value",
}
/**
 * The ISO3166-1 Alpha2 Code of the Country
 */
export type HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberValueOpen =
  OpenEnum<
    typeof HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberValue
  >;

/**
 * The country code
 */
export type HrisUpdateEmployeeRequestDtoSchemasCountry = {
  sourceValue?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumber4
    | Array<any>
    | null
    | undefined;
  /**
   * The ISO3166-1 Alpha2 Code of the Country
   */
  value?:
    | HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberValueOpen
    | null
    | undefined;
};

export type HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberType4 = {};

export type HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberType4
  | Array<any>;

/**
 * The type of the national identity number
 */
export enum HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValue {
  Ssn = "ssn",
  Nin = "nin",
  Sin = "sin",
  Nid = "nid",
  Pin = "pin",
  Pn = "pn",
  Umcn = "umcn",
  Pic = "pic",
  Ric = "ric",
  Idnum = "idnum",
  Cid = "cid",
  Nidnr = "nidnr",
  Pan = "pan",
  Aadhaar = "aadhaar",
  Epic = "epic",
  Ptn = "ptn",
  Itin = "itin",
  Tin = "tin",
  Uprc = "uprc",
  Pcode = "pcode",
  Ssi = "ssi",
  Cedula = "cedula",
  Passport = "passport",
  Voterid = "voterid",
  Ntin = "ntin",
  Bn = "bn",
  Fnr = "fnr",
  Mva = "mva",
  CivilId = "civil_id",
  Cnic = "cnic",
  Nric = "nric",
  Fin = "fin",
  Uen = "uen",
  Registrationnumber = "registrationnumber",
  Nic = "nic",
  Personnummer = "personnummer",
  Ahv = "ahv",
  Id = "id",
  Eid = "eid",
  Va = "va",
  Pid = "pid",
  Nrt = "nrt",
  Nipt = "nipt",
  Cbu = "cbu",
  Cuit = "cuit",
  Dni = "dni",
  Businessid = "businessid",
  Vnr = "vnr",
  Abn = "abn",
  Acn = "acn",
  Tfn = "tfn",
  Jmbg = "jmbg",
  Bis = "bis",
  Insz = "insz",
  Nn = "nn",
  Egn = "egn",
  Pnf = "pnf",
  Vat = "vat",
  Cnpj = "cnpj",
  Unp = "unp",
  Gst = "gst",
  Pst = "pst",
  Qst = "qst",
  Ni = "ni",
  Dic = "dic",
  Rc = "rc",
  Uid = "uid",
  Rut = "rut",
  Uscc = "uscc",
  Cpf = "cpf",
  Cpj = "cpj",
  Cr = "cr",
  Stnr = "stnr",
  Svnr = "svnr",
  Ncf = "ncf",
  Rnc = "rnc",
  Nif = "nif",
  Ci = "ci",
  Ik = "ik",
  Kmkr = "kmkr",
  Registrikood = "registrikood",
  Tn = "tn",
  Ruc = "ruc",
  Nit = "nit",
  Alv = "alv",
  Hetu = "hetu",
  Ytunnus = "ytunnus",
  Vn = "vn",
  Utr = "utr",
  Nifp = "nifp",
  Amka = "amka",
  Cui = "cui",
  Nir = "nir",
  Siren = "siren",
  Siret = "siret",
  Tva = "tva",
  Oib = "oib",
  Hkid = "hkid",
  Anum = "anum",
  Kennitala = "kennitala",
  Vsk = "vsk",
  Npwp = "npwp",
  Pps = "pps",
  Gstin = "gstin",
  Idnr = "idnr",
  Hr = "hr",
  Aic = "aic",
  Codicefiscale = "codicefiscale",
  Iva = "iva",
  Peid = "peid",
  Asmens = "asmens",
  Pvm = "pvm",
  Ctps = "ctps",
  Vrn = "vrn",
  Vtk = "vtk",
  Int = "int",
  Tk = "tk",
  Pas = "pas",
  Rne = "rne",
  Rg = "rg",
  Nci = "nci",
  Crnm = "crnm",
  Pis = "pis",
  Insee = "insee",
  Tax = "tax",
  Mpf = "mpf",
  Epfo = "epfo",
  Esi = "esi",
  Pran = "pran",
  Uan = "uan",
  Idk = "idk",
  Bsn = "bsn",
  Mid = "mid",
  Sss = "sss",
  Nie = "nie",
  Nss = "nss",
  Arc = "arc",
  Curp = "curp",
  Imss = "imss",
  Rfc = "rfc",
  Ein = "ein",
  Other = "other",
  Unknown = "unknown",
  UnmappedValue = "unmapped_value",
}
/**
 * The type of the national identity number
 */
export type HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValueOpen =
  OpenEnum<
    typeof HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValue
  >;

export type HrisUpdateEmployeeRequestDtoSchemasType = {
  sourceValue?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberType4
    | Array<any>
    | null
    | undefined;
  /**
   * The type of the national identity number
   */
  value?:
    | HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValueOpen
    | null
    | undefined;
};

/**
 * The national identity number
 *
 * @deprecated class: This will be removed in a future release, please migrate away from it as soon as possible.
 */
export type HrisUpdateEmployeeRequestDtoNationalIdentityNumber = {
  /**
   * The country code
   */
  country?: HrisUpdateEmployeeRequestDtoSchemasCountry | null | undefined;
  type?: HrisUpdateEmployeeRequestDtoSchemasType | null | undefined;
  value?: string | null | undefined;
};

export type HrisUpdateEmployeeRequestDtoSchemasPreferredLanguage4 = {};

export type HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageSourceValue =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasPreferredLanguage4
  | Array<any>;

/**
 * The ISO639-2 Code of the language
 */
export enum HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageValue {
  Aar = "aar",
  Afr = "afr",
  Amh = "amh",
  Ara = "ara",
  Aym = "aym",
  Aze = "aze",
  Bel = "bel",
  Bul = "bul",
  Bis = "bis",
  Ben = "ben",
  Bos = "bos",
  Byn = "byn",
  Cat = "cat",
  Cha = "cha",
  Ces = "ces",
  Dan = "dan",
  Deu = "deu",
  Div = "div",
  Dzo = "dzo",
  Ell = "ell",
  Eng = "eng",
  Spa = "spa",
  Est = "est",
  Fas = "fas",
  Fan = "fan",
  Ful = "ful",
  Fin = "fin",
  Fij = "fij",
  Fao = "fao",
  Fra = "fra",
  Gle = "gle",
  Grn = "grn",
  Guj = "guj",
  Glv = "glv",
  Heb = "heb",
  Hin = "hin",
  Hrv = "hrv",
  Hat = "hat",
  Hun = "hun",
  Hye = "hye",
  Ind = "ind",
  Isl = "isl",
  Ita = "ita",
  Jpn = "jpn",
  Kat = "kat",
  Kon = "kon",
  Kaz = "kaz",
  Kal = "kal",
  Khm = "khm",
  Kor = "kor",
  Kur = "kur",
  Kir = "kir",
  Lat = "lat",
  Ltz = "ltz",
  Lin = "lin",
  Lao = "lao",
  Lit = "lit",
  Lub = "lub",
  Lav = "lav",
  Mlg = "mlg",
  Mah = "mah",
  Mri = "mri",
  Mkd = "mkd",
  Mon = "mon",
  Mar = "mar",
  Msa = "msa",
  Mlt = "mlt",
  Mya = "mya",
  Nob = "nob",
  Nep = "nep",
  Nld = "nld",
  Nno = "nno",
  Nor = "nor",
  Nbl = "nbl",
  Nya = "nya",
  Pan = "pan",
  Pol = "pol",
  Pus = "pus",
  Por = "por",
  Que = "que",
  Rar = "rar",
  Roh = "roh",
  Rup = "rup",
  Ron = "ron",
  Rus = "rus",
  Kin = "kin",
  Sme = "sme",
  Sag = "sag",
  Sin = "sin",
  Slk = "slk",
  Slv = "slv",
  Smo = "smo",
  Sna = "sna",
  Som = "som",
  Sqi = "sqi",
  Srp = "srp",
  Ssw = "ssw",
  Swe = "swe",
  Swa = "swa",
  Tam = "tam",
  Tel = "tel",
  Tgk = "tgk",
  Tha = "tha",
  Tir = "tir",
  Tig = "tig",
  Tuk = "tuk",
  Tsn = "tsn",
  Ton = "ton",
  Tur = "tur",
  Tso = "tso",
  Ukr = "ukr",
  Urd = "urd",
  Uzb = "uzb",
  Ven = "ven",
  Vie = "vie",
  Xho = "xho",
  Zho = "zho",
  Zul = "zul",
  UnmappedValue = "unmapped_value",
}
/**
 * The ISO639-2 Code of the language
 */
export type HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageValueOpen =
  OpenEnum<typeof HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageValue>;

/**
 * The employee preferred language
 */
export type HrisUpdateEmployeeRequestDtoPreferredLanguage = {
  sourceValue?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasPreferredLanguage4
    | Array<any>
    | null
    | undefined;
  /**
   * The ISO639-2 Code of the language
   */
  value?:
    | HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageValueOpen
    | null
    | undefined;
};

export type HrisUpdateEmployeeRequestDtoSchemasWorkLocation4 = {};

export type HrisUpdateEmployeeRequestDtoSchemasWorkLocationSourceValue =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasWorkLocation4
  | Array<any>;

/**
 * The ISO3166-1 Alpha2 Code of the Country
 */
export enum HrisUpdateEmployeeRequestDtoSchemasWorkLocationValue {
  Af = "AF",
  Al = "AL",
  Dz = "DZ",
  As = "AS",
  Ad = "AD",
  Ao = "AO",
  Ai = "AI",
  Aq = "AQ",
  Ag = "AG",
  Ar = "AR",
  Am = "AM",
  Aw = "AW",
  Au = "AU",
  At = "AT",
  Az = "AZ",
  Bs = "BS",
  Bh = "BH",
  Bd = "BD",
  Bb = "BB",
  By = "BY",
  Be = "BE",
  Bz = "BZ",
  Bj = "BJ",
  Bm = "BM",
  Bt = "BT",
  Bo = "BO",
  Bq = "BQ",
  Ba = "BA",
  Bw = "BW",
  Bv = "BV",
  Br = "BR",
  Io = "IO",
  Bn = "BN",
  Bg = "BG",
  Bf = "BF",
  Bi = "BI",
  Kh = "KH",
  Cm = "CM",
  Ca = "CA",
  Cv = "CV",
  Ky = "KY",
  Cf = "CF",
  Td = "TD",
  Cl = "CL",
  Cn = "CN",
  Cx = "CX",
  Cc = "CC",
  Co = "CO",
  Km = "KM",
  Cg = "CG",
  Cd = "CD",
  Ck = "CK",
  Cr = "CR",
  Hr = "HR",
  Cu = "CU",
  Cw = "CW",
  Cy = "CY",
  Cz = "CZ",
  Ci = "CI",
  Dk = "DK",
  Dj = "DJ",
  Dm = "DM",
  Do = "DO",
  Ec = "EC",
  Eg = "EG",
  Sv = "SV",
  Gq = "GQ",
  Er = "ER",
  Ee = "EE",
  Et = "ET",
  Fk = "FK",
  Fo = "FO",
  Fj = "FJ",
  Fi = "FI",
  Fr = "FR",
  Gf = "GF",
  Pf = "PF",
  Tf = "TF",
  Ga = "GA",
  Gm = "GM",
  Ge = "GE",
  De = "DE",
  Gh = "GH",
  Gi = "GI",
  Gr = "GR",
  Gl = "GL",
  Gd = "GD",
  Gp = "GP",
  Gu = "GU",
  Gt = "GT",
  Gg = "GG",
  Gn = "GN",
  Gw = "GW",
  Gy = "GY",
  Ht = "HT",
  Hm = "HM",
  Va = "VA",
  Hn = "HN",
  Hk = "HK",
  Hu = "HU",
  Is = "IS",
  In = "IN",
  Id = "ID",
  Ir = "IR",
  Iq = "IQ",
  Ie = "IE",
  Im = "IM",
  Il = "IL",
  It = "IT",
  Jm = "JM",
  Jp = "JP",
  Je = "JE",
  Jo = "JO",
  Kz = "KZ",
  Ke = "KE",
  Ki = "KI",
  Kp = "KP",
  Kr = "KR",
  Kw = "KW",
  Kg = "KG",
  La = "LA",
  Lv = "LV",
  Lb = "LB",
  Ls = "LS",
  Lr = "LR",
  Ly = "LY",
  Li = "LI",
  Lt = "LT",
  Lu = "LU",
  Mo = "MO",
  Mk = "MK",
  Mg = "MG",
  Mw = "MW",
  My = "MY",
  Mv = "MV",
  Ml = "ML",
  Mt = "MT",
  Mh = "MH",
  Mq = "MQ",
  Mr = "MR",
  Mu = "MU",
  Yt = "YT",
  Mx = "MX",
  Fm = "FM",
  Md = "MD",
  Mc = "MC",
  Mn = "MN",
  Me = "ME",
  Ms = "MS",
  Ma = "MA",
  Mz = "MZ",
  Mm = "MM",
  Na = "NA",
  Nr = "NR",
  Np = "NP",
  Nl = "NL",
  Nc = "NC",
  Nz = "NZ",
  Ni = "NI",
  Ne = "NE",
  Ng = "NG",
  Nu = "NU",
  Nf = "NF",
  Mp = "MP",
  No = "NO",
  Om = "OM",
  Pk = "PK",
  Pw = "PW",
  Ps = "PS",
  Pa = "PA",
  Pg = "PG",
  Py = "PY",
  Pe = "PE",
  Ph = "PH",
  Pn = "PN",
  Pl = "PL",
  Pt = "PT",
  Pr = "PR",
  Qa = "QA",
  Ro = "RO",
  Ru = "RU",
  Rw = "RW",
  Re = "RE",
  Bl = "BL",
  Sh = "SH",
  Kn = "KN",
  Lc = "LC",
  Mf = "MF",
  Pm = "PM",
  Vc = "VC",
  Ws = "WS",
  Sm = "SM",
  St = "ST",
  Sa = "SA",
  Sn = "SN",
  Rs = "RS",
  Sc = "SC",
  Sl = "SL",
  Sg = "SG",
  Sx = "SX",
  Sk = "SK",
  Si = "SI",
  Sb = "SB",
  So = "SO",
  Za = "ZA",
  Gs = "GS",
  Ss = "SS",
  Es = "ES",
  Lk = "LK",
  Sd = "SD",
  Sr = "SR",
  Sj = "SJ",
  Sz = "SZ",
  Se = "SE",
  Ch = "CH",
  Sy = "SY",
  Tw = "TW",
  Tj = "TJ",
  Tz = "TZ",
  Th = "TH",
  Tl = "TL",
  Tg = "TG",
  Tk = "TK",
  To = "TO",
  Tt = "TT",
  Tn = "TN",
  Tr = "TR",
  Tm = "TM",
  Tc = "TC",
  Tv = "TV",
  Ug = "UG",
  Ua = "UA",
  Ae = "AE",
  Gb = "GB",
  Us = "US",
  Um = "UM",
  Uy = "UY",
  Uz = "UZ",
  Vu = "VU",
  Ve = "VE",
  Vn = "VN",
  Vg = "VG",
  Vi = "VI",
  Wf = "WF",
  Eh = "EH",
  Ye = "YE",
  Zm = "ZM",
  Zw = "ZW",
  UnmappedValue = "unmapped_value",
}
/**
 * The ISO3166-1 Alpha2 Code of the Country
 */
export type HrisUpdateEmployeeRequestDtoSchemasWorkLocationValueOpen = OpenEnum<
  typeof HrisUpdateEmployeeRequestDtoSchemasWorkLocationValue
>;

/**
 * The country code
 */
export type HrisUpdateEmployeeRequestDtoSchemasWorkLocationCountry = {
  sourceValue?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasWorkLocation4
    | Array<any>
    | null
    | undefined;
  /**
   * The ISO3166-1 Alpha2 Code of the Country
   */
  value?:
    | HrisUpdateEmployeeRequestDtoSchemasWorkLocationValueOpen
    | null
    | undefined;
};

export type HrisUpdateEmployeeRequestDtoSchemasWorkLocationState4 = {};

export type HrisUpdateEmployeeRequestDtoSchemasWorkLocationStateSourceValue =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasWorkLocationState4
  | Array<any>;

/**
 * The ISO3166-2 sub division where the location is situated
 */
export type HrisUpdateEmployeeRequestDtoSchemasState = {
  sourceValue?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasWorkLocationState4
    | Array<any>
    | null
    | undefined;
  /**
   * state (ISO3166-2 Sub Division Code) - value must be a valid enum value
   */
  value?: string | null | undefined;
};

/**
 * The employee work location
 */
export type HrisUpdateEmployeeRequestDtoWorkLocation = {
  /**
   * The city where the location is situated
   */
  city?: string | null | undefined;
  /**
   * The country code
   */
  country?:
    | HrisUpdateEmployeeRequestDtoSchemasWorkLocationCountry
    | null
    | undefined;
  /**
   * Unique identifier
   */
  id?: string | null | undefined;
  /**
   * The name of the location
   */
  name?: string | null | undefined;
  /**
   * Value to pass through to the provider
   */
  passthrough?: { [k: string]: any } | null | undefined;
  /**
   * The phone number of the location
   */
  phoneNumber?: string | null | undefined;
  /**
   * The ISO3166-2 sub division where the location is situated
   */
  state?: HrisUpdateEmployeeRequestDtoSchemasState | null | undefined;
  /**
   * The first line of the address
   */
  street1?: string | null | undefined;
  /**
   * The second line of the address
   */
  street2?: string | null | undefined;
  /**
   * The ZIP code/Postal code of the location
   */
  zipCode?: string | null | undefined;
};

export type HrisUpdateEmployeeRequestDto = {
  /**
   * The employee avatar
   */
  avatar?: HrisUpdateEmployeeRequestDtoAvatar | null | undefined;
  /**
   * The employee avatar Url
   */
  avatarUrl?: string | null | undefined;
  /**
   * Current benefits of the employee
   */
  benefits?: Array<CreateHRISBenefit> | null | undefined;
  /**
   * The next birthday of the employee (upcoming birthday)
   */
  birthday?: Date | null | undefined;
  /**
   * The citizenships of the Employee
   */
  citizenships?: Array<CountryCodeEnum> | null | undefined;
  /**
   * The employee company id
   */
  companyId?: string | null | undefined;
  /**
   * The employee company name
   *
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  companyName?: string | null | undefined;
  /**
   * The employee custom fields
   */
  customFields?: Array<CustomFields> | null | undefined;
  /**
   * The date when the employee was born
   */
  dateOfBirth?: Date | null | undefined;
  /**
   * The employee department
   */
  department?: string | null | undefined;
  /**
   * The employee department id
   */
  departmentId?: string | null | undefined;
  /**
   * The employee display name
   */
  displayName?: string | null | undefined;
  /**
   * The assigned employee number
   */
  employeeNumber?: string | null | undefined;
  /**
   * The employee employment
   */
  employment?: HrisUpdateEmployeeRequestDtoEmployment | null | undefined;
  /**
   * The employment work schedule type (e.g., full-time, part-time)
   *
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  employmentContractType?:
    | HrisUpdateEmployeeRequestDtoEmploymentContractType
    | null
    | undefined;
  /**
   * The employee employment status
   */
  employmentStatus?:
    | HrisUpdateEmployeeRequestDtoEmploymentStatus
    | null
    | undefined;
  /**
   * The employee employment type
   *
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  employmentType?:
    | HrisUpdateEmployeeRequestDtoEmploymentType
    | null
    | undefined;
  /**
   * The employee ethnicity
   */
  ethnicity?: HrisUpdateEmployeeRequestDtoEthnicity | null | undefined;
  /**
   * The employee first name
   */
  firstName?: string | null | undefined;
  /**
   * The employee gender
   */
  gender?: HrisUpdateEmployeeRequestDtoGender | null | undefined;
  /**
   * The employee hire date
   */
  hireDate?: Date | null | undefined;
  /**
   * The employee home location
   */
  homeLocation?: HrisUpdateEmployeeRequestDtoHomeLocation | null | undefined;
  /**
   * The employee job id
   *
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  jobId?: string | null | undefined;
  /**
   * If the source of the job_title is the Employee's current Employment, and that Employment pertains exclusively to this Employee, then the active Employment job_title will also be written
   */
  jobTitle?: string | null | undefined;
  /**
   * The employee last name
   */
  lastName?: string | null | undefined;
  /**
   * The employee manager ID
   */
  managerId?: string | null | undefined;
  /**
   * The employee marital status
   */
  maritalStatus?: HrisUpdateEmployeeRequestDtoMaritalStatus | null | undefined;
  /**
   * The employee name
   */
  name?: string | null | undefined;
  /**
   * The national identity number
   *
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  nationalIdentityNumber?:
    | HrisUpdateEmployeeRequestDtoNationalIdentityNumber
    | null
    | undefined;
  /**
   * The national identity numbers
   */
  nationalIdentityNumbers?:
    | Array<NationalIdentityNumberApiModel>
    | null
    | undefined;
  /**
   * Value to pass through to the provider
   */
  passthrough?: { [k: string]: any } | null | undefined;
  /**
   * The employee personal email
   */
  personalEmail?: string | null | undefined;
  /**
   * The employee personal phone number
   */
  personalPhoneNumber?: string | null | undefined;
  /**
   * The employee preferred language
   */
  preferredLanguage?:
    | HrisUpdateEmployeeRequestDtoPreferredLanguage
    | null
    | undefined;
  /**
   * The employee start date
   */
  startDate?: Date | null | undefined;
  /**
   * The employee team id
   */
  teamId?: string | null | undefined;
  /**
   * The employee termination date
   */
  terminationDate?: Date | null | undefined;
  /**
   * The prefix of the employee's name (e.g., Mr, Ms, Dr)
   */
  title?: string | null | undefined;
  /**
   * The employee work email
   */
  workEmail?: string | null | undefined;
  /**
   * The employee work location
   */
  workLocation?: HrisUpdateEmployeeRequestDtoWorkLocation | null | undefined;
  /**
   * The employee work phone number
   */
  workPhoneNumber?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmployeeRequestDtoAvatar$inboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoAvatar,
  z.ZodTypeDef,
  unknown
> = z.object({
  base64: z.nullable(z.string()).optional(),
  url: z.nullable(z.string()).optional(),
});

/** @internal */
export type HrisUpdateEmployeeRequestDtoAvatar$Outbound = {
  base64?: string | null | undefined;
  url?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmployeeRequestDtoAvatar$outboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoAvatar$Outbound,
  z.ZodTypeDef,
  HrisUpdateEmployeeRequestDtoAvatar
> = z.object({
  base64: z.nullable(z.string()).optional(),
  url: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoAvatar$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoAvatar$inboundSchema` instead. */
  export const inboundSchema = HrisUpdateEmployeeRequestDtoAvatar$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoAvatar$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoAvatar$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoAvatar$Outbound` instead. */
  export type Outbound = HrisUpdateEmployeeRequestDtoAvatar$Outbound;
}

export function hrisUpdateEmployeeRequestDtoAvatarToJSON(
  hrisUpdateEmployeeRequestDtoAvatar: HrisUpdateEmployeeRequestDtoAvatar,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoAvatar$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoAvatar,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoAvatarFromJSON(
  jsonString: string,
): SafeParseResult<HrisUpdateEmployeeRequestDtoAvatar, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoAvatar$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoAvatar' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType4$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType4$Outbound =
  {};

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType4$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType4$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType4$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType4$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType4$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType4$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType4$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType4$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType4$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentContractType4ToJSON(
  hrisUpdateEmployeeRequestDtoSchemasEmploymentContractType4:
    HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType4,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType4$outboundSchema
      .parse(hrisUpdateEmployeeRequestDtoSchemasEmploymentContractType4),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentContractType4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType4' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeSourceValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType4$inboundSchema
    ),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeSourceValue$Outbound =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType4$Outbound
  | Array<any>;

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeSourceValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeSourceValue$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeSourceValue
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType4$outboundSchema
    ),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeSourceValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeSourceValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeSourceValue$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeSourceValue$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeSourceValue$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeSourceValueToJSON(
  hrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeSourceValue:
    HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeSourceValue,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeSourceValue$outboundSchema
      .parse(
        hrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeSourceValue,
      ),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(
        HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeValue,
      ),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeValueOpen,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeValueOpen
  > = z.union([
    z.nativeEnum(
      HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeValue,
    ),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeValue$outboundSchema;
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasContractType$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasContractType,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source_value: z.nullable(
      z.union([
        z.string(),
        z.number(),
        z.boolean(),
        z.lazy(() =>
          HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType4$inboundSchema
        ),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeValue$inboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "source_value": "sourceValue",
    });
  });

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasContractType$Outbound = {
  source_value?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType4$Outbound
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasContractType$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasContractType$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasContractType
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.string(),
        z.number(),
        z.boolean(),
        z.lazy(() =>
          HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType4$outboundSchema
        ),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      HrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeValue$outboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasContractType$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasContractType$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasContractType$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasContractType$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasContractType$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasContractType$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasContractType$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasContractTypeToJSON(
  hrisUpdateEmployeeRequestDtoSchemasContractType:
    HrisUpdateEmployeeRequestDtoSchemasContractType,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasContractType$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoSchemasContractType,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasContractTypeFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasContractType,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasContractType$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasContractType' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoContractType$inboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoContractType,
  z.ZodTypeDef,
  unknown
> = z.object({
  contract_type: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoSchemasContractType$inboundSchema),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  label: z.nullable(z.string()).optional(),
  remote_id: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "contract_type": "contractType",
    "remote_id": "remoteId",
  });
});

/** @internal */
export type HrisUpdateEmployeeRequestDtoContractType$Outbound = {
  contract_type?:
    | HrisUpdateEmployeeRequestDtoSchemasContractType$Outbound
    | null
    | undefined;
  id?: string | null | undefined;
  label?: string | null | undefined;
  remote_id?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmployeeRequestDtoContractType$outboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoContractType$Outbound,
  z.ZodTypeDef,
  HrisUpdateEmployeeRequestDtoContractType
> = z.object({
  contractType: z.nullable(
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasContractType$outboundSchema
    ),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  label: z.nullable(z.string()).optional(),
  remoteId: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    contractType: "contract_type",
    remoteId: "remote_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoContractType$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoContractType$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoContractType$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoContractType$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoContractType$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoContractType$Outbound` instead. */
  export type Outbound = HrisUpdateEmployeeRequestDtoContractType$Outbound;
}

export function hrisUpdateEmployeeRequestDtoContractTypeToJSON(
  hrisUpdateEmployeeRequestDtoContractType:
    HrisUpdateEmployeeRequestDtoContractType,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoContractType$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoContractType,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoContractTypeFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoContractType,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoContractType$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoContractType' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$Outbound =
  {};

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4ToJSON(
  hrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4:
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$outboundSchema
      .parse(
        hrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4,
      ),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$inboundSchema
    ),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue$Outbound =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$Outbound
  | Array<any>;

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$outboundSchema
    ),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValueToJSON(
  hrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue:
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue$outboundSchema
      .parse(
        hrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue,
      ),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(
        HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValue,
      ),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValueOpen,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValueOpen
  > = z.union([
    z.nativeEnum(
      HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValue,
    ),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValue$outboundSchema;
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source_value: z.nullable(
      z.union([
        z.string(),
        z.number(),
        z.boolean(),
        z.lazy(() =>
          HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$inboundSchema
        ),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValue$inboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "source_value": "sourceValue",
    });
  });

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType$Outbound =
  {
    source_value?:
      | string
      | number
      | boolean
      | HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$Outbound
      | Array<any>
      | null
      | undefined;
    value?: string | null | undefined;
  };

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.string(),
        z.number(),
        z.boolean(),
        z.lazy(() =>
          HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractType4$outboundSchema
        ),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentContractTypeValue$outboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeToJSON(
  hrisUpdateEmployeeRequestDtoSchemasEmploymentContractType:
    HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType$outboundSchema
      .parse(hrisUpdateEmployeeRequestDtoSchemasEmploymentContractType),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentContractTypeFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentType4$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentType4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentType4$Outbound =
  {};

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentType4$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentType4$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentType4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentType4$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentType4$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentType4$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentType4$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentType4$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentType4$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentType4$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentType4ToJSON(
  hrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentType4:
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentType4,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentType4$outboundSchema
      .parse(hrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentType4),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentType4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentType4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentType4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentType4' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentType4$inboundSchema
    ),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue$Outbound =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentType4$Outbound
  | Array<any>;

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentType4$outboundSchema
    ),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValueToJSON(
  hrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue:
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue$outboundSchema
      .parse(
        hrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue,
      ),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(
        HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValue,
      ),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValueOpen,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValueOpen
  > = z.union([
    z.nativeEnum(
      HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValue,
    ),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValue$outboundSchema;
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentType$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentType,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source_value: z.nullable(
      z.union([
        z.string(),
        z.number(),
        z.boolean(),
        z.lazy(() =>
          HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentType4$inboundSchema
        ),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValue$inboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "source_value": "sourceValue",
    });
  });

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentType$Outbound = {
  source_value?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentType4$Outbound
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentType$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentType$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasEmploymentType
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.string(),
        z.number(),
        z.boolean(),
        z.lazy(() =>
          HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentType4$outboundSchema
        ),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      HrisUpdateEmployeeRequestDtoSchemasEmploymentEmploymentTypeValue$outboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasEmploymentType$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentType$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentType$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentType$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentType$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentType$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentType$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentTypeToJSON(
  hrisUpdateEmployeeRequestDtoSchemasEmploymentType:
    HrisUpdateEmployeeRequestDtoSchemasEmploymentType,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasEmploymentType$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoSchemasEmploymentType,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentTypeFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasEmploymentType,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentType$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasEmploymentType' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoGrade$inboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoGrade,
  z.ZodTypeDef,
  unknown
> = z.object({
  description: z.nullable(z.string()).optional(),
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  remote_id: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "remote_id": "remoteId",
  });
});

/** @internal */
export type HrisUpdateEmployeeRequestDtoGrade$Outbound = {
  description?: string | null | undefined;
  id?: string | null | undefined;
  name?: string | null | undefined;
  remote_id?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmployeeRequestDtoGrade$outboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoGrade$Outbound,
  z.ZodTypeDef,
  HrisUpdateEmployeeRequestDtoGrade
> = z.object({
  description: z.nullable(z.string()).optional(),
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  remoteId: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    remoteId: "remote_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoGrade$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoGrade$inboundSchema` instead. */
  export const inboundSchema = HrisUpdateEmployeeRequestDtoGrade$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoGrade$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoGrade$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoGrade$Outbound` instead. */
  export type Outbound = HrisUpdateEmployeeRequestDtoGrade$Outbound;
}

export function hrisUpdateEmployeeRequestDtoGradeToJSON(
  hrisUpdateEmployeeRequestDtoGrade: HrisUpdateEmployeeRequestDtoGrade,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoGrade$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoGrade,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoGradeFromJSON(
  jsonString: string,
): SafeParseResult<HrisUpdateEmployeeRequestDtoGrade, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HrisUpdateEmployeeRequestDtoGrade$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoGrade' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmployment4$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmployment4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasEmployment4$Outbound = {};

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmployment4$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmployment4$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasEmployment4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasEmployment4$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmployment4$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmployment4$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmployment4$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmployment4$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmployment4$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasEmployment4$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasEmployment4ToJSON(
  hrisUpdateEmployeeRequestDtoSchemasEmployment4:
    HrisUpdateEmployeeRequestDtoSchemasEmployment4,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasEmployment4$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoSchemasEmployment4,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasEmployment4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasEmployment4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasEmployment4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasEmployment4' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentSourceValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() => HrisUpdateEmployeeRequestDtoSchemasEmployment4$inboundSchema),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentSourceValue$Outbound =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasEmployment4$Outbound
  | Array<any>;

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentSourceValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentSourceValue$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasEmploymentSourceValue
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() => HrisUpdateEmployeeRequestDtoSchemasEmployment4$outboundSchema),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasEmploymentSourceValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentSourceValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentSourceValue$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentSourceValue$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentSourceValue$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentSourceValueToJSON(
  hrisUpdateEmployeeRequestDtoSchemasEmploymentSourceValue:
    HrisUpdateEmployeeRequestDtoSchemasEmploymentSourceValue,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasEmploymentSourceValue$outboundSchema
      .parse(hrisUpdateEmployeeRequestDtoSchemasEmploymentSourceValue),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasEmploymentSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasEmploymentSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(HrisUpdateEmployeeRequestDtoSchemasEmploymentValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentValueOpen,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasEmploymentValueOpen
  > = z.union([
    z.nativeEnum(HrisUpdateEmployeeRequestDtoSchemasEmploymentValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasEmploymentValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentValue$outboundSchema;
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoPayFrequency$inboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoPayFrequency,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.string(),
      z.number(),
      z.boolean(),
      z.lazy(() =>
        HrisUpdateEmployeeRequestDtoSchemasEmployment4$inboundSchema
      ),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisUpdateEmployeeRequestDtoSchemasEmploymentValue$inboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type HrisUpdateEmployeeRequestDtoPayFrequency$Outbound = {
  source_value?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasEmployment4$Outbound
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmployeeRequestDtoPayFrequency$outboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoPayFrequency$Outbound,
  z.ZodTypeDef,
  HrisUpdateEmployeeRequestDtoPayFrequency
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.string(),
      z.number(),
      z.boolean(),
      z.lazy(() =>
        HrisUpdateEmployeeRequestDtoSchemasEmployment4$outboundSchema
      ),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisUpdateEmployeeRequestDtoSchemasEmploymentValue$outboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoPayFrequency$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoPayFrequency$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoPayFrequency$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoPayFrequency$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoPayFrequency$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoPayFrequency$Outbound` instead. */
  export type Outbound = HrisUpdateEmployeeRequestDtoPayFrequency$Outbound;
}

export function hrisUpdateEmployeeRequestDtoPayFrequencyToJSON(
  hrisUpdateEmployeeRequestDtoPayFrequency:
    HrisUpdateEmployeeRequestDtoPayFrequency,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoPayFrequency$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoPayFrequency,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoPayFrequencyFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoPayFrequency,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoPayFrequency$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoPayFrequency' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriod4$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriod4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriod4$Outbound =
  {};

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriod4$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriod4$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriod4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriod4$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriod4$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriod4$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriod4$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriod4$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriod4$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriod4$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriod4ToJSON(
  hrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriod4:
    HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriod4,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriod4$outboundSchema
      .parse(hrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriod4),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriod4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriod4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriod4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriod4' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriod4$inboundSchema
    ),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue$Outbound =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriod4$Outbound
  | Array<any>;

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriod4$outboundSchema
    ),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValueToJSON(
  hrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue:
    HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue$outboundSchema
      .parse(hrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodValueOpen,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodValueOpen
  > = z.union([
    z.nativeEnum(HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodValue$outboundSchema;
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoPayPeriod$inboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoPayPeriod,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.string(),
      z.number(),
      z.boolean(),
      z.lazy(() =>
        HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriod4$inboundSchema
      ),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodValue$inboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type HrisUpdateEmployeeRequestDtoPayPeriod$Outbound = {
  source_value?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriod4$Outbound
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmployeeRequestDtoPayPeriod$outboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoPayPeriod$Outbound,
  z.ZodTypeDef,
  HrisUpdateEmployeeRequestDtoPayPeriod
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.string(),
      z.number(),
      z.boolean(),
      z.lazy(() =>
        HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriod4$outboundSchema
      ),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisUpdateEmployeeRequestDtoSchemasEmploymentPayPeriodValue$outboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoPayPeriod$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoPayPeriod$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoPayPeriod$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoPayPeriod$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoPayPeriod$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoPayPeriod$Outbound` instead. */
  export type Outbound = HrisUpdateEmployeeRequestDtoPayPeriod$Outbound;
}

export function hrisUpdateEmployeeRequestDtoPayPeriodToJSON(
  hrisUpdateEmployeeRequestDtoPayPeriod: HrisUpdateEmployeeRequestDtoPayPeriod,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoPayPeriod$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoPayPeriod,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoPayPeriodFromJSON(
  jsonString: string,
): SafeParseResult<HrisUpdateEmployeeRequestDtoPayPeriod, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoPayPeriod$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoPayPeriod' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType4$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType4$Outbound =
  {};

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType4$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType4$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType4$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType4$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType4$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType4$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType4$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType4$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType4$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType4ToJSON(
  hrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType4:
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType4,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType4$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType4,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType4' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeSourceValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType4$inboundSchema
    ),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeSourceValue$Outbound =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType4$Outbound
  | Array<any>;

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeSourceValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeSourceValue$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeSourceValue
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType4$outboundSchema
    ),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeSourceValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeSourceValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeSourceValue$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeSourceValue$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeSourceValue$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeSourceValueToJSON(
  hrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeSourceValue:
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeSourceValue,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeSourceValue$outboundSchema
      .parse(hrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeSourceValue),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeValueOpen,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeValueOpen
  > = z.union([
    z.nativeEnum(HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeValue$outboundSchema;
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source_value: z.nullable(
      z.union([
        z.string(),
        z.number(),
        z.boolean(),
        z.lazy(() =>
          HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType4$inboundSchema
        ),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeValue$inboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "source_value": "sourceValue",
    });
  });

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType$Outbound = {
  source_value?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType4$Outbound
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.string(),
        z.number(),
        z.boolean(),
        z.lazy(() =>
          HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType4$outboundSchema
        ),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeValue$outboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeToJSON(
  hrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType:
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentTypeTypeFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoType$inboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoType,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.nullable(z.string()).optional(),
  label: z.nullable(z.string()).optional(),
  remote_id: z.nullable(z.string()).optional(),
  type: z.nullable(
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType$inboundSchema
    ),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "remote_id": "remoteId",
  });
});

/** @internal */
export type HrisUpdateEmployeeRequestDtoType$Outbound = {
  id?: string | null | undefined;
  label?: string | null | undefined;
  remote_id?: string | null | undefined;
  type?:
    | HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType$Outbound
    | null
    | undefined;
};

/** @internal */
export const HrisUpdateEmployeeRequestDtoType$outboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoType$Outbound,
  z.ZodTypeDef,
  HrisUpdateEmployeeRequestDtoType
> = z.object({
  id: z.nullable(z.string()).optional(),
  label: z.nullable(z.string()).optional(),
  remoteId: z.nullable(z.string()).optional(),
  type: z.nullable(
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeType$outboundSchema
    ),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    remoteId: "remote_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoType$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoType$inboundSchema` instead. */
  export const inboundSchema = HrisUpdateEmployeeRequestDtoType$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoType$outboundSchema` instead. */
  export const outboundSchema = HrisUpdateEmployeeRequestDtoType$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoType$Outbound` instead. */
  export type Outbound = HrisUpdateEmployeeRequestDtoType$Outbound;
}

export function hrisUpdateEmployeeRequestDtoTypeToJSON(
  hrisUpdateEmployeeRequestDtoType: HrisUpdateEmployeeRequestDtoType,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoType$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoType,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoTypeFromJSON(
  jsonString: string,
): SafeParseResult<HrisUpdateEmployeeRequestDtoType, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HrisUpdateEmployeeRequestDtoType$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoType' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTime4$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTime4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTime4$Outbound =
  {};

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTime4$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTime4$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTime4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTime4$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTime4$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTime4$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTime4$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTime4$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTime4$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTime4$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTime4ToJSON(
  hrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTime4:
    HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTime4,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTime4$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTime4,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTime4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTime4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTime4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTime4' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTime4$inboundSchema
    ),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue$Outbound =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTime4$Outbound
  | Array<any>;

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTime4$outboundSchema
    ),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValueToJSON(
  hrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue:
    HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue$outboundSchema
      .parse(hrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeValueOpen,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeValueOpen
  > = z.union([
    z.nativeEnum(HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeValue$outboundSchema;
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoPeriod$inboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoPeriod,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.string(),
      z.number(),
      z.boolean(),
      z.lazy(() =>
        HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTime4$inboundSchema
      ),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeValue$inboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type HrisUpdateEmployeeRequestDtoPeriod$Outbound = {
  source_value?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTime4$Outbound
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmployeeRequestDtoPeriod$outboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoPeriod$Outbound,
  z.ZodTypeDef,
  HrisUpdateEmployeeRequestDtoPeriod
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.string(),
      z.number(),
      z.boolean(),
      z.lazy(() =>
        HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTime4$outboundSchema
      ),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisUpdateEmployeeRequestDtoSchemasEmploymentWorkTimeValue$outboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoPeriod$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoPeriod$inboundSchema` instead. */
  export const inboundSchema = HrisUpdateEmployeeRequestDtoPeriod$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoPeriod$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoPeriod$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoPeriod$Outbound` instead. */
  export type Outbound = HrisUpdateEmployeeRequestDtoPeriod$Outbound;
}

export function hrisUpdateEmployeeRequestDtoPeriodToJSON(
  hrisUpdateEmployeeRequestDtoPeriod: HrisUpdateEmployeeRequestDtoPeriod,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoPeriod$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoPeriod,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoPeriodFromJSON(
  jsonString: string,
): SafeParseResult<HrisUpdateEmployeeRequestDtoPeriod, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoPeriod$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoPeriod' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoWorkTime$inboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoWorkTime,
  z.ZodTypeDef,
  unknown
> = z.object({
  duration: z.nullable(z.string()).optional(),
  period: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoPeriod$inboundSchema),
  ).optional(),
});

/** @internal */
export type HrisUpdateEmployeeRequestDtoWorkTime$Outbound = {
  duration?: string | null | undefined;
  period?: HrisUpdateEmployeeRequestDtoPeriod$Outbound | null | undefined;
};

/** @internal */
export const HrisUpdateEmployeeRequestDtoWorkTime$outboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoWorkTime$Outbound,
  z.ZodTypeDef,
  HrisUpdateEmployeeRequestDtoWorkTime
> = z.object({
  duration: z.nullable(z.string()).optional(),
  period: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoPeriod$outboundSchema),
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoWorkTime$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoWorkTime$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoWorkTime$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoWorkTime$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoWorkTime$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoWorkTime$Outbound` instead. */
  export type Outbound = HrisUpdateEmployeeRequestDtoWorkTime$Outbound;
}

export function hrisUpdateEmployeeRequestDtoWorkTimeToJSON(
  hrisUpdateEmployeeRequestDtoWorkTime: HrisUpdateEmployeeRequestDtoWorkTime,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoWorkTime$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoWorkTime,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoWorkTimeFromJSON(
  jsonString: string,
): SafeParseResult<HrisUpdateEmployeeRequestDtoWorkTime, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoWorkTime$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoWorkTime' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoEmployment$inboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoEmployment,
  z.ZodTypeDef,
  unknown
> = z.object({
  contract_type: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoContractType$inboundSchema),
  ).optional(),
  effective_date: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  employment_contract_type: z.nullable(
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType$inboundSchema
    ),
  ).optional(),
  employment_type: z.nullable(
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentType$inboundSchema
    ),
  ).optional(),
  end_date: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  grade: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoGrade$inboundSchema),
  ).optional(),
  job_title: z.nullable(z.string()).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  pay_currency: z.nullable(z.string()).optional(),
  pay_frequency: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoPayFrequency$inboundSchema),
  ).optional(),
  pay_period: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoPayPeriod$inboundSchema),
  ).optional(),
  pay_rate: z.nullable(z.string()).optional(),
  payroll_code: z.nullable(z.string()).optional(),
  type: z.nullable(z.lazy(() => HrisUpdateEmployeeRequestDtoType$inboundSchema))
    .optional(),
  unified_custom_fields: z.nullable(z.record(z.any())).optional(),
  work_time: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoWorkTime$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "contract_type": "contractType",
    "effective_date": "effectiveDate",
    "employment_contract_type": "employmentContractType",
    "employment_type": "employmentType",
    "end_date": "endDate",
    "job_title": "jobTitle",
    "pay_currency": "payCurrency",
    "pay_frequency": "payFrequency",
    "pay_period": "payPeriod",
    "pay_rate": "payRate",
    "payroll_code": "payrollCode",
    "unified_custom_fields": "unifiedCustomFields",
    "work_time": "workTime",
  });
});

/** @internal */
export type HrisUpdateEmployeeRequestDtoEmployment$Outbound = {
  contract_type?:
    | HrisUpdateEmployeeRequestDtoContractType$Outbound
    | null
    | undefined;
  effective_date?: string | null | undefined;
  employment_contract_type?:
    | HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType$Outbound
    | null
    | undefined;
  employment_type?:
    | HrisUpdateEmployeeRequestDtoSchemasEmploymentType$Outbound
    | null
    | undefined;
  end_date?: string | null | undefined;
  grade?: HrisUpdateEmployeeRequestDtoGrade$Outbound | null | undefined;
  job_title?: string | null | undefined;
  passthrough?: { [k: string]: any } | null | undefined;
  pay_currency?: string | null | undefined;
  pay_frequency?:
    | HrisUpdateEmployeeRequestDtoPayFrequency$Outbound
    | null
    | undefined;
  pay_period?:
    | HrisUpdateEmployeeRequestDtoPayPeriod$Outbound
    | null
    | undefined;
  pay_rate?: string | null | undefined;
  payroll_code?: string | null | undefined;
  type?: HrisUpdateEmployeeRequestDtoType$Outbound | null | undefined;
  unified_custom_fields?: { [k: string]: any } | null | undefined;
  work_time?: HrisUpdateEmployeeRequestDtoWorkTime$Outbound | null | undefined;
};

/** @internal */
export const HrisUpdateEmployeeRequestDtoEmployment$outboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoEmployment$Outbound,
  z.ZodTypeDef,
  HrisUpdateEmployeeRequestDtoEmployment
> = z.object({
  contractType: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoContractType$outboundSchema),
  ).optional(),
  effectiveDate: z.nullable(z.date().transform(v => v.toISOString()))
    .optional(),
  employmentContractType: z.nullable(
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentContractType$outboundSchema
    ),
  ).optional(),
  employmentType: z.nullable(
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentType$outboundSchema
    ),
  ).optional(),
  endDate: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  grade: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoGrade$outboundSchema),
  ).optional(),
  jobTitle: z.nullable(z.string()).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  payCurrency: z.nullable(z.string()).optional(),
  payFrequency: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoPayFrequency$outboundSchema),
  ).optional(),
  payPeriod: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoPayPeriod$outboundSchema),
  ).optional(),
  payRate: z.nullable(z.string()).optional(),
  payrollCode: z.nullable(z.string()).optional(),
  type: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoType$outboundSchema),
  ).optional(),
  unifiedCustomFields: z.nullable(z.record(z.any())).optional(),
  workTime: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoWorkTime$outboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    contractType: "contract_type",
    effectiveDate: "effective_date",
    employmentContractType: "employment_contract_type",
    employmentType: "employment_type",
    endDate: "end_date",
    jobTitle: "job_title",
    payCurrency: "pay_currency",
    payFrequency: "pay_frequency",
    payPeriod: "pay_period",
    payRate: "pay_rate",
    payrollCode: "payroll_code",
    unifiedCustomFields: "unified_custom_fields",
    workTime: "work_time",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoEmployment$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoEmployment$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoEmployment$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoEmployment$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoEmployment$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoEmployment$Outbound` instead. */
  export type Outbound = HrisUpdateEmployeeRequestDtoEmployment$Outbound;
}

export function hrisUpdateEmployeeRequestDtoEmploymentToJSON(
  hrisUpdateEmployeeRequestDtoEmployment:
    HrisUpdateEmployeeRequestDtoEmployment,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoEmployment$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoEmployment,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoEmploymentFromJSON(
  jsonString: string,
): SafeParseResult<HrisUpdateEmployeeRequestDtoEmployment, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoEmployment$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoEmployment' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDto4$inboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDto4,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type HrisUpdateEmployeeRequestDto4$Outbound = {};

/** @internal */
export const HrisUpdateEmployeeRequestDto4$outboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDto4$Outbound,
  z.ZodTypeDef,
  HrisUpdateEmployeeRequestDto4
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDto4$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDto4$inboundSchema` instead. */
  export const inboundSchema = HrisUpdateEmployeeRequestDto4$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDto4$outboundSchema` instead. */
  export const outboundSchema = HrisUpdateEmployeeRequestDto4$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDto4$Outbound` instead. */
  export type Outbound = HrisUpdateEmployeeRequestDto4$Outbound;
}

export function hrisUpdateEmployeeRequestDto4ToJSON(
  hrisUpdateEmployeeRequestDto4: HrisUpdateEmployeeRequestDto4,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDto4$outboundSchema.parse(
      hrisUpdateEmployeeRequestDto4,
    ),
  );
}

export function hrisUpdateEmployeeRequestDto4FromJSON(
  jsonString: string,
): SafeParseResult<HrisUpdateEmployeeRequestDto4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HrisUpdateEmployeeRequestDto4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDto4' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSourceValue$inboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoSourceValue,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.string(),
  z.number(),
  z.boolean(),
  z.lazy(() => HrisUpdateEmployeeRequestDto4$inboundSchema),
  z.array(z.any()),
]);

/** @internal */
export type HrisUpdateEmployeeRequestDtoSourceValue$Outbound =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDto4$Outbound
  | Array<any>;

/** @internal */
export const HrisUpdateEmployeeRequestDtoSourceValue$outboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoSourceValue$Outbound,
  z.ZodTypeDef,
  HrisUpdateEmployeeRequestDtoSourceValue
> = z.union([
  z.string(),
  z.number(),
  z.boolean(),
  z.lazy(() => HrisUpdateEmployeeRequestDto4$outboundSchema),
  z.array(z.any()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSourceValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSourceValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSourceValue$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSourceValue$Outbound` instead. */
  export type Outbound = HrisUpdateEmployeeRequestDtoSourceValue$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSourceValueToJSON(
  hrisUpdateEmployeeRequestDtoSourceValue:
    HrisUpdateEmployeeRequestDtoSourceValue,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSourceValue$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoSourceValue,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSourceValue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoValue$inboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoValueOpen,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(HrisUpdateEmployeeRequestDtoValue),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const HrisUpdateEmployeeRequestDtoValue$outboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoValueOpen,
  z.ZodTypeDef,
  HrisUpdateEmployeeRequestDtoValueOpen
> = z.union([
  z.nativeEnum(HrisUpdateEmployeeRequestDtoValue),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoValue$inboundSchema` instead. */
  export const inboundSchema = HrisUpdateEmployeeRequestDtoValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoValue$outboundSchema;
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoEmploymentContractType$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoEmploymentContractType,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source_value: z.nullable(
      z.union([
        z.string(),
        z.number(),
        z.boolean(),
        z.lazy(() => HrisUpdateEmployeeRequestDto4$inboundSchema),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(HrisUpdateEmployeeRequestDtoValue$inboundSchema)
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      "source_value": "sourceValue",
    });
  });

/** @internal */
export type HrisUpdateEmployeeRequestDtoEmploymentContractType$Outbound = {
  source_value?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDto4$Outbound
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmployeeRequestDtoEmploymentContractType$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoEmploymentContractType$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoEmploymentContractType
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.string(),
        z.number(),
        z.boolean(),
        z.lazy(() => HrisUpdateEmployeeRequestDto4$outboundSchema),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(HrisUpdateEmployeeRequestDtoValue$outboundSchema)
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoEmploymentContractType$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoEmploymentContractType$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoEmploymentContractType$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoEmploymentContractType$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoEmploymentContractType$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoEmploymentContractType$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoEmploymentContractType$Outbound;
}

export function hrisUpdateEmployeeRequestDtoEmploymentContractTypeToJSON(
  hrisUpdateEmployeeRequestDtoEmploymentContractType:
    HrisUpdateEmployeeRequestDtoEmploymentContractType,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoEmploymentContractType$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoEmploymentContractType,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoEmploymentContractTypeFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoEmploymentContractType,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoEmploymentContractType$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoEmploymentContractType' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemas4$inboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoSchemas4,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemas4$Outbound = {};

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemas4$outboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoSchemas4$Outbound,
  z.ZodTypeDef,
  HrisUpdateEmployeeRequestDtoSchemas4
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemas4$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemas4$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemas4$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemas4$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemas4$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemas4$Outbound` instead. */
  export type Outbound = HrisUpdateEmployeeRequestDtoSchemas4$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemas4ToJSON(
  hrisUpdateEmployeeRequestDtoSchemas4: HrisUpdateEmployeeRequestDtoSchemas4,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemas4$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoSchemas4,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemas4FromJSON(
  jsonString: string,
): SafeParseResult<HrisUpdateEmployeeRequestDtoSchemas4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemas4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemas4' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasSourceValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() => HrisUpdateEmployeeRequestDtoSchemas4$inboundSchema),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasSourceValue$Outbound =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemas4$Outbound
  | Array<any>;

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasSourceValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasSourceValue$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasSourceValue
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() => HrisUpdateEmployeeRequestDtoSchemas4$outboundSchema),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasSourceValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasSourceValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasSourceValue$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasSourceValue$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasSourceValue$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasSourceValueToJSON(
  hrisUpdateEmployeeRequestDtoSchemasSourceValue:
    HrisUpdateEmployeeRequestDtoSchemasSourceValue,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasSourceValue$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoSchemasSourceValue,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasSourceValue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasValue$inboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoSchemasValueOpen,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(HrisUpdateEmployeeRequestDtoSchemasValue),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasValue$outboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoSchemasValueOpen,
  z.ZodTypeDef,
  HrisUpdateEmployeeRequestDtoSchemasValueOpen
> = z.union([
  z.nativeEnum(HrisUpdateEmployeeRequestDtoSchemasValue),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasValue$outboundSchema;
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoEmploymentStatus$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoEmploymentStatus,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source_value: z.nullable(
      z.union([
        z.string(),
        z.number(),
        z.boolean(),
        z.lazy(() => HrisUpdateEmployeeRequestDtoSchemas4$inboundSchema),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(HrisUpdateEmployeeRequestDtoSchemasValue$inboundSchema)
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      "source_value": "sourceValue",
    });
  });

/** @internal */
export type HrisUpdateEmployeeRequestDtoEmploymentStatus$Outbound = {
  source_value?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemas4$Outbound
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmployeeRequestDtoEmploymentStatus$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoEmploymentStatus$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoEmploymentStatus
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.string(),
        z.number(),
        z.boolean(),
        z.lazy(() => HrisUpdateEmployeeRequestDtoSchemas4$outboundSchema),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(HrisUpdateEmployeeRequestDtoSchemasValue$outboundSchema)
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoEmploymentStatus$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoEmploymentStatus$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoEmploymentStatus$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoEmploymentStatus$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoEmploymentStatus$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoEmploymentStatus$Outbound` instead. */
  export type Outbound = HrisUpdateEmployeeRequestDtoEmploymentStatus$Outbound;
}

export function hrisUpdateEmployeeRequestDtoEmploymentStatusToJSON(
  hrisUpdateEmployeeRequestDtoEmploymentStatus:
    HrisUpdateEmployeeRequestDtoEmploymentStatus,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoEmploymentStatus$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoEmploymentStatus,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoEmploymentStatusFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoEmploymentStatus,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoEmploymentStatus$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoEmploymentStatus' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentType4$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentType4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentType4$Outbound = {};

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentType4$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentType4$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasEmploymentType4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasEmploymentType4$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentType4$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentType4$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentType4$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentType4$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentType4$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentType4$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentType4ToJSON(
  hrisUpdateEmployeeRequestDtoSchemasEmploymentType4:
    HrisUpdateEmployeeRequestDtoSchemasEmploymentType4,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasEmploymentType4$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoSchemasEmploymentType4,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentType4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasEmploymentType4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentType4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasEmploymentType4' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeSourceValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentType4$inboundSchema
    ),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeSourceValue$Outbound =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasEmploymentType4$Outbound
  | Array<any>;

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeSourceValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeSourceValue$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeSourceValue
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentType4$outboundSchema
    ),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeSourceValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeSourceValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeSourceValue$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeSourceValue$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeSourceValue$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentTypeSourceValueToJSON(
  hrisUpdateEmployeeRequestDtoSchemasEmploymentTypeSourceValue:
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeSourceValue,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeSourceValue$outboundSchema
      .parse(hrisUpdateEmployeeRequestDtoSchemasEmploymentTypeSourceValue),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasEmploymentTypeSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeValueOpen,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeValueOpen
  > = z.union([
    z.nativeEnum(HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeValue$outboundSchema;
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoEmploymentType$inboundSchema:
  z.ZodType<HrisUpdateEmployeeRequestDtoEmploymentType, z.ZodTypeDef, unknown> =
    z.object({
      source_value: z.nullable(
        z.union([
          z.string(),
          z.number(),
          z.boolean(),
          z.lazy(() =>
            HrisUpdateEmployeeRequestDtoSchemasEmploymentType4$inboundSchema
          ),
          z.array(z.any()),
        ]),
      ).optional(),
      value: z.nullable(
        HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeValue$inboundSchema,
      ).optional(),
    }).transform((v) => {
      return remap$(v, {
        "source_value": "sourceValue",
      });
    });

/** @internal */
export type HrisUpdateEmployeeRequestDtoEmploymentType$Outbound = {
  source_value?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasEmploymentType4$Outbound
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmployeeRequestDtoEmploymentType$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoEmploymentType$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoEmploymentType
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.string(),
        z.number(),
        z.boolean(),
        z.lazy(() =>
          HrisUpdateEmployeeRequestDtoSchemasEmploymentType4$outboundSchema
        ),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      HrisUpdateEmployeeRequestDtoSchemasEmploymentTypeValue$outboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoEmploymentType$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoEmploymentType$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoEmploymentType$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoEmploymentType$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoEmploymentType$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoEmploymentType$Outbound` instead. */
  export type Outbound = HrisUpdateEmployeeRequestDtoEmploymentType$Outbound;
}

export function hrisUpdateEmployeeRequestDtoEmploymentTypeToJSON(
  hrisUpdateEmployeeRequestDtoEmploymentType:
    HrisUpdateEmployeeRequestDtoEmploymentType,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoEmploymentType$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoEmploymentType,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoEmploymentTypeFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoEmploymentType,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoEmploymentType$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoEmploymentType' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEthnicity4$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEthnicity4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasEthnicity4$Outbound = {};

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEthnicity4$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEthnicity4$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasEthnicity4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasEthnicity4$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEthnicity4$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEthnicity4$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEthnicity4$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEthnicity4$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEthnicity4$Outbound` instead. */
  export type Outbound = HrisUpdateEmployeeRequestDtoSchemasEthnicity4$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasEthnicity4ToJSON(
  hrisUpdateEmployeeRequestDtoSchemasEthnicity4:
    HrisUpdateEmployeeRequestDtoSchemasEthnicity4,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasEthnicity4$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoSchemasEthnicity4,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasEthnicity4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasEthnicity4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasEthnicity4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasEthnicity4' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEthnicitySourceValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEthnicitySourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() => HrisUpdateEmployeeRequestDtoSchemasEthnicity4$inboundSchema),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasEthnicitySourceValue$Outbound =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasEthnicity4$Outbound
  | Array<any>;

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEthnicitySourceValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEthnicitySourceValue$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasEthnicitySourceValue
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() => HrisUpdateEmployeeRequestDtoSchemasEthnicity4$outboundSchema),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasEthnicitySourceValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEthnicitySourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEthnicitySourceValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEthnicitySourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEthnicitySourceValue$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEthnicitySourceValue$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasEthnicitySourceValue$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasEthnicitySourceValueToJSON(
  hrisUpdateEmployeeRequestDtoSchemasEthnicitySourceValue:
    HrisUpdateEmployeeRequestDtoSchemasEthnicitySourceValue,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasEthnicitySourceValue$outboundSchema
      .parse(hrisUpdateEmployeeRequestDtoSchemasEthnicitySourceValue),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasEthnicitySourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasEthnicitySourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasEthnicitySourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasEthnicitySourceValue' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEthnicityValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEthnicityValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(HrisUpdateEmployeeRequestDtoSchemasEthnicityValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasEthnicityValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasEthnicityValueOpen,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasEthnicityValueOpen
  > = z.union([
    z.nativeEnum(HrisUpdateEmployeeRequestDtoSchemasEthnicityValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasEthnicityValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEthnicityValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEthnicityValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasEthnicityValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasEthnicityValue$outboundSchema;
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoEthnicity$inboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoEthnicity,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.string(),
      z.number(),
      z.boolean(),
      z.lazy(() => HrisUpdateEmployeeRequestDtoSchemasEthnicity4$inboundSchema),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisUpdateEmployeeRequestDtoSchemasEthnicityValue$inboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type HrisUpdateEmployeeRequestDtoEthnicity$Outbound = {
  source_value?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasEthnicity4$Outbound
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmployeeRequestDtoEthnicity$outboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoEthnicity$Outbound,
  z.ZodTypeDef,
  HrisUpdateEmployeeRequestDtoEthnicity
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.string(),
      z.number(),
      z.boolean(),
      z.lazy(() =>
        HrisUpdateEmployeeRequestDtoSchemasEthnicity4$outboundSchema
      ),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisUpdateEmployeeRequestDtoSchemasEthnicityValue$outboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoEthnicity$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoEthnicity$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoEthnicity$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoEthnicity$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoEthnicity$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoEthnicity$Outbound` instead. */
  export type Outbound = HrisUpdateEmployeeRequestDtoEthnicity$Outbound;
}

export function hrisUpdateEmployeeRequestDtoEthnicityToJSON(
  hrisUpdateEmployeeRequestDtoEthnicity: HrisUpdateEmployeeRequestDtoEthnicity,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoEthnicity$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoEthnicity,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoEthnicityFromJSON(
  jsonString: string,
): SafeParseResult<HrisUpdateEmployeeRequestDtoEthnicity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoEthnicity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoEthnicity' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasGender4$inboundSchema:
  z.ZodType<HrisUpdateEmployeeRequestDtoSchemasGender4, z.ZodTypeDef, unknown> =
    z.object({});

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasGender4$Outbound = {};

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasGender4$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasGender4$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasGender4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasGender4$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasGender4$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasGender4$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasGender4$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasGender4$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasGender4$Outbound` instead. */
  export type Outbound = HrisUpdateEmployeeRequestDtoSchemasGender4$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasGender4ToJSON(
  hrisUpdateEmployeeRequestDtoSchemasGender4:
    HrisUpdateEmployeeRequestDtoSchemasGender4,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasGender4$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoSchemasGender4,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasGender4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasGender4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasGender4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasGender4' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasGenderSourceValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasGenderSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() => HrisUpdateEmployeeRequestDtoSchemasGender4$inboundSchema),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasGenderSourceValue$Outbound =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasGender4$Outbound
  | Array<any>;

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasGenderSourceValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasGenderSourceValue$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasGenderSourceValue
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() => HrisUpdateEmployeeRequestDtoSchemasGender4$outboundSchema),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasGenderSourceValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasGenderSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasGenderSourceValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasGenderSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasGenderSourceValue$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasGenderSourceValue$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasGenderSourceValue$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasGenderSourceValueToJSON(
  hrisUpdateEmployeeRequestDtoSchemasGenderSourceValue:
    HrisUpdateEmployeeRequestDtoSchemasGenderSourceValue,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasGenderSourceValue$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoSchemasGenderSourceValue,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasGenderSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasGenderSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasGenderSourceValue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasGenderSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasGenderValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasGenderValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(HrisUpdateEmployeeRequestDtoSchemasGenderValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasGenderValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasGenderValueOpen,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasGenderValueOpen
  > = z.union([
    z.nativeEnum(HrisUpdateEmployeeRequestDtoSchemasGenderValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasGenderValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasGenderValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasGenderValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasGenderValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasGenderValue$outboundSchema;
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoGender$inboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoGender,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.string(),
      z.number(),
      z.boolean(),
      z.lazy(() => HrisUpdateEmployeeRequestDtoSchemasGender4$inboundSchema),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisUpdateEmployeeRequestDtoSchemasGenderValue$inboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type HrisUpdateEmployeeRequestDtoGender$Outbound = {
  source_value?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasGender4$Outbound
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmployeeRequestDtoGender$outboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoGender$Outbound,
  z.ZodTypeDef,
  HrisUpdateEmployeeRequestDtoGender
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.string(),
      z.number(),
      z.boolean(),
      z.lazy(() => HrisUpdateEmployeeRequestDtoSchemasGender4$outboundSchema),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisUpdateEmployeeRequestDtoSchemasGenderValue$outboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoGender$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoGender$inboundSchema` instead. */
  export const inboundSchema = HrisUpdateEmployeeRequestDtoGender$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoGender$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoGender$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoGender$Outbound` instead. */
  export type Outbound = HrisUpdateEmployeeRequestDtoGender$Outbound;
}

export function hrisUpdateEmployeeRequestDtoGenderToJSON(
  hrisUpdateEmployeeRequestDtoGender: HrisUpdateEmployeeRequestDtoGender,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoGender$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoGender,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoGenderFromJSON(
  jsonString: string,
): SafeParseResult<HrisUpdateEmployeeRequestDtoGender, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoGender$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoGender' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasHomeLocation4$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasHomeLocation4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasHomeLocation4$Outbound = {};

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasHomeLocation4$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasHomeLocation4$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasHomeLocation4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasHomeLocation4$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasHomeLocation4$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasHomeLocation4$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasHomeLocation4$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasHomeLocation4$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasHomeLocation4$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasHomeLocation4$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasHomeLocation4ToJSON(
  hrisUpdateEmployeeRequestDtoSchemasHomeLocation4:
    HrisUpdateEmployeeRequestDtoSchemasHomeLocation4,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasHomeLocation4$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoSchemasHomeLocation4,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasHomeLocation4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasHomeLocation4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasHomeLocation4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasHomeLocation4' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasHomeLocationSourceValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasHomeLocationSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasHomeLocation4$inboundSchema
    ),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasHomeLocationSourceValue$Outbound =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasHomeLocation4$Outbound
  | Array<any>;

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasHomeLocationSourceValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasHomeLocationSourceValue$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasHomeLocationSourceValue
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasHomeLocation4$outboundSchema
    ),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasHomeLocationSourceValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasHomeLocationSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasHomeLocationSourceValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasHomeLocationSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasHomeLocationSourceValue$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasHomeLocationSourceValue$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasHomeLocationSourceValue$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasHomeLocationSourceValueToJSON(
  hrisUpdateEmployeeRequestDtoSchemasHomeLocationSourceValue:
    HrisUpdateEmployeeRequestDtoSchemasHomeLocationSourceValue,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasHomeLocationSourceValue$outboundSchema
      .parse(hrisUpdateEmployeeRequestDtoSchemasHomeLocationSourceValue),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasHomeLocationSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasHomeLocationSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasHomeLocationSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasHomeLocationSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasHomeLocationValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasHomeLocationValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(HrisUpdateEmployeeRequestDtoSchemasHomeLocationValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasHomeLocationValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasHomeLocationValueOpen,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasHomeLocationValueOpen
  > = z.union([
    z.nativeEnum(HrisUpdateEmployeeRequestDtoSchemasHomeLocationValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasHomeLocationValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasHomeLocationValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasHomeLocationValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasHomeLocationValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasHomeLocationValue$outboundSchema;
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoCountry$inboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoCountry,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.string(),
      z.number(),
      z.boolean(),
      z.lazy(() =>
        HrisUpdateEmployeeRequestDtoSchemasHomeLocation4$inboundSchema
      ),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisUpdateEmployeeRequestDtoSchemasHomeLocationValue$inboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type HrisUpdateEmployeeRequestDtoCountry$Outbound = {
  source_value?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasHomeLocation4$Outbound
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmployeeRequestDtoCountry$outboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoCountry$Outbound,
  z.ZodTypeDef,
  HrisUpdateEmployeeRequestDtoCountry
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.string(),
      z.number(),
      z.boolean(),
      z.lazy(() =>
        HrisUpdateEmployeeRequestDtoSchemasHomeLocation4$outboundSchema
      ),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisUpdateEmployeeRequestDtoSchemasHomeLocationValue$outboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoCountry$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoCountry$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoCountry$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoCountry$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoCountry$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoCountry$Outbound` instead. */
  export type Outbound = HrisUpdateEmployeeRequestDtoCountry$Outbound;
}

export function hrisUpdateEmployeeRequestDtoCountryToJSON(
  hrisUpdateEmployeeRequestDtoCountry: HrisUpdateEmployeeRequestDtoCountry,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoCountry$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoCountry,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoCountryFromJSON(
  jsonString: string,
): SafeParseResult<HrisUpdateEmployeeRequestDtoCountry, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoCountry$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoCountry' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasHomeLocationState4$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasHomeLocationState4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasHomeLocationState4$Outbound = {};

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasHomeLocationState4$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasHomeLocationState4$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasHomeLocationState4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasHomeLocationState4$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasHomeLocationState4$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasHomeLocationState4$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasHomeLocationState4$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasHomeLocationState4$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasHomeLocationState4$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasHomeLocationState4$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasHomeLocationState4ToJSON(
  hrisUpdateEmployeeRequestDtoSchemasHomeLocationState4:
    HrisUpdateEmployeeRequestDtoSchemasHomeLocationState4,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasHomeLocationState4$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoSchemasHomeLocationState4,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasHomeLocationState4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasHomeLocationState4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasHomeLocationState4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasHomeLocationState4' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasHomeLocationStateSourceValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasHomeLocationStateSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasHomeLocationState4$inboundSchema
    ),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasHomeLocationStateSourceValue$Outbound =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasHomeLocationState4$Outbound
  | Array<any>;

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasHomeLocationStateSourceValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasHomeLocationStateSourceValue$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasHomeLocationStateSourceValue
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasHomeLocationState4$outboundSchema
    ),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasHomeLocationStateSourceValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasHomeLocationStateSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasHomeLocationStateSourceValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasHomeLocationStateSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasHomeLocationStateSourceValue$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasHomeLocationStateSourceValue$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasHomeLocationStateSourceValue$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasHomeLocationStateSourceValueToJSON(
  hrisUpdateEmployeeRequestDtoSchemasHomeLocationStateSourceValue:
    HrisUpdateEmployeeRequestDtoSchemasHomeLocationStateSourceValue,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasHomeLocationStateSourceValue$outboundSchema
      .parse(hrisUpdateEmployeeRequestDtoSchemasHomeLocationStateSourceValue),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasHomeLocationStateSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasHomeLocationStateSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasHomeLocationStateSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasHomeLocationStateSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoState$inboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoState,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.string(),
      z.number(),
      z.boolean(),
      z.lazy(() =>
        HrisUpdateEmployeeRequestDtoSchemasHomeLocationState4$inboundSchema
      ),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type HrisUpdateEmployeeRequestDtoState$Outbound = {
  source_value?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasHomeLocationState4$Outbound
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmployeeRequestDtoState$outboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoState$Outbound,
  z.ZodTypeDef,
  HrisUpdateEmployeeRequestDtoState
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.string(),
      z.number(),
      z.boolean(),
      z.lazy(() =>
        HrisUpdateEmployeeRequestDtoSchemasHomeLocationState4$outboundSchema
      ),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoState$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoState$inboundSchema` instead. */
  export const inboundSchema = HrisUpdateEmployeeRequestDtoState$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoState$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoState$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoState$Outbound` instead. */
  export type Outbound = HrisUpdateEmployeeRequestDtoState$Outbound;
}

export function hrisUpdateEmployeeRequestDtoStateToJSON(
  hrisUpdateEmployeeRequestDtoState: HrisUpdateEmployeeRequestDtoState,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoState$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoState,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoStateFromJSON(
  jsonString: string,
): SafeParseResult<HrisUpdateEmployeeRequestDtoState, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HrisUpdateEmployeeRequestDtoState$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoState' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoHomeLocation$inboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoHomeLocation,
  z.ZodTypeDef,
  unknown
> = z.object({
  city: z.nullable(z.string()).optional(),
  country: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoCountry$inboundSchema),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  phone_number: z.nullable(z.string()).optional(),
  state: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoState$inboundSchema),
  ).optional(),
  street_1: z.nullable(z.string()).optional(),
  street_2: z.nullable(z.string()).optional(),
  zip_code: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "phone_number": "phoneNumber",
    "street_1": "street1",
    "street_2": "street2",
    "zip_code": "zipCode",
  });
});

/** @internal */
export type HrisUpdateEmployeeRequestDtoHomeLocation$Outbound = {
  city?: string | null | undefined;
  country?: HrisUpdateEmployeeRequestDtoCountry$Outbound | null | undefined;
  id?: string | null | undefined;
  name?: string | null | undefined;
  passthrough?: { [k: string]: any } | null | undefined;
  phone_number?: string | null | undefined;
  state?: HrisUpdateEmployeeRequestDtoState$Outbound | null | undefined;
  street_1?: string | null | undefined;
  street_2?: string | null | undefined;
  zip_code?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmployeeRequestDtoHomeLocation$outboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoHomeLocation$Outbound,
  z.ZodTypeDef,
  HrisUpdateEmployeeRequestDtoHomeLocation
> = z.object({
  city: z.nullable(z.string()).optional(),
  country: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoCountry$outboundSchema),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  phoneNumber: z.nullable(z.string()).optional(),
  state: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoState$outboundSchema),
  ).optional(),
  street1: z.nullable(z.string()).optional(),
  street2: z.nullable(z.string()).optional(),
  zipCode: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    phoneNumber: "phone_number",
    street1: "street_1",
    street2: "street_2",
    zipCode: "zip_code",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoHomeLocation$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoHomeLocation$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoHomeLocation$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoHomeLocation$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoHomeLocation$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoHomeLocation$Outbound` instead. */
  export type Outbound = HrisUpdateEmployeeRequestDtoHomeLocation$Outbound;
}

export function hrisUpdateEmployeeRequestDtoHomeLocationToJSON(
  hrisUpdateEmployeeRequestDtoHomeLocation:
    HrisUpdateEmployeeRequestDtoHomeLocation,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoHomeLocation$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoHomeLocation,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoHomeLocationFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoHomeLocation,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoHomeLocation$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoHomeLocation' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasMaritalStatus4$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasMaritalStatus4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasMaritalStatus4$Outbound = {};

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasMaritalStatus4$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasMaritalStatus4$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasMaritalStatus4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasMaritalStatus4$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasMaritalStatus4$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasMaritalStatus4$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasMaritalStatus4$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasMaritalStatus4$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasMaritalStatus4$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasMaritalStatus4$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasMaritalStatus4ToJSON(
  hrisUpdateEmployeeRequestDtoSchemasMaritalStatus4:
    HrisUpdateEmployeeRequestDtoSchemasMaritalStatus4,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasMaritalStatus4$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoSchemasMaritalStatus4,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasMaritalStatus4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasMaritalStatus4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasMaritalStatus4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasMaritalStatus4' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasMaritalStatusSourceValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasMaritalStatusSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasMaritalStatus4$inboundSchema
    ),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasMaritalStatusSourceValue$Outbound =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasMaritalStatus4$Outbound
  | Array<any>;

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasMaritalStatusSourceValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasMaritalStatusSourceValue$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasMaritalStatusSourceValue
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasMaritalStatus4$outboundSchema
    ),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasMaritalStatusSourceValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasMaritalStatusSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasMaritalStatusSourceValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasMaritalStatusSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasMaritalStatusSourceValue$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasMaritalStatusSourceValue$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasMaritalStatusSourceValue$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasMaritalStatusSourceValueToJSON(
  hrisUpdateEmployeeRequestDtoSchemasMaritalStatusSourceValue:
    HrisUpdateEmployeeRequestDtoSchemasMaritalStatusSourceValue,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasMaritalStatusSourceValue$outboundSchema
      .parse(hrisUpdateEmployeeRequestDtoSchemasMaritalStatusSourceValue),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasMaritalStatusSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasMaritalStatusSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasMaritalStatusSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasMaritalStatusSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasMaritalStatusValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasMaritalStatusValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(HrisUpdateEmployeeRequestDtoSchemasMaritalStatusValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasMaritalStatusValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasMaritalStatusValueOpen,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasMaritalStatusValueOpen
  > = z.union([
    z.nativeEnum(HrisUpdateEmployeeRequestDtoSchemasMaritalStatusValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasMaritalStatusValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasMaritalStatusValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasMaritalStatusValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasMaritalStatusValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasMaritalStatusValue$outboundSchema;
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoMaritalStatus$inboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoMaritalStatus,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.string(),
      z.number(),
      z.boolean(),
      z.lazy(() =>
        HrisUpdateEmployeeRequestDtoSchemasMaritalStatus4$inboundSchema
      ),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisUpdateEmployeeRequestDtoSchemasMaritalStatusValue$inboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type HrisUpdateEmployeeRequestDtoMaritalStatus$Outbound = {
  source_value?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasMaritalStatus4$Outbound
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmployeeRequestDtoMaritalStatus$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoMaritalStatus$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoMaritalStatus
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.string(),
        z.number(),
        z.boolean(),
        z.lazy(() =>
          HrisUpdateEmployeeRequestDtoSchemasMaritalStatus4$outboundSchema
        ),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      HrisUpdateEmployeeRequestDtoSchemasMaritalStatusValue$outboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoMaritalStatus$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoMaritalStatus$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoMaritalStatus$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoMaritalStatus$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoMaritalStatus$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoMaritalStatus$Outbound` instead. */
  export type Outbound = HrisUpdateEmployeeRequestDtoMaritalStatus$Outbound;
}

export function hrisUpdateEmployeeRequestDtoMaritalStatusToJSON(
  hrisUpdateEmployeeRequestDtoMaritalStatus:
    HrisUpdateEmployeeRequestDtoMaritalStatus,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoMaritalStatus$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoMaritalStatus,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoMaritalStatusFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoMaritalStatus,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoMaritalStatus$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoMaritalStatus' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumber4$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumber4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumber4$Outbound =
  {};

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumber4$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumber4$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumber4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumber4$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumber4$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumber4$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumber4$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumber4$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumber4$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumber4$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumber4ToJSON(
  hrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumber4:
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumber4,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumber4$outboundSchema
      .parse(hrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumber4),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumber4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumber4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumber4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumber4' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumber4$inboundSchema
    ),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue$Outbound =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumber4$Outbound
  | Array<any>;

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumber4$outboundSchema
    ),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValueToJSON(
  hrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue:
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue$outboundSchema
      .parse(
        hrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue,
      ),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(
        HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberValue,
      ),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberValueOpen,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberValueOpen
  > = z.union([
    z.nativeEnum(
      HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberValue,
    ),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberValue$outboundSchema;
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasCountry$inboundSchema:
  z.ZodType<HrisUpdateEmployeeRequestDtoSchemasCountry, z.ZodTypeDef, unknown> =
    z.object({
      source_value: z.nullable(
        z.union([
          z.string(),
          z.number(),
          z.boolean(),
          z.lazy(() =>
            HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumber4$inboundSchema
          ),
          z.array(z.any()),
        ]),
      ).optional(),
      value: z.nullable(
        HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberValue$inboundSchema,
      ).optional(),
    }).transform((v) => {
      return remap$(v, {
        "source_value": "sourceValue",
      });
    });

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasCountry$Outbound = {
  source_value?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumber4$Outbound
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasCountry$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasCountry$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasCountry
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.string(),
        z.number(),
        z.boolean(),
        z.lazy(() =>
          HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumber4$outboundSchema
        ),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberValue$outboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasCountry$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasCountry$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasCountry$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasCountry$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasCountry$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasCountry$Outbound` instead. */
  export type Outbound = HrisUpdateEmployeeRequestDtoSchemasCountry$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasCountryToJSON(
  hrisUpdateEmployeeRequestDtoSchemasCountry:
    HrisUpdateEmployeeRequestDtoSchemasCountry,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasCountry$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoSchemasCountry,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasCountryFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasCountry,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasCountry$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasCountry' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberType4$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberType4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberType4$Outbound =
  {};

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberType4$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberType4$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberType4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberType4$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberType4$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberType4$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberType4$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberType4$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberType4$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberType4$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberType4ToJSON(
  hrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberType4:
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberType4,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberType4$outboundSchema
      .parse(hrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberType4),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberType4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberType4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberType4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberType4' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberType4$inboundSchema
    ),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue$Outbound =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberType4$Outbound
  | Array<any>;

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberType4$outboundSchema
    ),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValueToJSON(
  hrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue:
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue$outboundSchema
      .parse(
        hrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue,
      ),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(
        HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValue,
      ),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValueOpen,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValueOpen
  > = z.union([
    z.nativeEnum(
      HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValue,
    ),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValue$outboundSchema;
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasType$inboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoSchemasType,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.string(),
      z.number(),
      z.boolean(),
      z.lazy(() =>
        HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberType4$inboundSchema
      ),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValue$inboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasType$Outbound = {
  source_value?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberType4$Outbound
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasType$outboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoSchemasType$Outbound,
  z.ZodTypeDef,
  HrisUpdateEmployeeRequestDtoSchemasType
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.string(),
      z.number(),
      z.boolean(),
      z.lazy(() =>
        HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberType4$outboundSchema
      ),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisUpdateEmployeeRequestDtoSchemasNationalIdentityNumberTypeValue$outboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasType$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasType$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasType$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasType$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasType$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasType$Outbound` instead. */
  export type Outbound = HrisUpdateEmployeeRequestDtoSchemasType$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasTypeToJSON(
  hrisUpdateEmployeeRequestDtoSchemasType:
    HrisUpdateEmployeeRequestDtoSchemasType,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasType$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoSchemasType,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasTypeFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasType,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasType$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasType' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoNationalIdentityNumber$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoNationalIdentityNumber,
    z.ZodTypeDef,
    unknown
  > = z.object({
    country: z.nullable(
      z.lazy(() => HrisUpdateEmployeeRequestDtoSchemasCountry$inboundSchema),
    ).optional(),
    type: z.nullable(
      z.lazy(() => HrisUpdateEmployeeRequestDtoSchemasType$inboundSchema),
    ).optional(),
    value: z.nullable(z.string()).optional(),
  });

/** @internal */
export type HrisUpdateEmployeeRequestDtoNationalIdentityNumber$Outbound = {
  country?:
    | HrisUpdateEmployeeRequestDtoSchemasCountry$Outbound
    | null
    | undefined;
  type?: HrisUpdateEmployeeRequestDtoSchemasType$Outbound | null | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmployeeRequestDtoNationalIdentityNumber$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoNationalIdentityNumber$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoNationalIdentityNumber
  > = z.object({
    country: z.nullable(
      z.lazy(() => HrisUpdateEmployeeRequestDtoSchemasCountry$outboundSchema),
    ).optional(),
    type: z.nullable(
      z.lazy(() => HrisUpdateEmployeeRequestDtoSchemasType$outboundSchema),
    ).optional(),
    value: z.nullable(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoNationalIdentityNumber$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoNationalIdentityNumber$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoNationalIdentityNumber$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoNationalIdentityNumber$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoNationalIdentityNumber$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoNationalIdentityNumber$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoNationalIdentityNumber$Outbound;
}

export function hrisUpdateEmployeeRequestDtoNationalIdentityNumberToJSON(
  hrisUpdateEmployeeRequestDtoNationalIdentityNumber:
    HrisUpdateEmployeeRequestDtoNationalIdentityNumber,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoNationalIdentityNumber$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoNationalIdentityNumber,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoNationalIdentityNumberFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoNationalIdentityNumber,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoNationalIdentityNumber$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoNationalIdentityNumber' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasPreferredLanguage4$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasPreferredLanguage4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasPreferredLanguage4$Outbound = {};

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasPreferredLanguage4$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasPreferredLanguage4$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasPreferredLanguage4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasPreferredLanguage4$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasPreferredLanguage4$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasPreferredLanguage4$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasPreferredLanguage4$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasPreferredLanguage4$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasPreferredLanguage4$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasPreferredLanguage4$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasPreferredLanguage4ToJSON(
  hrisUpdateEmployeeRequestDtoSchemasPreferredLanguage4:
    HrisUpdateEmployeeRequestDtoSchemasPreferredLanguage4,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasPreferredLanguage4$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoSchemasPreferredLanguage4,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasPreferredLanguage4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasPreferredLanguage4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasPreferredLanguage4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasPreferredLanguage4' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageSourceValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasPreferredLanguage4$inboundSchema
    ),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageSourceValue$Outbound =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasPreferredLanguage4$Outbound
  | Array<any>;

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageSourceValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageSourceValue$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageSourceValue
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasPreferredLanguage4$outboundSchema
    ),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageSourceValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageSourceValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageSourceValue$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageSourceValue$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageSourceValue$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasPreferredLanguageSourceValueToJSON(
  hrisUpdateEmployeeRequestDtoSchemasPreferredLanguageSourceValue:
    HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageSourceValue,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageSourceValue$outboundSchema
      .parse(hrisUpdateEmployeeRequestDtoSchemasPreferredLanguageSourceValue),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasPreferredLanguageSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageValueOpen,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageValueOpen
  > = z.union([
    z.nativeEnum(HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageValue$outboundSchema;
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoPreferredLanguage$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoPreferredLanguage,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source_value: z.nullable(
      z.union([
        z.string(),
        z.number(),
        z.boolean(),
        z.lazy(() =>
          HrisUpdateEmployeeRequestDtoSchemasPreferredLanguage4$inboundSchema
        ),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageValue$inboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "source_value": "sourceValue",
    });
  });

/** @internal */
export type HrisUpdateEmployeeRequestDtoPreferredLanguage$Outbound = {
  source_value?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasPreferredLanguage4$Outbound
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmployeeRequestDtoPreferredLanguage$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoPreferredLanguage$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoPreferredLanguage
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.string(),
        z.number(),
        z.boolean(),
        z.lazy(() =>
          HrisUpdateEmployeeRequestDtoSchemasPreferredLanguage4$outboundSchema
        ),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      HrisUpdateEmployeeRequestDtoSchemasPreferredLanguageValue$outboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoPreferredLanguage$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoPreferredLanguage$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoPreferredLanguage$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoPreferredLanguage$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoPreferredLanguage$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoPreferredLanguage$Outbound` instead. */
  export type Outbound = HrisUpdateEmployeeRequestDtoPreferredLanguage$Outbound;
}

export function hrisUpdateEmployeeRequestDtoPreferredLanguageToJSON(
  hrisUpdateEmployeeRequestDtoPreferredLanguage:
    HrisUpdateEmployeeRequestDtoPreferredLanguage,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoPreferredLanguage$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoPreferredLanguage,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoPreferredLanguageFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoPreferredLanguage,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoPreferredLanguage$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoPreferredLanguage' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasWorkLocation4$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasWorkLocation4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasWorkLocation4$Outbound = {};

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasWorkLocation4$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasWorkLocation4$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasWorkLocation4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasWorkLocation4$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasWorkLocation4$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasWorkLocation4$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasWorkLocation4$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasWorkLocation4$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasWorkLocation4$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasWorkLocation4$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasWorkLocation4ToJSON(
  hrisUpdateEmployeeRequestDtoSchemasWorkLocation4:
    HrisUpdateEmployeeRequestDtoSchemasWorkLocation4,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasWorkLocation4$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoSchemasWorkLocation4,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasWorkLocation4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasWorkLocation4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasWorkLocation4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasWorkLocation4' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasWorkLocationSourceValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasWorkLocation4$inboundSchema
    ),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasWorkLocationSourceValue$Outbound =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasWorkLocation4$Outbound
  | Array<any>;

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasWorkLocationSourceValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationSourceValue$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationSourceValue
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasWorkLocation4$outboundSchema
    ),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasWorkLocationSourceValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasWorkLocationSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationSourceValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasWorkLocationSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationSourceValue$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasWorkLocationSourceValue$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationSourceValue$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasWorkLocationSourceValueToJSON(
  hrisUpdateEmployeeRequestDtoSchemasWorkLocationSourceValue:
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationSourceValue,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationSourceValue$outboundSchema
      .parse(hrisUpdateEmployeeRequestDtoSchemasWorkLocationSourceValue),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasWorkLocationSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasWorkLocationSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasWorkLocationSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasWorkLocationSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasWorkLocationValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(HrisUpdateEmployeeRequestDtoSchemasWorkLocationValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasWorkLocationValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationValueOpen,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationValueOpen
  > = z.union([
    z.nativeEnum(HrisUpdateEmployeeRequestDtoSchemasWorkLocationValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasWorkLocationValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasWorkLocationValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasWorkLocationValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationValue$outboundSchema;
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasWorkLocationCountry$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationCountry,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source_value: z.nullable(
      z.union([
        z.string(),
        z.number(),
        z.boolean(),
        z.lazy(() =>
          HrisUpdateEmployeeRequestDtoSchemasWorkLocation4$inboundSchema
        ),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      HrisUpdateEmployeeRequestDtoSchemasWorkLocationValue$inboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "source_value": "sourceValue",
    });
  });

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasWorkLocationCountry$Outbound = {
  source_value?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasWorkLocation4$Outbound
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasWorkLocationCountry$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationCountry$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationCountry
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.string(),
        z.number(),
        z.boolean(),
        z.lazy(() =>
          HrisUpdateEmployeeRequestDtoSchemasWorkLocation4$outboundSchema
        ),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      HrisUpdateEmployeeRequestDtoSchemasWorkLocationValue$outboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasWorkLocationCountry$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasWorkLocationCountry$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationCountry$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasWorkLocationCountry$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationCountry$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasWorkLocationCountry$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationCountry$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasWorkLocationCountryToJSON(
  hrisUpdateEmployeeRequestDtoSchemasWorkLocationCountry:
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationCountry,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationCountry$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoSchemasWorkLocationCountry,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasWorkLocationCountryFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasWorkLocationCountry,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasWorkLocationCountry$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasWorkLocationCountry' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasWorkLocationState4$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationState4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasWorkLocationState4$Outbound = {};

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasWorkLocationState4$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationState4$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationState4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasWorkLocationState4$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasWorkLocationState4$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationState4$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasWorkLocationState4$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationState4$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasWorkLocationState4$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationState4$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasWorkLocationState4ToJSON(
  hrisUpdateEmployeeRequestDtoSchemasWorkLocationState4:
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationState4,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationState4$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoSchemasWorkLocationState4,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasWorkLocationState4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasWorkLocationState4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasWorkLocationState4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasWorkLocationState4' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasWorkLocationStateSourceValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationStateSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasWorkLocationState4$inboundSchema
    ),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasWorkLocationStateSourceValue$Outbound =
  | string
  | number
  | boolean
  | HrisUpdateEmployeeRequestDtoSchemasWorkLocationState4$Outbound
  | Array<any>;

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasWorkLocationStateSourceValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationStateSourceValue$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationStateSourceValue
  > = z.union([
    z.string(),
    z.number(),
    z.boolean(),
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasWorkLocationState4$outboundSchema
    ),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasWorkLocationStateSourceValue$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasWorkLocationStateSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationStateSourceValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasWorkLocationStateSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationStateSourceValue$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasWorkLocationStateSourceValue$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationStateSourceValue$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasWorkLocationStateSourceValueToJSON(
  hrisUpdateEmployeeRequestDtoSchemasWorkLocationStateSourceValue:
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationStateSourceValue,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasWorkLocationStateSourceValue$outboundSchema
      .parse(hrisUpdateEmployeeRequestDtoSchemasWorkLocationStateSourceValue),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasWorkLocationStateSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasWorkLocationStateSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasWorkLocationStateSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasWorkLocationStateSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasState$inboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoSchemasState,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.string(),
      z.number(),
      z.boolean(),
      z.lazy(() =>
        HrisUpdateEmployeeRequestDtoSchemasWorkLocationState4$inboundSchema
      ),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type HrisUpdateEmployeeRequestDtoSchemasState$Outbound = {
  source_value?:
    | string
    | number
    | boolean
    | HrisUpdateEmployeeRequestDtoSchemasWorkLocationState4$Outbound
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmployeeRequestDtoSchemasState$outboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoSchemasState$Outbound,
  z.ZodTypeDef,
  HrisUpdateEmployeeRequestDtoSchemasState
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.string(),
      z.number(),
      z.boolean(),
      z.lazy(() =>
        HrisUpdateEmployeeRequestDtoSchemasWorkLocationState4$outboundSchema
      ),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoSchemasState$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasState$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasState$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasState$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoSchemasState$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoSchemasState$Outbound` instead. */
  export type Outbound = HrisUpdateEmployeeRequestDtoSchemasState$Outbound;
}

export function hrisUpdateEmployeeRequestDtoSchemasStateToJSON(
  hrisUpdateEmployeeRequestDtoSchemasState:
    HrisUpdateEmployeeRequestDtoSchemasState,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoSchemasState$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoSchemasState,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoSchemasStateFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoSchemasState,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoSchemasState$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoSchemasState' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDtoWorkLocation$inboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoWorkLocation,
  z.ZodTypeDef,
  unknown
> = z.object({
  city: z.nullable(z.string()).optional(),
  country: z.nullable(
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasWorkLocationCountry$inboundSchema
    ),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  phone_number: z.nullable(z.string()).optional(),
  state: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoSchemasState$inboundSchema),
  ).optional(),
  street_1: z.nullable(z.string()).optional(),
  street_2: z.nullable(z.string()).optional(),
  zip_code: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "phone_number": "phoneNumber",
    "street_1": "street1",
    "street_2": "street2",
    "zip_code": "zipCode",
  });
});

/** @internal */
export type HrisUpdateEmployeeRequestDtoWorkLocation$Outbound = {
  city?: string | null | undefined;
  country?:
    | HrisUpdateEmployeeRequestDtoSchemasWorkLocationCountry$Outbound
    | null
    | undefined;
  id?: string | null | undefined;
  name?: string | null | undefined;
  passthrough?: { [k: string]: any } | null | undefined;
  phone_number?: string | null | undefined;
  state?: HrisUpdateEmployeeRequestDtoSchemasState$Outbound | null | undefined;
  street_1?: string | null | undefined;
  street_2?: string | null | undefined;
  zip_code?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmployeeRequestDtoWorkLocation$outboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDtoWorkLocation$Outbound,
  z.ZodTypeDef,
  HrisUpdateEmployeeRequestDtoWorkLocation
> = z.object({
  city: z.nullable(z.string()).optional(),
  country: z.nullable(
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoSchemasWorkLocationCountry$outboundSchema
    ),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  phoneNumber: z.nullable(z.string()).optional(),
  state: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoSchemasState$outboundSchema),
  ).optional(),
  street1: z.nullable(z.string()).optional(),
  street2: z.nullable(z.string()).optional(),
  zipCode: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    phoneNumber: "phone_number",
    street1: "street_1",
    street2: "street_2",
    zipCode: "zip_code",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDtoWorkLocation$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDtoWorkLocation$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmployeeRequestDtoWorkLocation$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoWorkLocation$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmployeeRequestDtoWorkLocation$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDtoWorkLocation$Outbound` instead. */
  export type Outbound = HrisUpdateEmployeeRequestDtoWorkLocation$Outbound;
}

export function hrisUpdateEmployeeRequestDtoWorkLocationToJSON(
  hrisUpdateEmployeeRequestDtoWorkLocation:
    HrisUpdateEmployeeRequestDtoWorkLocation,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDtoWorkLocation$outboundSchema.parse(
      hrisUpdateEmployeeRequestDtoWorkLocation,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoWorkLocationFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmployeeRequestDtoWorkLocation,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmployeeRequestDtoWorkLocation$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmployeeRequestDtoWorkLocation' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmployeeRequestDto$inboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  avatar: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoAvatar$inboundSchema),
  ).optional(),
  avatar_url: z.nullable(z.string()).optional(),
  benefits: z.nullable(z.array(CreateHRISBenefit$inboundSchema)).optional(),
  birthday: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  citizenships: z.nullable(z.array(CountryCodeEnum$inboundSchema)).optional(),
  company_id: z.nullable(z.string()).optional(),
  company_name: z.nullable(z.string()).optional(),
  custom_fields: z.nullable(z.array(CustomFields$inboundSchema)).optional(),
  date_of_birth: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  department: z.nullable(z.string()).optional(),
  department_id: z.nullable(z.string()).optional(),
  display_name: z.nullable(z.string()).optional(),
  employee_number: z.nullable(z.string()).optional(),
  employment: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoEmployment$inboundSchema),
  ).optional(),
  employment_contract_type: z.nullable(
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoEmploymentContractType$inboundSchema
    ),
  ).optional(),
  employment_status: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoEmploymentStatus$inboundSchema),
  ).optional(),
  employment_type: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoEmploymentType$inboundSchema),
  ).optional(),
  ethnicity: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoEthnicity$inboundSchema),
  ).optional(),
  first_name: z.nullable(z.string()).optional(),
  gender: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoGender$inboundSchema),
  ).optional(),
  hire_date: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  home_location: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoHomeLocation$inboundSchema),
  ).optional(),
  job_id: z.nullable(z.string()).optional(),
  job_title: z.nullable(z.string()).optional(),
  last_name: z.nullable(z.string()).optional(),
  manager_id: z.nullable(z.string()).optional(),
  marital_status: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoMaritalStatus$inboundSchema),
  ).optional(),
  name: z.nullable(z.string()).optional(),
  national_identity_number: z.nullable(
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoNationalIdentityNumber$inboundSchema
    ),
  ).optional(),
  national_identity_numbers: z.nullable(
    z.array(NationalIdentityNumberApiModel$inboundSchema),
  ).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  personal_email: z.nullable(z.string()).optional(),
  personal_phone_number: z.nullable(z.string()).optional(),
  preferred_language: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoPreferredLanguage$inboundSchema),
  ).optional(),
  start_date: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  team_id: z.nullable(z.string()).optional(),
  termination_date: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  title: z.nullable(z.string()).optional(),
  work_email: z.nullable(z.string()).optional(),
  work_location: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoWorkLocation$inboundSchema),
  ).optional(),
  work_phone_number: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "avatar_url": "avatarUrl",
    "company_id": "companyId",
    "company_name": "companyName",
    "custom_fields": "customFields",
    "date_of_birth": "dateOfBirth",
    "department_id": "departmentId",
    "display_name": "displayName",
    "employee_number": "employeeNumber",
    "employment_contract_type": "employmentContractType",
    "employment_status": "employmentStatus",
    "employment_type": "employmentType",
    "first_name": "firstName",
    "hire_date": "hireDate",
    "home_location": "homeLocation",
    "job_id": "jobId",
    "job_title": "jobTitle",
    "last_name": "lastName",
    "manager_id": "managerId",
    "marital_status": "maritalStatus",
    "national_identity_number": "nationalIdentityNumber",
    "national_identity_numbers": "nationalIdentityNumbers",
    "personal_email": "personalEmail",
    "personal_phone_number": "personalPhoneNumber",
    "preferred_language": "preferredLanguage",
    "start_date": "startDate",
    "team_id": "teamId",
    "termination_date": "terminationDate",
    "work_email": "workEmail",
    "work_location": "workLocation",
    "work_phone_number": "workPhoneNumber",
  });
});

/** @internal */
export type HrisUpdateEmployeeRequestDto$Outbound = {
  avatar?: HrisUpdateEmployeeRequestDtoAvatar$Outbound | null | undefined;
  avatar_url?: string | null | undefined;
  benefits?: Array<CreateHRISBenefit$Outbound> | null | undefined;
  birthday?: string | null | undefined;
  citizenships?: Array<CountryCodeEnum$Outbound> | null | undefined;
  company_id?: string | null | undefined;
  company_name?: string | null | undefined;
  custom_fields?: Array<CustomFields$Outbound> | null | undefined;
  date_of_birth?: string | null | undefined;
  department?: string | null | undefined;
  department_id?: string | null | undefined;
  display_name?: string | null | undefined;
  employee_number?: string | null | undefined;
  employment?:
    | HrisUpdateEmployeeRequestDtoEmployment$Outbound
    | null
    | undefined;
  employment_contract_type?:
    | HrisUpdateEmployeeRequestDtoEmploymentContractType$Outbound
    | null
    | undefined;
  employment_status?:
    | HrisUpdateEmployeeRequestDtoEmploymentStatus$Outbound
    | null
    | undefined;
  employment_type?:
    | HrisUpdateEmployeeRequestDtoEmploymentType$Outbound
    | null
    | undefined;
  ethnicity?: HrisUpdateEmployeeRequestDtoEthnicity$Outbound | null | undefined;
  first_name?: string | null | undefined;
  gender?: HrisUpdateEmployeeRequestDtoGender$Outbound | null | undefined;
  hire_date?: string | null | undefined;
  home_location?:
    | HrisUpdateEmployeeRequestDtoHomeLocation$Outbound
    | null
    | undefined;
  job_id?: string | null | undefined;
  job_title?: string | null | undefined;
  last_name?: string | null | undefined;
  manager_id?: string | null | undefined;
  marital_status?:
    | HrisUpdateEmployeeRequestDtoMaritalStatus$Outbound
    | null
    | undefined;
  name?: string | null | undefined;
  national_identity_number?:
    | HrisUpdateEmployeeRequestDtoNationalIdentityNumber$Outbound
    | null
    | undefined;
  national_identity_numbers?:
    | Array<NationalIdentityNumberApiModel$Outbound>
    | null
    | undefined;
  passthrough?: { [k: string]: any } | null | undefined;
  personal_email?: string | null | undefined;
  personal_phone_number?: string | null | undefined;
  preferred_language?:
    | HrisUpdateEmployeeRequestDtoPreferredLanguage$Outbound
    | null
    | undefined;
  start_date?: string | null | undefined;
  team_id?: string | null | undefined;
  termination_date?: string | null | undefined;
  title?: string | null | undefined;
  work_email?: string | null | undefined;
  work_location?:
    | HrisUpdateEmployeeRequestDtoWorkLocation$Outbound
    | null
    | undefined;
  work_phone_number?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmployeeRequestDto$outboundSchema: z.ZodType<
  HrisUpdateEmployeeRequestDto$Outbound,
  z.ZodTypeDef,
  HrisUpdateEmployeeRequestDto
> = z.object({
  avatar: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoAvatar$outboundSchema),
  ).optional(),
  avatarUrl: z.nullable(z.string()).optional(),
  benefits: z.nullable(z.array(CreateHRISBenefit$outboundSchema)).optional(),
  birthday: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  citizenships: z.nullable(z.array(CountryCodeEnum$outboundSchema)).optional(),
  companyId: z.nullable(z.string()).optional(),
  companyName: z.nullable(z.string()).optional(),
  customFields: z.nullable(z.array(CustomFields$outboundSchema)).optional(),
  dateOfBirth: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  department: z.nullable(z.string()).optional(),
  departmentId: z.nullable(z.string()).optional(),
  displayName: z.nullable(z.string()).optional(),
  employeeNumber: z.nullable(z.string()).optional(),
  employment: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoEmployment$outboundSchema),
  ).optional(),
  employmentContractType: z.nullable(
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoEmploymentContractType$outboundSchema
    ),
  ).optional(),
  employmentStatus: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoEmploymentStatus$outboundSchema),
  ).optional(),
  employmentType: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoEmploymentType$outboundSchema),
  ).optional(),
  ethnicity: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoEthnicity$outboundSchema),
  ).optional(),
  firstName: z.nullable(z.string()).optional(),
  gender: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoGender$outboundSchema),
  ).optional(),
  hireDate: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  homeLocation: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoHomeLocation$outboundSchema),
  ).optional(),
  jobId: z.nullable(z.string()).optional(),
  jobTitle: z.nullable(z.string()).optional(),
  lastName: z.nullable(z.string()).optional(),
  managerId: z.nullable(z.string()).optional(),
  maritalStatus: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoMaritalStatus$outboundSchema),
  ).optional(),
  name: z.nullable(z.string()).optional(),
  nationalIdentityNumber: z.nullable(
    z.lazy(() =>
      HrisUpdateEmployeeRequestDtoNationalIdentityNumber$outboundSchema
    ),
  ).optional(),
  nationalIdentityNumbers: z.nullable(
    z.array(NationalIdentityNumberApiModel$outboundSchema),
  ).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  personalEmail: z.nullable(z.string()).optional(),
  personalPhoneNumber: z.nullable(z.string()).optional(),
  preferredLanguage: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoPreferredLanguage$outboundSchema),
  ).optional(),
  startDate: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  teamId: z.nullable(z.string()).optional(),
  terminationDate: z.nullable(z.date().transform(v => v.toISOString()))
    .optional(),
  title: z.nullable(z.string()).optional(),
  workEmail: z.nullable(z.string()).optional(),
  workLocation: z.nullable(
    z.lazy(() => HrisUpdateEmployeeRequestDtoWorkLocation$outboundSchema),
  ).optional(),
  workPhoneNumber: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    avatarUrl: "avatar_url",
    companyId: "company_id",
    companyName: "company_name",
    customFields: "custom_fields",
    dateOfBirth: "date_of_birth",
    departmentId: "department_id",
    displayName: "display_name",
    employeeNumber: "employee_number",
    employmentContractType: "employment_contract_type",
    employmentStatus: "employment_status",
    employmentType: "employment_type",
    firstName: "first_name",
    hireDate: "hire_date",
    homeLocation: "home_location",
    jobId: "job_id",
    jobTitle: "job_title",
    lastName: "last_name",
    managerId: "manager_id",
    maritalStatus: "marital_status",
    nationalIdentityNumber: "national_identity_number",
    nationalIdentityNumbers: "national_identity_numbers",
    personalEmail: "personal_email",
    personalPhoneNumber: "personal_phone_number",
    preferredLanguage: "preferred_language",
    startDate: "start_date",
    teamId: "team_id",
    terminationDate: "termination_date",
    workEmail: "work_email",
    workLocation: "work_location",
    workPhoneNumber: "work_phone_number",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmployeeRequestDto$ {
  /** @deprecated use `HrisUpdateEmployeeRequestDto$inboundSchema` instead. */
  export const inboundSchema = HrisUpdateEmployeeRequestDto$inboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDto$outboundSchema` instead. */
  export const outboundSchema = HrisUpdateEmployeeRequestDto$outboundSchema;
  /** @deprecated use `HrisUpdateEmployeeRequestDto$Outbound` instead. */
  export type Outbound = HrisUpdateEmployeeRequestDto$Outbound;
}

export function hrisUpdateEmployeeRequestDtoToJSON(
  hrisUpdateEmployeeRequestDto: HrisUpdateEmployeeRequestDto,
): string {
  return JSON.stringify(
    HrisUpdateEmployeeRequestDto$outboundSchema.parse(
      hrisUpdateEmployeeRequestDto,
    ),
  );
}

export function hrisUpdateEmployeeRequestDtoFromJSON(
  jsonString: string,
): SafeParseResult<HrisUpdateEmployeeRequestDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HrisUpdateEmployeeRequestDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmployeeRequestDto' from JSON`,
  );
}
