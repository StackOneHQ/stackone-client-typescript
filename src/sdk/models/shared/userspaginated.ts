/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    LmsUser,
    LmsUser$inboundSchema,
    LmsUser$Outbound,
    LmsUser$outboundSchema,
} from "./lmsuser.js";
import {
    RawResponse,
    RawResponse$inboundSchema,
    RawResponse$Outbound,
    RawResponse$outboundSchema,
} from "./rawresponse.js";
import * as z from "zod";

export type UsersPaginated = {
    data: Array<LmsUser>;
    next?: string | null | undefined;
    raw?: Array<RawResponse> | null | undefined;
};

/** @internal */
export const UsersPaginated$inboundSchema: z.ZodType<UsersPaginated, z.ZodTypeDef, unknown> =
    z.object({
        data: z.array(LmsUser$inboundSchema),
        next: z.nullable(z.string()).optional(),
        raw: z.nullable(z.array(RawResponse$inboundSchema)).optional(),
    });

/** @internal */
export type UsersPaginated$Outbound = {
    data: Array<LmsUser$Outbound>;
    next?: string | null | undefined;
    raw?: Array<RawResponse$Outbound> | null | undefined;
};

/** @internal */
export const UsersPaginated$outboundSchema: z.ZodType<
    UsersPaginated$Outbound,
    z.ZodTypeDef,
    UsersPaginated
> = z.object({
    data: z.array(LmsUser$outboundSchema),
    next: z.nullable(z.string()).optional(),
    raw: z.nullable(z.array(RawResponse$outboundSchema)).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UsersPaginated$ {
    /** @deprecated use `UsersPaginated$inboundSchema` instead. */
    export const inboundSchema = UsersPaginated$inboundSchema;
    /** @deprecated use `UsersPaginated$outboundSchema` instead. */
    export const outboundSchema = UsersPaginated$outboundSchema;
    /** @deprecated use `UsersPaginated$Outbound` instead. */
    export type Outbound = UsersPaginated$Outbound;
}
