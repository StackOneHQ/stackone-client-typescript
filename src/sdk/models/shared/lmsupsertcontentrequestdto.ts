/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";
import {
  CreateCategoriesApiModel,
  CreateCategoriesApiModel$inboundSchema,
  CreateCategoriesApiModel$Outbound,
  CreateCategoriesApiModel$outboundSchema,
} from "./createcategoriesapimodel.js";
import {
  CreateSkillsApiModel,
  CreateSkillsApiModel$inboundSchema,
  CreateSkillsApiModel$Outbound,
  CreateSkillsApiModel$outboundSchema,
} from "./createskillsapimodel.js";
import {
  LanguageEnum,
  LanguageEnum$inboundSchema,
  LanguageEnum$Outbound,
  LanguageEnum$outboundSchema,
} from "./languageenum.js";

export type LmsUpsertContentRequestDto4 = {};

export type LmsUpsertContentRequestDtoSourceValue =
  | LmsUpsertContentRequestDto4
  | string
  | number
  | boolean
  | Array<any>;

export enum LmsUpsertContentRequestDtoValue {
  Automatic = "automatic",
  Browser = "browser",
}
export type LmsUpsertContentRequestDtoValueOpen = OpenEnum<
  typeof LmsUpsertContentRequestDtoValue
>;

/**
 * The content launch method associated with this content
 */
export type LmsUpsertContentRequestDtoContentLaunchMethod = {
  sourceValue?:
    | LmsUpsertContentRequestDto4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: LmsUpsertContentRequestDtoValueOpen | null | undefined;
};

export type LmsUpsertContentRequestDtoSchemas4 = {};

export type LmsUpsertContentRequestDtoSchemasSourceValue =
  | LmsUpsertContentRequestDtoSchemas4
  | string
  | number
  | boolean
  | Array<any>;

export enum LmsUpsertContentRequestDtoSchemasValue {
  Video = "video",
  Quiz = "quiz",
  Document = "document",
}
export type LmsUpsertContentRequestDtoSchemasValueOpen = OpenEnum<
  typeof LmsUpsertContentRequestDtoSchemasValue
>;

/**
 * The type of content
 */
export type LmsUpsertContentRequestDtoContentType = {
  sourceValue?:
    | LmsUpsertContentRequestDtoSchemas4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: LmsUpsertContentRequestDtoSchemasValueOpen | null | undefined;
};

export type LmsUpsertContentRequestDto = {
  /**
   * Whether the content is active and available for users.
   */
  active?: boolean | null | undefined;
  /**
   * The categories associated with this content
   */
  categories?: Array<CreateCategoriesApiModel> | null | undefined;
  /**
   * The content launch method associated with this content
   */
  contentLaunchMethod?:
    | LmsUpsertContentRequestDtoContentLaunchMethod
    | null
    | undefined;
  /**
   * The type of content
   */
  contentType?: LmsUpsertContentRequestDtoContentType | null | undefined;
  /**
   * The external URL of the content
   */
  contentUrl?: string | null | undefined;
  /**
   * The parent IDs associated with this content
   */
  courseIds?: Array<string> | null | undefined;
  /**
   * The URL of the thumbnail image associated with the content.
   */
  coverUrl?: string | null | undefined;
  /**
   * The description of the content
   */
  description?: string | null | undefined;
  /**
   * The duration of the content following the ISO8601 standard. If duration_unit is applicable we will derive this from the smallest unit given in the duration string or the minimum unit accepted by the provider.
   */
  duration?: string | null | undefined;
  /**
   * The external ID associated with this content
   */
  externalReference?: string | null | undefined;
  /**
   * The languages associated with this content
   */
  languages?: Array<LanguageEnum> | null | undefined;
  /**
   * The order of the individual content within a content grouping. This is not applicable for pushing individual content.
   */
  order?: number | null | undefined;
  /**
   * The skills associated with this content
   */
  skills?: Array<CreateSkillsApiModel> | null | undefined;
  /**
   * The title of the content
   */
  title?: string | null | undefined;
  /**
   * Custom Unified Fields configured in your StackOne project
   */
  unifiedCustomFields?: { [k: string]: any } | null | undefined;
};

/** @internal */
export const LmsUpsertContentRequestDto4$inboundSchema: z.ZodType<
  LmsUpsertContentRequestDto4,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type LmsUpsertContentRequestDto4$Outbound = {};

/** @internal */
export const LmsUpsertContentRequestDto4$outboundSchema: z.ZodType<
  LmsUpsertContentRequestDto4$Outbound,
  z.ZodTypeDef,
  LmsUpsertContentRequestDto4
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LmsUpsertContentRequestDto4$ {
  /** @deprecated use `LmsUpsertContentRequestDto4$inboundSchema` instead. */
  export const inboundSchema = LmsUpsertContentRequestDto4$inboundSchema;
  /** @deprecated use `LmsUpsertContentRequestDto4$outboundSchema` instead. */
  export const outboundSchema = LmsUpsertContentRequestDto4$outboundSchema;
  /** @deprecated use `LmsUpsertContentRequestDto4$Outbound` instead. */
  export type Outbound = LmsUpsertContentRequestDto4$Outbound;
}

/** @internal */
export const LmsUpsertContentRequestDtoSourceValue$inboundSchema: z.ZodType<
  LmsUpsertContentRequestDtoSourceValue,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => LmsUpsertContentRequestDto4$inboundSchema),
  z.string(),
  z.number(),
  z.boolean(),
  z.array(z.any()),
]);

/** @internal */
export type LmsUpsertContentRequestDtoSourceValue$Outbound =
  | LmsUpsertContentRequestDto4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const LmsUpsertContentRequestDtoSourceValue$outboundSchema: z.ZodType<
  LmsUpsertContentRequestDtoSourceValue$Outbound,
  z.ZodTypeDef,
  LmsUpsertContentRequestDtoSourceValue
> = z.union([
  z.lazy(() => LmsUpsertContentRequestDto4$outboundSchema),
  z.string(),
  z.number(),
  z.boolean(),
  z.array(z.any()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LmsUpsertContentRequestDtoSourceValue$ {
  /** @deprecated use `LmsUpsertContentRequestDtoSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    LmsUpsertContentRequestDtoSourceValue$inboundSchema;
  /** @deprecated use `LmsUpsertContentRequestDtoSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    LmsUpsertContentRequestDtoSourceValue$outboundSchema;
  /** @deprecated use `LmsUpsertContentRequestDtoSourceValue$Outbound` instead. */
  export type Outbound = LmsUpsertContentRequestDtoSourceValue$Outbound;
}

/** @internal */
export const LmsUpsertContentRequestDtoValue$inboundSchema: z.ZodType<
  LmsUpsertContentRequestDtoValueOpen,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(LmsUpsertContentRequestDtoValue),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const LmsUpsertContentRequestDtoValue$outboundSchema: z.ZodType<
  LmsUpsertContentRequestDtoValueOpen,
  z.ZodTypeDef,
  LmsUpsertContentRequestDtoValueOpen
> = z.union([
  z.nativeEnum(LmsUpsertContentRequestDtoValue),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LmsUpsertContentRequestDtoValue$ {
  /** @deprecated use `LmsUpsertContentRequestDtoValue$inboundSchema` instead. */
  export const inboundSchema = LmsUpsertContentRequestDtoValue$inboundSchema;
  /** @deprecated use `LmsUpsertContentRequestDtoValue$outboundSchema` instead. */
  export const outboundSchema = LmsUpsertContentRequestDtoValue$outboundSchema;
}

/** @internal */
export const LmsUpsertContentRequestDtoContentLaunchMethod$inboundSchema:
  z.ZodType<
    LmsUpsertContentRequestDtoContentLaunchMethod,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source_value: z.nullable(
      z.union([
        z.lazy(() => LmsUpsertContentRequestDto4$inboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(LmsUpsertContentRequestDtoValue$inboundSchema).optional(),
  }).transform((v) => {
    return remap$(v, {
      "source_value": "sourceValue",
    });
  });

/** @internal */
export type LmsUpsertContentRequestDtoContentLaunchMethod$Outbound = {
  source_value?:
    | LmsUpsertContentRequestDto4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const LmsUpsertContentRequestDtoContentLaunchMethod$outboundSchema:
  z.ZodType<
    LmsUpsertContentRequestDtoContentLaunchMethod$Outbound,
    z.ZodTypeDef,
    LmsUpsertContentRequestDtoContentLaunchMethod
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.lazy(() => LmsUpsertContentRequestDto4$outboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(LmsUpsertContentRequestDtoValue$outboundSchema)
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LmsUpsertContentRequestDtoContentLaunchMethod$ {
  /** @deprecated use `LmsUpsertContentRequestDtoContentLaunchMethod$inboundSchema` instead. */
  export const inboundSchema =
    LmsUpsertContentRequestDtoContentLaunchMethod$inboundSchema;
  /** @deprecated use `LmsUpsertContentRequestDtoContentLaunchMethod$outboundSchema` instead. */
  export const outboundSchema =
    LmsUpsertContentRequestDtoContentLaunchMethod$outboundSchema;
  /** @deprecated use `LmsUpsertContentRequestDtoContentLaunchMethod$Outbound` instead. */
  export type Outbound = LmsUpsertContentRequestDtoContentLaunchMethod$Outbound;
}

/** @internal */
export const LmsUpsertContentRequestDtoSchemas4$inboundSchema: z.ZodType<
  LmsUpsertContentRequestDtoSchemas4,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type LmsUpsertContentRequestDtoSchemas4$Outbound = {};

/** @internal */
export const LmsUpsertContentRequestDtoSchemas4$outboundSchema: z.ZodType<
  LmsUpsertContentRequestDtoSchemas4$Outbound,
  z.ZodTypeDef,
  LmsUpsertContentRequestDtoSchemas4
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LmsUpsertContentRequestDtoSchemas4$ {
  /** @deprecated use `LmsUpsertContentRequestDtoSchemas4$inboundSchema` instead. */
  export const inboundSchema = LmsUpsertContentRequestDtoSchemas4$inboundSchema;
  /** @deprecated use `LmsUpsertContentRequestDtoSchemas4$outboundSchema` instead. */
  export const outboundSchema =
    LmsUpsertContentRequestDtoSchemas4$outboundSchema;
  /** @deprecated use `LmsUpsertContentRequestDtoSchemas4$Outbound` instead. */
  export type Outbound = LmsUpsertContentRequestDtoSchemas4$Outbound;
}

/** @internal */
export const LmsUpsertContentRequestDtoSchemasSourceValue$inboundSchema:
  z.ZodType<
    LmsUpsertContentRequestDtoSchemasSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => LmsUpsertContentRequestDtoSchemas4$inboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type LmsUpsertContentRequestDtoSchemasSourceValue$Outbound =
  | LmsUpsertContentRequestDtoSchemas4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const LmsUpsertContentRequestDtoSchemasSourceValue$outboundSchema:
  z.ZodType<
    LmsUpsertContentRequestDtoSchemasSourceValue$Outbound,
    z.ZodTypeDef,
    LmsUpsertContentRequestDtoSchemasSourceValue
  > = z.union([
    z.lazy(() => LmsUpsertContentRequestDtoSchemas4$outboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LmsUpsertContentRequestDtoSchemasSourceValue$ {
  /** @deprecated use `LmsUpsertContentRequestDtoSchemasSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    LmsUpsertContentRequestDtoSchemasSourceValue$inboundSchema;
  /** @deprecated use `LmsUpsertContentRequestDtoSchemasSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    LmsUpsertContentRequestDtoSchemasSourceValue$outboundSchema;
  /** @deprecated use `LmsUpsertContentRequestDtoSchemasSourceValue$Outbound` instead. */
  export type Outbound = LmsUpsertContentRequestDtoSchemasSourceValue$Outbound;
}

/** @internal */
export const LmsUpsertContentRequestDtoSchemasValue$inboundSchema: z.ZodType<
  LmsUpsertContentRequestDtoSchemasValueOpen,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(LmsUpsertContentRequestDtoSchemasValue),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const LmsUpsertContentRequestDtoSchemasValue$outboundSchema: z.ZodType<
  LmsUpsertContentRequestDtoSchemasValueOpen,
  z.ZodTypeDef,
  LmsUpsertContentRequestDtoSchemasValueOpen
> = z.union([
  z.nativeEnum(LmsUpsertContentRequestDtoSchemasValue),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LmsUpsertContentRequestDtoSchemasValue$ {
  /** @deprecated use `LmsUpsertContentRequestDtoSchemasValue$inboundSchema` instead. */
  export const inboundSchema =
    LmsUpsertContentRequestDtoSchemasValue$inboundSchema;
  /** @deprecated use `LmsUpsertContentRequestDtoSchemasValue$outboundSchema` instead. */
  export const outboundSchema =
    LmsUpsertContentRequestDtoSchemasValue$outboundSchema;
}

/** @internal */
export const LmsUpsertContentRequestDtoContentType$inboundSchema: z.ZodType<
  LmsUpsertContentRequestDtoContentType,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() => LmsUpsertContentRequestDtoSchemas4$inboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(LmsUpsertContentRequestDtoSchemasValue$inboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type LmsUpsertContentRequestDtoContentType$Outbound = {
  source_value?:
    | LmsUpsertContentRequestDtoSchemas4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const LmsUpsertContentRequestDtoContentType$outboundSchema: z.ZodType<
  LmsUpsertContentRequestDtoContentType$Outbound,
  z.ZodTypeDef,
  LmsUpsertContentRequestDtoContentType
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() => LmsUpsertContentRequestDtoSchemas4$outboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(LmsUpsertContentRequestDtoSchemasValue$outboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LmsUpsertContentRequestDtoContentType$ {
  /** @deprecated use `LmsUpsertContentRequestDtoContentType$inboundSchema` instead. */
  export const inboundSchema =
    LmsUpsertContentRequestDtoContentType$inboundSchema;
  /** @deprecated use `LmsUpsertContentRequestDtoContentType$outboundSchema` instead. */
  export const outboundSchema =
    LmsUpsertContentRequestDtoContentType$outboundSchema;
  /** @deprecated use `LmsUpsertContentRequestDtoContentType$Outbound` instead. */
  export type Outbound = LmsUpsertContentRequestDtoContentType$Outbound;
}

/** @internal */
export const LmsUpsertContentRequestDto$inboundSchema: z.ZodType<
  LmsUpsertContentRequestDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  active: z.nullable(z.boolean()).optional(),
  categories: z.nullable(z.array(CreateCategoriesApiModel$inboundSchema))
    .optional(),
  content_launch_method: z.nullable(
    z.lazy(() => LmsUpsertContentRequestDtoContentLaunchMethod$inboundSchema),
  ).optional(),
  content_type: z.nullable(
    z.lazy(() => LmsUpsertContentRequestDtoContentType$inboundSchema),
  ).optional(),
  content_url: z.nullable(z.string()).optional(),
  course_ids: z.nullable(z.array(z.string())).optional(),
  cover_url: z.nullable(z.string()).optional(),
  description: z.nullable(z.string()).optional(),
  duration: z.nullable(z.string()).optional(),
  external_reference: z.nullable(z.string()).optional(),
  languages: z.nullable(z.array(LanguageEnum$inboundSchema)).optional(),
  order: z.nullable(z.number()).optional(),
  skills: z.nullable(z.array(CreateSkillsApiModel$inboundSchema)).optional(),
  title: z.nullable(z.string()).optional(),
  unified_custom_fields: z.nullable(z.record(z.any())).optional(),
}).transform((v) => {
  return remap$(v, {
    "content_launch_method": "contentLaunchMethod",
    "content_type": "contentType",
    "content_url": "contentUrl",
    "course_ids": "courseIds",
    "cover_url": "coverUrl",
    "external_reference": "externalReference",
    "unified_custom_fields": "unifiedCustomFields",
  });
});

/** @internal */
export type LmsUpsertContentRequestDto$Outbound = {
  active?: boolean | null | undefined;
  categories?: Array<CreateCategoriesApiModel$Outbound> | null | undefined;
  content_launch_method?:
    | LmsUpsertContentRequestDtoContentLaunchMethod$Outbound
    | null
    | undefined;
  content_type?:
    | LmsUpsertContentRequestDtoContentType$Outbound
    | null
    | undefined;
  content_url?: string | null | undefined;
  course_ids?: Array<string> | null | undefined;
  cover_url?: string | null | undefined;
  description?: string | null | undefined;
  duration?: string | null | undefined;
  external_reference?: string | null | undefined;
  languages?: Array<LanguageEnum$Outbound> | null | undefined;
  order?: number | null | undefined;
  skills?: Array<CreateSkillsApiModel$Outbound> | null | undefined;
  title?: string | null | undefined;
  unified_custom_fields?: { [k: string]: any } | null | undefined;
};

/** @internal */
export const LmsUpsertContentRequestDto$outboundSchema: z.ZodType<
  LmsUpsertContentRequestDto$Outbound,
  z.ZodTypeDef,
  LmsUpsertContentRequestDto
> = z.object({
  active: z.nullable(z.boolean()).optional(),
  categories: z.nullable(z.array(CreateCategoriesApiModel$outboundSchema))
    .optional(),
  contentLaunchMethod: z.nullable(
    z.lazy(() => LmsUpsertContentRequestDtoContentLaunchMethod$outboundSchema),
  ).optional(),
  contentType: z.nullable(
    z.lazy(() => LmsUpsertContentRequestDtoContentType$outboundSchema),
  ).optional(),
  contentUrl: z.nullable(z.string()).optional(),
  courseIds: z.nullable(z.array(z.string())).optional(),
  coverUrl: z.nullable(z.string()).optional(),
  description: z.nullable(z.string()).optional(),
  duration: z.nullable(z.string()).optional(),
  externalReference: z.nullable(z.string()).optional(),
  languages: z.nullable(z.array(LanguageEnum$outboundSchema)).optional(),
  order: z.nullable(z.number()).optional(),
  skills: z.nullable(z.array(CreateSkillsApiModel$outboundSchema)).optional(),
  title: z.nullable(z.string()).optional(),
  unifiedCustomFields: z.nullable(z.record(z.any())).optional(),
}).transform((v) => {
  return remap$(v, {
    contentLaunchMethod: "content_launch_method",
    contentType: "content_type",
    contentUrl: "content_url",
    courseIds: "course_ids",
    coverUrl: "cover_url",
    externalReference: "external_reference",
    unifiedCustomFields: "unified_custom_fields",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LmsUpsertContentRequestDto$ {
  /** @deprecated use `LmsUpsertContentRequestDto$inboundSchema` instead. */
  export const inboundSchema = LmsUpsertContentRequestDto$inboundSchema;
  /** @deprecated use `LmsUpsertContentRequestDto$outboundSchema` instead. */
  export const outboundSchema = LmsUpsertContentRequestDto$outboundSchema;
  /** @deprecated use `LmsUpsertContentRequestDto$Outbound` instead. */
  export type Outbound = LmsUpsertContentRequestDto$Outbound;
}
