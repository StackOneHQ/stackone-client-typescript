/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type HrisUpdateEmploymentRequestDto4 = {};

export type HrisUpdateEmploymentRequestDtoSourceValue =
  | HrisUpdateEmploymentRequestDto4
  | string
  | number
  | boolean
  | Array<any>;

export enum HrisUpdateEmploymentRequestDtoValue {
  FullTime = "full_time",
  Shifts = "shifts",
  PartTime = "part_time",
  UnmappedValue = "unmapped_value",
}
export type HrisUpdateEmploymentRequestDtoValueOpen = OpenEnum<
  typeof HrisUpdateEmploymentRequestDtoValue
>;

/**
 * The employment work schedule type (e.g., full-time, part-time)
 *
 * @deprecated class: This will be removed in a future release, please migrate away from it as soon as possible.
 */
export type HrisUpdateEmploymentRequestDtoEmploymentContractType = {
  sourceValue?:
    | HrisUpdateEmploymentRequestDto4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: HrisUpdateEmploymentRequestDtoValueOpen | null | undefined;
};

export type HrisUpdateEmploymentRequestDtoSchemas4 = {};

/**
 * The source value of the employment type.
 */
export type HrisUpdateEmploymentRequestDtoSchemasSourceValue =
  | HrisUpdateEmploymentRequestDtoSchemas4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The type of the employment.
 */
export enum HrisUpdateEmploymentRequestDtoSchemasValue {
  Contractor = "contractor",
  Intern = "intern",
  Permanent = "permanent",
  Apprentice = "apprentice",
  Freelance = "freelance",
  Terminated = "terminated",
  Temporary = "temporary",
  Seasonal = "seasonal",
  Volunteer = "volunteer",
  Probation = "probation",
  Internal = "internal",
  External = "external",
  Expatriate = "expatriate",
  EmployerOfRecord = "employer_of_record",
  Casual = "casual",
  Programme = "Programme",
  UnmappedValue = "unmapped_value",
}
/**
 * The type of the employment.
 */
export type HrisUpdateEmploymentRequestDtoSchemasValueOpen = OpenEnum<
  typeof HrisUpdateEmploymentRequestDtoSchemasValue
>;

/**
 * The type of employment (e.g., contractor, permanent)
 *
 * @deprecated class: This will be removed in a future release, please migrate away from it as soon as possible.
 */
export type HrisUpdateEmploymentRequestDtoEmploymentType = {
  /**
   * The source value of the employment type.
   */
  sourceValue?:
    | HrisUpdateEmploymentRequestDtoSchemas4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The type of the employment.
   */
  value?: HrisUpdateEmploymentRequestDtoSchemasValueOpen | null | undefined;
};

/**
 * Represents the employee’s position within the organizational hierarchy.
 */
export type HrisUpdateEmploymentRequestDtoGrade = {
  /**
   * description of the grade
   */
  description?: string | null | undefined;
  /**
   * The reference id
   */
  id?: string | null | undefined;
  /**
   * The reference name
   */
  name?: string | null | undefined;
  /**
   * Provider's unique identifier
   */
  remoteId?: string | null | undefined;
};

export type HrisUpdateEmploymentRequestDtoSchemasPayFrequency4 = {};

/**
 * The source value of the pay frequency.
 */
export type HrisUpdateEmploymentRequestDtoSchemasPayFrequencySourceValue =
  | HrisUpdateEmploymentRequestDtoSchemasPayFrequency4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The pay frequency of the job postings.
 */
export enum HrisUpdateEmploymentRequestDtoSchemasPayFrequencyValue {
  Hourly = "hourly",
  Weekly = "weekly",
  BiWeekly = "bi_weekly",
  FourWeekly = "four_weekly",
  SemiMonthly = "semi_monthly",
  Monthly = "monthly",
  BiMonthly = "bi_monthly",
  Quarterly = "quarterly",
  SemiAnnually = "semi_annually",
  Yearly = "yearly",
  ThirteenMonthly = "thirteen_monthly",
  ProRata = "pro_rata",
  UnmappedValue = "unmapped_value",
  HalfYearly = "half_yearly",
  Daily = "daily",
}
/**
 * The pay frequency of the job postings.
 */
export type HrisUpdateEmploymentRequestDtoSchemasPayFrequencyValueOpen =
  OpenEnum<typeof HrisUpdateEmploymentRequestDtoSchemasPayFrequencyValue>;

/**
 * The pay frequency
 */
export type HrisUpdateEmploymentRequestDtoPayFrequency = {
  /**
   * The source value of the pay frequency.
   */
  sourceValue?:
    | HrisUpdateEmploymentRequestDtoSchemasPayFrequency4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The pay frequency of the job postings.
   */
  value?:
    | HrisUpdateEmploymentRequestDtoSchemasPayFrequencyValueOpen
    | null
    | undefined;
};

export type HrisUpdateEmploymentRequestDtoSchemasPayPeriod4 = {};

/**
 * The source value of the pay period.
 */
export type HrisUpdateEmploymentRequestDtoSchemasPayPeriodSourceValue =
  | HrisUpdateEmploymentRequestDtoSchemasPayPeriod4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The pay period of the job postings.
 */
export enum HrisUpdateEmploymentRequestDtoSchemasPayPeriodValue {
  Hour = "hour",
  Day = "day",
  Week = "week",
  EveryTwoWeeks = "every_two_weeks",
  Month = "month",
  TwiceAMonth = "twice_a_month",
  EveryTwoMonths = "every_two_months",
  Quarter = "quarter",
  EverySixMonths = "every_six_months",
  Year = "year",
  OneOff = "one_off",
  None = "none",
  UnmappedValue = "unmapped_value",
}
/**
 * The pay period of the job postings.
 */
export type HrisUpdateEmploymentRequestDtoSchemasPayPeriodValueOpen = OpenEnum<
  typeof HrisUpdateEmploymentRequestDtoSchemasPayPeriodValue
>;

/**
 * The pay period
 */
export type HrisUpdateEmploymentRequestDtoPayPeriod = {
  /**
   * The source value of the pay period.
   */
  sourceValue?:
    | HrisUpdateEmploymentRequestDtoSchemasPayPeriod4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The pay period of the job postings.
   */
  value?:
    | HrisUpdateEmploymentRequestDtoSchemasPayPeriodValueOpen
    | null
    | undefined;
};

export type HrisUpdateEmploymentRequestDtoSchemasWorkTime4 = {};

export type HrisUpdateEmploymentRequestDtoSchemasWorkTimeSourceValue =
  | HrisUpdateEmploymentRequestDtoSchemasWorkTime4
  | string
  | number
  | boolean
  | Array<any>;

/**
 * The unified value for the period.
 */
export enum HrisUpdateEmploymentRequestDtoSchemasWorkTimeValue {
  Day = "day",
  Week = "week",
  Month = "month",
  Year = "year",
  UnmappedValue = "unmapped_value",
}
/**
 * The unified value for the period.
 */
export type HrisUpdateEmploymentRequestDtoSchemasWorkTimeValueOpen = OpenEnum<
  typeof HrisUpdateEmploymentRequestDtoSchemasWorkTimeValue
>;

/**
 * The duration unit of the work time
 */
export type HrisUpdateEmploymentRequestDtoDurationUnit = {
  sourceValue?:
    | HrisUpdateEmploymentRequestDtoSchemasWorkTime4
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  /**
   * The unified value for the period.
   */
  value?:
    | HrisUpdateEmploymentRequestDtoSchemasWorkTimeValueOpen
    | null
    | undefined;
};

export type HrisUpdateEmploymentRequestDtoWorkTime = {
  /**
   * The work time duration in ISO 8601 duration format
   */
  duration?: string | null | undefined;
  /**
   * The duration unit of the work time
   */
  durationUnit?: HrisUpdateEmploymentRequestDtoDurationUnit | null | undefined;
};

export type HrisUpdateEmploymentRequestDto = {
  /**
   * The effective date of the employment contract
   */
  effectiveDate?: Date | null | undefined;
  /**
   * The employment work schedule type (e.g., full-time, part-time)
   *
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  employmentContractType?:
    | HrisUpdateEmploymentRequestDtoEmploymentContractType
    | null
    | undefined;
  /**
   * The type of employment (e.g., contractor, permanent)
   *
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  employmentType?:
    | HrisUpdateEmploymentRequestDtoEmploymentType
    | null
    | undefined;
  /**
   * The end date of employment
   */
  endDate?: Date | null | undefined;
  /**
   * Represents the employee’s position within the organizational hierarchy.
   */
  grade?: HrisUpdateEmploymentRequestDtoGrade | null | undefined;
  /**
   * The job title of the employee
   */
  jobTitle?: string | null | undefined;
  /**
   * Value to pass through to the provider
   */
  passthrough?: { [k: string]: any } | null | undefined;
  /**
   * The currency used for pay
   */
  payCurrency?: string | null | undefined;
  /**
   * The pay frequency
   */
  payFrequency?: HrisUpdateEmploymentRequestDtoPayFrequency | null | undefined;
  /**
   * The pay period
   */
  payPeriod?: HrisUpdateEmploymentRequestDtoPayPeriod | null | undefined;
  /**
   * The pay rate for the employee
   */
  payRate?: string | null | undefined;
  /**
   * The payroll code of the employee
   */
  payrollCode?: string | null | undefined;
  /**
   * Custom Unified Fields configured in your StackOne project
   */
  unifiedCustomFields?: { [k: string]: any } | null | undefined;
  workTime?: HrisUpdateEmploymentRequestDtoWorkTime | null | undefined;
};

/** @internal */
export const HrisUpdateEmploymentRequestDto4$inboundSchema: z.ZodType<
  HrisUpdateEmploymentRequestDto4,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type HrisUpdateEmploymentRequestDto4$Outbound = {};

/** @internal */
export const HrisUpdateEmploymentRequestDto4$outboundSchema: z.ZodType<
  HrisUpdateEmploymentRequestDto4$Outbound,
  z.ZodTypeDef,
  HrisUpdateEmploymentRequestDto4
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmploymentRequestDto4$ {
  /** @deprecated use `HrisUpdateEmploymentRequestDto4$inboundSchema` instead. */
  export const inboundSchema = HrisUpdateEmploymentRequestDto4$inboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDto4$outboundSchema` instead. */
  export const outboundSchema = HrisUpdateEmploymentRequestDto4$outboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDto4$Outbound` instead. */
  export type Outbound = HrisUpdateEmploymentRequestDto4$Outbound;
}

export function hrisUpdateEmploymentRequestDto4ToJSON(
  hrisUpdateEmploymentRequestDto4: HrisUpdateEmploymentRequestDto4,
): string {
  return JSON.stringify(
    HrisUpdateEmploymentRequestDto4$outboundSchema.parse(
      hrisUpdateEmploymentRequestDto4,
    ),
  );
}

export function hrisUpdateEmploymentRequestDto4FromJSON(
  jsonString: string,
): SafeParseResult<HrisUpdateEmploymentRequestDto4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HrisUpdateEmploymentRequestDto4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmploymentRequestDto4' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmploymentRequestDtoSourceValue$inboundSchema: z.ZodType<
  HrisUpdateEmploymentRequestDtoSourceValue,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => HrisUpdateEmploymentRequestDto4$inboundSchema),
  z.string(),
  z.number(),
  z.boolean(),
  z.array(z.any()),
]);

/** @internal */
export type HrisUpdateEmploymentRequestDtoSourceValue$Outbound =
  | HrisUpdateEmploymentRequestDto4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const HrisUpdateEmploymentRequestDtoSourceValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmploymentRequestDtoSourceValue$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmploymentRequestDtoSourceValue
  > = z.union([
    z.lazy(() => HrisUpdateEmploymentRequestDto4$outboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmploymentRequestDtoSourceValue$ {
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmploymentRequestDtoSourceValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmploymentRequestDtoSourceValue$outboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSourceValue$Outbound` instead. */
  export type Outbound = HrisUpdateEmploymentRequestDtoSourceValue$Outbound;
}

export function hrisUpdateEmploymentRequestDtoSourceValueToJSON(
  hrisUpdateEmploymentRequestDtoSourceValue:
    HrisUpdateEmploymentRequestDtoSourceValue,
): string {
  return JSON.stringify(
    HrisUpdateEmploymentRequestDtoSourceValue$outboundSchema.parse(
      hrisUpdateEmploymentRequestDtoSourceValue,
    ),
  );
}

export function hrisUpdateEmploymentRequestDtoSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmploymentRequestDtoSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmploymentRequestDtoSourceValue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmploymentRequestDtoSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmploymentRequestDtoValue$inboundSchema: z.ZodType<
  HrisUpdateEmploymentRequestDtoValueOpen,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(HrisUpdateEmploymentRequestDtoValue),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const HrisUpdateEmploymentRequestDtoValue$outboundSchema: z.ZodType<
  HrisUpdateEmploymentRequestDtoValueOpen,
  z.ZodTypeDef,
  HrisUpdateEmploymentRequestDtoValueOpen
> = z.union([
  z.nativeEnum(HrisUpdateEmploymentRequestDtoValue),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmploymentRequestDtoValue$ {
  /** @deprecated use `HrisUpdateEmploymentRequestDtoValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmploymentRequestDtoValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmploymentRequestDtoValue$outboundSchema;
}

/** @internal */
export const HrisUpdateEmploymentRequestDtoEmploymentContractType$inboundSchema:
  z.ZodType<
    HrisUpdateEmploymentRequestDtoEmploymentContractType,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source_value: z.nullable(
      z.union([
        z.lazy(() => HrisUpdateEmploymentRequestDto4$inboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(HrisUpdateEmploymentRequestDtoValue$inboundSchema)
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      "source_value": "sourceValue",
    });
  });

/** @internal */
export type HrisUpdateEmploymentRequestDtoEmploymentContractType$Outbound = {
  source_value?:
    | HrisUpdateEmploymentRequestDto4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmploymentRequestDtoEmploymentContractType$outboundSchema:
  z.ZodType<
    HrisUpdateEmploymentRequestDtoEmploymentContractType$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmploymentRequestDtoEmploymentContractType
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.lazy(() => HrisUpdateEmploymentRequestDto4$outboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(HrisUpdateEmploymentRequestDtoValue$outboundSchema)
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmploymentRequestDtoEmploymentContractType$ {
  /** @deprecated use `HrisUpdateEmploymentRequestDtoEmploymentContractType$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmploymentRequestDtoEmploymentContractType$inboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoEmploymentContractType$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmploymentRequestDtoEmploymentContractType$outboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoEmploymentContractType$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmploymentRequestDtoEmploymentContractType$Outbound;
}

export function hrisUpdateEmploymentRequestDtoEmploymentContractTypeToJSON(
  hrisUpdateEmploymentRequestDtoEmploymentContractType:
    HrisUpdateEmploymentRequestDtoEmploymentContractType,
): string {
  return JSON.stringify(
    HrisUpdateEmploymentRequestDtoEmploymentContractType$outboundSchema.parse(
      hrisUpdateEmploymentRequestDtoEmploymentContractType,
    ),
  );
}

export function hrisUpdateEmploymentRequestDtoEmploymentContractTypeFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmploymentRequestDtoEmploymentContractType,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmploymentRequestDtoEmploymentContractType$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmploymentRequestDtoEmploymentContractType' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmploymentRequestDtoSchemas4$inboundSchema: z.ZodType<
  HrisUpdateEmploymentRequestDtoSchemas4,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type HrisUpdateEmploymentRequestDtoSchemas4$Outbound = {};

/** @internal */
export const HrisUpdateEmploymentRequestDtoSchemas4$outboundSchema: z.ZodType<
  HrisUpdateEmploymentRequestDtoSchemas4$Outbound,
  z.ZodTypeDef,
  HrisUpdateEmploymentRequestDtoSchemas4
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmploymentRequestDtoSchemas4$ {
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemas4$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmploymentRequestDtoSchemas4$inboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemas4$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmploymentRequestDtoSchemas4$outboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemas4$Outbound` instead. */
  export type Outbound = HrisUpdateEmploymentRequestDtoSchemas4$Outbound;
}

export function hrisUpdateEmploymentRequestDtoSchemas4ToJSON(
  hrisUpdateEmploymentRequestDtoSchemas4:
    HrisUpdateEmploymentRequestDtoSchemas4,
): string {
  return JSON.stringify(
    HrisUpdateEmploymentRequestDtoSchemas4$outboundSchema.parse(
      hrisUpdateEmploymentRequestDtoSchemas4,
    ),
  );
}

export function hrisUpdateEmploymentRequestDtoSchemas4FromJSON(
  jsonString: string,
): SafeParseResult<HrisUpdateEmploymentRequestDtoSchemas4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmploymentRequestDtoSchemas4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmploymentRequestDtoSchemas4' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmploymentRequestDtoSchemasSourceValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmploymentRequestDtoSchemasSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => HrisUpdateEmploymentRequestDtoSchemas4$inboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisUpdateEmploymentRequestDtoSchemasSourceValue$Outbound =
  | HrisUpdateEmploymentRequestDtoSchemas4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const HrisUpdateEmploymentRequestDtoSchemasSourceValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmploymentRequestDtoSchemasSourceValue$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmploymentRequestDtoSchemasSourceValue
  > = z.union([
    z.lazy(() => HrisUpdateEmploymentRequestDtoSchemas4$outboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmploymentRequestDtoSchemasSourceValue$ {
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemasSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmploymentRequestDtoSchemasSourceValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemasSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmploymentRequestDtoSchemasSourceValue$outboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemasSourceValue$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmploymentRequestDtoSchemasSourceValue$Outbound;
}

export function hrisUpdateEmploymentRequestDtoSchemasSourceValueToJSON(
  hrisUpdateEmploymentRequestDtoSchemasSourceValue:
    HrisUpdateEmploymentRequestDtoSchemasSourceValue,
): string {
  return JSON.stringify(
    HrisUpdateEmploymentRequestDtoSchemasSourceValue$outboundSchema.parse(
      hrisUpdateEmploymentRequestDtoSchemasSourceValue,
    ),
  );
}

export function hrisUpdateEmploymentRequestDtoSchemasSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmploymentRequestDtoSchemasSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmploymentRequestDtoSchemasSourceValue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmploymentRequestDtoSchemasSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmploymentRequestDtoSchemasValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmploymentRequestDtoSchemasValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(HrisUpdateEmploymentRequestDtoSchemasValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisUpdateEmploymentRequestDtoSchemasValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmploymentRequestDtoSchemasValueOpen,
    z.ZodTypeDef,
    HrisUpdateEmploymentRequestDtoSchemasValueOpen
  > = z.union([
    z.nativeEnum(HrisUpdateEmploymentRequestDtoSchemasValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmploymentRequestDtoSchemasValue$ {
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemasValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmploymentRequestDtoSchemasValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemasValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmploymentRequestDtoSchemasValue$outboundSchema;
}

/** @internal */
export const HrisUpdateEmploymentRequestDtoEmploymentType$inboundSchema:
  z.ZodType<
    HrisUpdateEmploymentRequestDtoEmploymentType,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source_value: z.nullable(
      z.union([
        z.lazy(() => HrisUpdateEmploymentRequestDtoSchemas4$inboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(HrisUpdateEmploymentRequestDtoSchemasValue$inboundSchema)
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      "source_value": "sourceValue",
    });
  });

/** @internal */
export type HrisUpdateEmploymentRequestDtoEmploymentType$Outbound = {
  source_value?:
    | HrisUpdateEmploymentRequestDtoSchemas4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmploymentRequestDtoEmploymentType$outboundSchema:
  z.ZodType<
    HrisUpdateEmploymentRequestDtoEmploymentType$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmploymentRequestDtoEmploymentType
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.lazy(() => HrisUpdateEmploymentRequestDtoSchemas4$outboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(HrisUpdateEmploymentRequestDtoSchemasValue$outboundSchema)
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmploymentRequestDtoEmploymentType$ {
  /** @deprecated use `HrisUpdateEmploymentRequestDtoEmploymentType$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmploymentRequestDtoEmploymentType$inboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoEmploymentType$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmploymentRequestDtoEmploymentType$outboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoEmploymentType$Outbound` instead. */
  export type Outbound = HrisUpdateEmploymentRequestDtoEmploymentType$Outbound;
}

export function hrisUpdateEmploymentRequestDtoEmploymentTypeToJSON(
  hrisUpdateEmploymentRequestDtoEmploymentType:
    HrisUpdateEmploymentRequestDtoEmploymentType,
): string {
  return JSON.stringify(
    HrisUpdateEmploymentRequestDtoEmploymentType$outboundSchema.parse(
      hrisUpdateEmploymentRequestDtoEmploymentType,
    ),
  );
}

export function hrisUpdateEmploymentRequestDtoEmploymentTypeFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmploymentRequestDtoEmploymentType,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmploymentRequestDtoEmploymentType$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmploymentRequestDtoEmploymentType' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmploymentRequestDtoGrade$inboundSchema: z.ZodType<
  HrisUpdateEmploymentRequestDtoGrade,
  z.ZodTypeDef,
  unknown
> = z.object({
  description: z.nullable(z.string()).optional(),
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  remote_id: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "remote_id": "remoteId",
  });
});

/** @internal */
export type HrisUpdateEmploymentRequestDtoGrade$Outbound = {
  description?: string | null | undefined;
  id?: string | null | undefined;
  name?: string | null | undefined;
  remote_id?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmploymentRequestDtoGrade$outboundSchema: z.ZodType<
  HrisUpdateEmploymentRequestDtoGrade$Outbound,
  z.ZodTypeDef,
  HrisUpdateEmploymentRequestDtoGrade
> = z.object({
  description: z.nullable(z.string()).optional(),
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  remoteId: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    remoteId: "remote_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmploymentRequestDtoGrade$ {
  /** @deprecated use `HrisUpdateEmploymentRequestDtoGrade$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmploymentRequestDtoGrade$inboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoGrade$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmploymentRequestDtoGrade$outboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoGrade$Outbound` instead. */
  export type Outbound = HrisUpdateEmploymentRequestDtoGrade$Outbound;
}

export function hrisUpdateEmploymentRequestDtoGradeToJSON(
  hrisUpdateEmploymentRequestDtoGrade: HrisUpdateEmploymentRequestDtoGrade,
): string {
  return JSON.stringify(
    HrisUpdateEmploymentRequestDtoGrade$outboundSchema.parse(
      hrisUpdateEmploymentRequestDtoGrade,
    ),
  );
}

export function hrisUpdateEmploymentRequestDtoGradeFromJSON(
  jsonString: string,
): SafeParseResult<HrisUpdateEmploymentRequestDtoGrade, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmploymentRequestDtoGrade$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmploymentRequestDtoGrade' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmploymentRequestDtoSchemasPayFrequency4$inboundSchema:
  z.ZodType<
    HrisUpdateEmploymentRequestDtoSchemasPayFrequency4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisUpdateEmploymentRequestDtoSchemasPayFrequency4$Outbound = {};

/** @internal */
export const HrisUpdateEmploymentRequestDtoSchemasPayFrequency4$outboundSchema:
  z.ZodType<
    HrisUpdateEmploymentRequestDtoSchemasPayFrequency4$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmploymentRequestDtoSchemasPayFrequency4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmploymentRequestDtoSchemasPayFrequency4$ {
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemasPayFrequency4$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmploymentRequestDtoSchemasPayFrequency4$inboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemasPayFrequency4$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmploymentRequestDtoSchemasPayFrequency4$outboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemasPayFrequency4$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmploymentRequestDtoSchemasPayFrequency4$Outbound;
}

export function hrisUpdateEmploymentRequestDtoSchemasPayFrequency4ToJSON(
  hrisUpdateEmploymentRequestDtoSchemasPayFrequency4:
    HrisUpdateEmploymentRequestDtoSchemasPayFrequency4,
): string {
  return JSON.stringify(
    HrisUpdateEmploymentRequestDtoSchemasPayFrequency4$outboundSchema.parse(
      hrisUpdateEmploymentRequestDtoSchemasPayFrequency4,
    ),
  );
}

export function hrisUpdateEmploymentRequestDtoSchemasPayFrequency4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmploymentRequestDtoSchemasPayFrequency4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmploymentRequestDtoSchemasPayFrequency4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmploymentRequestDtoSchemasPayFrequency4' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmploymentRequestDtoSchemasPayFrequencySourceValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmploymentRequestDtoSchemasPayFrequencySourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      HrisUpdateEmploymentRequestDtoSchemasPayFrequency4$inboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisUpdateEmploymentRequestDtoSchemasPayFrequencySourceValue$Outbound =
  | HrisUpdateEmploymentRequestDtoSchemasPayFrequency4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const HrisUpdateEmploymentRequestDtoSchemasPayFrequencySourceValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmploymentRequestDtoSchemasPayFrequencySourceValue$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmploymentRequestDtoSchemasPayFrequencySourceValue
  > = z.union([
    z.lazy(() =>
      HrisUpdateEmploymentRequestDtoSchemasPayFrequency4$outboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmploymentRequestDtoSchemasPayFrequencySourceValue$ {
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemasPayFrequencySourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmploymentRequestDtoSchemasPayFrequencySourceValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemasPayFrequencySourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmploymentRequestDtoSchemasPayFrequencySourceValue$outboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemasPayFrequencySourceValue$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmploymentRequestDtoSchemasPayFrequencySourceValue$Outbound;
}

export function hrisUpdateEmploymentRequestDtoSchemasPayFrequencySourceValueToJSON(
  hrisUpdateEmploymentRequestDtoSchemasPayFrequencySourceValue:
    HrisUpdateEmploymentRequestDtoSchemasPayFrequencySourceValue,
): string {
  return JSON.stringify(
    HrisUpdateEmploymentRequestDtoSchemasPayFrequencySourceValue$outboundSchema
      .parse(hrisUpdateEmploymentRequestDtoSchemasPayFrequencySourceValue),
  );
}

export function hrisUpdateEmploymentRequestDtoSchemasPayFrequencySourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmploymentRequestDtoSchemasPayFrequencySourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmploymentRequestDtoSchemasPayFrequencySourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmploymentRequestDtoSchemasPayFrequencySourceValue' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmploymentRequestDtoSchemasPayFrequencyValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmploymentRequestDtoSchemasPayFrequencyValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(HrisUpdateEmploymentRequestDtoSchemasPayFrequencyValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisUpdateEmploymentRequestDtoSchemasPayFrequencyValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmploymentRequestDtoSchemasPayFrequencyValueOpen,
    z.ZodTypeDef,
    HrisUpdateEmploymentRequestDtoSchemasPayFrequencyValueOpen
  > = z.union([
    z.nativeEnum(HrisUpdateEmploymentRequestDtoSchemasPayFrequencyValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmploymentRequestDtoSchemasPayFrequencyValue$ {
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemasPayFrequencyValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmploymentRequestDtoSchemasPayFrequencyValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemasPayFrequencyValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmploymentRequestDtoSchemasPayFrequencyValue$outboundSchema;
}

/** @internal */
export const HrisUpdateEmploymentRequestDtoPayFrequency$inboundSchema:
  z.ZodType<HrisUpdateEmploymentRequestDtoPayFrequency, z.ZodTypeDef, unknown> =
    z.object({
      source_value: z.nullable(
        z.union([
          z.lazy(() =>
            HrisUpdateEmploymentRequestDtoSchemasPayFrequency4$inboundSchema
          ),
          z.string(),
          z.number(),
          z.boolean(),
          z.array(z.any()),
        ]),
      ).optional(),
      value: z.nullable(
        HrisUpdateEmploymentRequestDtoSchemasPayFrequencyValue$inboundSchema,
      ).optional(),
    }).transform((v) => {
      return remap$(v, {
        "source_value": "sourceValue",
      });
    });

/** @internal */
export type HrisUpdateEmploymentRequestDtoPayFrequency$Outbound = {
  source_value?:
    | HrisUpdateEmploymentRequestDtoSchemasPayFrequency4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmploymentRequestDtoPayFrequency$outboundSchema:
  z.ZodType<
    HrisUpdateEmploymentRequestDtoPayFrequency$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmploymentRequestDtoPayFrequency
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.lazy(() =>
          HrisUpdateEmploymentRequestDtoSchemasPayFrequency4$outboundSchema
        ),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      HrisUpdateEmploymentRequestDtoSchemasPayFrequencyValue$outboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmploymentRequestDtoPayFrequency$ {
  /** @deprecated use `HrisUpdateEmploymentRequestDtoPayFrequency$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmploymentRequestDtoPayFrequency$inboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoPayFrequency$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmploymentRequestDtoPayFrequency$outboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoPayFrequency$Outbound` instead. */
  export type Outbound = HrisUpdateEmploymentRequestDtoPayFrequency$Outbound;
}

export function hrisUpdateEmploymentRequestDtoPayFrequencyToJSON(
  hrisUpdateEmploymentRequestDtoPayFrequency:
    HrisUpdateEmploymentRequestDtoPayFrequency,
): string {
  return JSON.stringify(
    HrisUpdateEmploymentRequestDtoPayFrequency$outboundSchema.parse(
      hrisUpdateEmploymentRequestDtoPayFrequency,
    ),
  );
}

export function hrisUpdateEmploymentRequestDtoPayFrequencyFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmploymentRequestDtoPayFrequency,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmploymentRequestDtoPayFrequency$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmploymentRequestDtoPayFrequency' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmploymentRequestDtoSchemasPayPeriod4$inboundSchema:
  z.ZodType<
    HrisUpdateEmploymentRequestDtoSchemasPayPeriod4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisUpdateEmploymentRequestDtoSchemasPayPeriod4$Outbound = {};

/** @internal */
export const HrisUpdateEmploymentRequestDtoSchemasPayPeriod4$outboundSchema:
  z.ZodType<
    HrisUpdateEmploymentRequestDtoSchemasPayPeriod4$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmploymentRequestDtoSchemasPayPeriod4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmploymentRequestDtoSchemasPayPeriod4$ {
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemasPayPeriod4$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmploymentRequestDtoSchemasPayPeriod4$inboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemasPayPeriod4$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmploymentRequestDtoSchemasPayPeriod4$outboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemasPayPeriod4$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmploymentRequestDtoSchemasPayPeriod4$Outbound;
}

export function hrisUpdateEmploymentRequestDtoSchemasPayPeriod4ToJSON(
  hrisUpdateEmploymentRequestDtoSchemasPayPeriod4:
    HrisUpdateEmploymentRequestDtoSchemasPayPeriod4,
): string {
  return JSON.stringify(
    HrisUpdateEmploymentRequestDtoSchemasPayPeriod4$outboundSchema.parse(
      hrisUpdateEmploymentRequestDtoSchemasPayPeriod4,
    ),
  );
}

export function hrisUpdateEmploymentRequestDtoSchemasPayPeriod4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmploymentRequestDtoSchemasPayPeriod4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmploymentRequestDtoSchemasPayPeriod4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmploymentRequestDtoSchemasPayPeriod4' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmploymentRequestDtoSchemasPayPeriodSourceValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmploymentRequestDtoSchemasPayPeriodSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => HrisUpdateEmploymentRequestDtoSchemasPayPeriod4$inboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisUpdateEmploymentRequestDtoSchemasPayPeriodSourceValue$Outbound =
  | HrisUpdateEmploymentRequestDtoSchemasPayPeriod4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const HrisUpdateEmploymentRequestDtoSchemasPayPeriodSourceValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmploymentRequestDtoSchemasPayPeriodSourceValue$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmploymentRequestDtoSchemasPayPeriodSourceValue
  > = z.union([
    z.lazy(() =>
      HrisUpdateEmploymentRequestDtoSchemasPayPeriod4$outboundSchema
    ),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmploymentRequestDtoSchemasPayPeriodSourceValue$ {
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemasPayPeriodSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmploymentRequestDtoSchemasPayPeriodSourceValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemasPayPeriodSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmploymentRequestDtoSchemasPayPeriodSourceValue$outboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemasPayPeriodSourceValue$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmploymentRequestDtoSchemasPayPeriodSourceValue$Outbound;
}

export function hrisUpdateEmploymentRequestDtoSchemasPayPeriodSourceValueToJSON(
  hrisUpdateEmploymentRequestDtoSchemasPayPeriodSourceValue:
    HrisUpdateEmploymentRequestDtoSchemasPayPeriodSourceValue,
): string {
  return JSON.stringify(
    HrisUpdateEmploymentRequestDtoSchemasPayPeriodSourceValue$outboundSchema
      .parse(hrisUpdateEmploymentRequestDtoSchemasPayPeriodSourceValue),
  );
}

export function hrisUpdateEmploymentRequestDtoSchemasPayPeriodSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmploymentRequestDtoSchemasPayPeriodSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmploymentRequestDtoSchemasPayPeriodSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmploymentRequestDtoSchemasPayPeriodSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmploymentRequestDtoSchemasPayPeriodValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmploymentRequestDtoSchemasPayPeriodValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(HrisUpdateEmploymentRequestDtoSchemasPayPeriodValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisUpdateEmploymentRequestDtoSchemasPayPeriodValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmploymentRequestDtoSchemasPayPeriodValueOpen,
    z.ZodTypeDef,
    HrisUpdateEmploymentRequestDtoSchemasPayPeriodValueOpen
  > = z.union([
    z.nativeEnum(HrisUpdateEmploymentRequestDtoSchemasPayPeriodValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmploymentRequestDtoSchemasPayPeriodValue$ {
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemasPayPeriodValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmploymentRequestDtoSchemasPayPeriodValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemasPayPeriodValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmploymentRequestDtoSchemasPayPeriodValue$outboundSchema;
}

/** @internal */
export const HrisUpdateEmploymentRequestDtoPayPeriod$inboundSchema: z.ZodType<
  HrisUpdateEmploymentRequestDtoPayPeriod,
  z.ZodTypeDef,
  unknown
> = z.object({
  source_value: z.nullable(
    z.union([
      z.lazy(() =>
        HrisUpdateEmploymentRequestDtoSchemasPayPeriod4$inboundSchema
      ),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisUpdateEmploymentRequestDtoSchemasPayPeriodValue$inboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "source_value": "sourceValue",
  });
});

/** @internal */
export type HrisUpdateEmploymentRequestDtoPayPeriod$Outbound = {
  source_value?:
    | HrisUpdateEmploymentRequestDtoSchemasPayPeriod4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmploymentRequestDtoPayPeriod$outboundSchema: z.ZodType<
  HrisUpdateEmploymentRequestDtoPayPeriod$Outbound,
  z.ZodTypeDef,
  HrisUpdateEmploymentRequestDtoPayPeriod
> = z.object({
  sourceValue: z.nullable(
    z.union([
      z.lazy(() =>
        HrisUpdateEmploymentRequestDtoSchemasPayPeriod4$outboundSchema
      ),
      z.string(),
      z.number(),
      z.boolean(),
      z.array(z.any()),
    ]),
  ).optional(),
  value: z.nullable(
    HrisUpdateEmploymentRequestDtoSchemasPayPeriodValue$outboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    sourceValue: "source_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmploymentRequestDtoPayPeriod$ {
  /** @deprecated use `HrisUpdateEmploymentRequestDtoPayPeriod$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmploymentRequestDtoPayPeriod$inboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoPayPeriod$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmploymentRequestDtoPayPeriod$outboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoPayPeriod$Outbound` instead. */
  export type Outbound = HrisUpdateEmploymentRequestDtoPayPeriod$Outbound;
}

export function hrisUpdateEmploymentRequestDtoPayPeriodToJSON(
  hrisUpdateEmploymentRequestDtoPayPeriod:
    HrisUpdateEmploymentRequestDtoPayPeriod,
): string {
  return JSON.stringify(
    HrisUpdateEmploymentRequestDtoPayPeriod$outboundSchema.parse(
      hrisUpdateEmploymentRequestDtoPayPeriod,
    ),
  );
}

export function hrisUpdateEmploymentRequestDtoPayPeriodFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmploymentRequestDtoPayPeriod,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmploymentRequestDtoPayPeriod$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmploymentRequestDtoPayPeriod' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmploymentRequestDtoSchemasWorkTime4$inboundSchema:
  z.ZodType<
    HrisUpdateEmploymentRequestDtoSchemasWorkTime4,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type HrisUpdateEmploymentRequestDtoSchemasWorkTime4$Outbound = {};

/** @internal */
export const HrisUpdateEmploymentRequestDtoSchemasWorkTime4$outboundSchema:
  z.ZodType<
    HrisUpdateEmploymentRequestDtoSchemasWorkTime4$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmploymentRequestDtoSchemasWorkTime4
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmploymentRequestDtoSchemasWorkTime4$ {
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemasWorkTime4$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmploymentRequestDtoSchemasWorkTime4$inboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemasWorkTime4$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmploymentRequestDtoSchemasWorkTime4$outboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemasWorkTime4$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmploymentRequestDtoSchemasWorkTime4$Outbound;
}

export function hrisUpdateEmploymentRequestDtoSchemasWorkTime4ToJSON(
  hrisUpdateEmploymentRequestDtoSchemasWorkTime4:
    HrisUpdateEmploymentRequestDtoSchemasWorkTime4,
): string {
  return JSON.stringify(
    HrisUpdateEmploymentRequestDtoSchemasWorkTime4$outboundSchema.parse(
      hrisUpdateEmploymentRequestDtoSchemasWorkTime4,
    ),
  );
}

export function hrisUpdateEmploymentRequestDtoSchemasWorkTime4FromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmploymentRequestDtoSchemasWorkTime4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmploymentRequestDtoSchemasWorkTime4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmploymentRequestDtoSchemasWorkTime4' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmploymentRequestDtoSchemasWorkTimeSourceValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmploymentRequestDtoSchemasWorkTimeSourceValue,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => HrisUpdateEmploymentRequestDtoSchemasWorkTime4$inboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/** @internal */
export type HrisUpdateEmploymentRequestDtoSchemasWorkTimeSourceValue$Outbound =
  | HrisUpdateEmploymentRequestDtoSchemasWorkTime4$Outbound
  | string
  | number
  | boolean
  | Array<any>;

/** @internal */
export const HrisUpdateEmploymentRequestDtoSchemasWorkTimeSourceValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmploymentRequestDtoSchemasWorkTimeSourceValue$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmploymentRequestDtoSchemasWorkTimeSourceValue
  > = z.union([
    z.lazy(() => HrisUpdateEmploymentRequestDtoSchemasWorkTime4$outboundSchema),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmploymentRequestDtoSchemasWorkTimeSourceValue$ {
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemasWorkTimeSourceValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmploymentRequestDtoSchemasWorkTimeSourceValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemasWorkTimeSourceValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmploymentRequestDtoSchemasWorkTimeSourceValue$outboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemasWorkTimeSourceValue$Outbound` instead. */
  export type Outbound =
    HrisUpdateEmploymentRequestDtoSchemasWorkTimeSourceValue$Outbound;
}

export function hrisUpdateEmploymentRequestDtoSchemasWorkTimeSourceValueToJSON(
  hrisUpdateEmploymentRequestDtoSchemasWorkTimeSourceValue:
    HrisUpdateEmploymentRequestDtoSchemasWorkTimeSourceValue,
): string {
  return JSON.stringify(
    HrisUpdateEmploymentRequestDtoSchemasWorkTimeSourceValue$outboundSchema
      .parse(hrisUpdateEmploymentRequestDtoSchemasWorkTimeSourceValue),
  );
}

export function hrisUpdateEmploymentRequestDtoSchemasWorkTimeSourceValueFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmploymentRequestDtoSchemasWorkTimeSourceValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmploymentRequestDtoSchemasWorkTimeSourceValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmploymentRequestDtoSchemasWorkTimeSourceValue' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmploymentRequestDtoSchemasWorkTimeValue$inboundSchema:
  z.ZodType<
    HrisUpdateEmploymentRequestDtoSchemasWorkTimeValueOpen,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(HrisUpdateEmploymentRequestDtoSchemasWorkTimeValue),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const HrisUpdateEmploymentRequestDtoSchemasWorkTimeValue$outboundSchema:
  z.ZodType<
    HrisUpdateEmploymentRequestDtoSchemasWorkTimeValueOpen,
    z.ZodTypeDef,
    HrisUpdateEmploymentRequestDtoSchemasWorkTimeValueOpen
  > = z.union([
    z.nativeEnum(HrisUpdateEmploymentRequestDtoSchemasWorkTimeValue),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmploymentRequestDtoSchemasWorkTimeValue$ {
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemasWorkTimeValue$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmploymentRequestDtoSchemasWorkTimeValue$inboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoSchemasWorkTimeValue$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmploymentRequestDtoSchemasWorkTimeValue$outboundSchema;
}

/** @internal */
export const HrisUpdateEmploymentRequestDtoDurationUnit$inboundSchema:
  z.ZodType<HrisUpdateEmploymentRequestDtoDurationUnit, z.ZodTypeDef, unknown> =
    z.object({
      source_value: z.nullable(
        z.union([
          z.lazy(() =>
            HrisUpdateEmploymentRequestDtoSchemasWorkTime4$inboundSchema
          ),
          z.string(),
          z.number(),
          z.boolean(),
          z.array(z.any()),
        ]),
      ).optional(),
      value: z.nullable(
        HrisUpdateEmploymentRequestDtoSchemasWorkTimeValue$inboundSchema,
      ).optional(),
    }).transform((v) => {
      return remap$(v, {
        "source_value": "sourceValue",
      });
    });

/** @internal */
export type HrisUpdateEmploymentRequestDtoDurationUnit$Outbound = {
  source_value?:
    | HrisUpdateEmploymentRequestDtoSchemasWorkTime4$Outbound
    | string
    | number
    | boolean
    | Array<any>
    | null
    | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const HrisUpdateEmploymentRequestDtoDurationUnit$outboundSchema:
  z.ZodType<
    HrisUpdateEmploymentRequestDtoDurationUnit$Outbound,
    z.ZodTypeDef,
    HrisUpdateEmploymentRequestDtoDurationUnit
  > = z.object({
    sourceValue: z.nullable(
      z.union([
        z.lazy(() =>
          HrisUpdateEmploymentRequestDtoSchemasWorkTime4$outboundSchema
        ),
        z.string(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
      ]),
    ).optional(),
    value: z.nullable(
      HrisUpdateEmploymentRequestDtoSchemasWorkTimeValue$outboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      sourceValue: "source_value",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmploymentRequestDtoDurationUnit$ {
  /** @deprecated use `HrisUpdateEmploymentRequestDtoDurationUnit$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmploymentRequestDtoDurationUnit$inboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoDurationUnit$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmploymentRequestDtoDurationUnit$outboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoDurationUnit$Outbound` instead. */
  export type Outbound = HrisUpdateEmploymentRequestDtoDurationUnit$Outbound;
}

export function hrisUpdateEmploymentRequestDtoDurationUnitToJSON(
  hrisUpdateEmploymentRequestDtoDurationUnit:
    HrisUpdateEmploymentRequestDtoDurationUnit,
): string {
  return JSON.stringify(
    HrisUpdateEmploymentRequestDtoDurationUnit$outboundSchema.parse(
      hrisUpdateEmploymentRequestDtoDurationUnit,
    ),
  );
}

export function hrisUpdateEmploymentRequestDtoDurationUnitFromJSON(
  jsonString: string,
): SafeParseResult<
  HrisUpdateEmploymentRequestDtoDurationUnit,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmploymentRequestDtoDurationUnit$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'HrisUpdateEmploymentRequestDtoDurationUnit' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmploymentRequestDtoWorkTime$inboundSchema: z.ZodType<
  HrisUpdateEmploymentRequestDtoWorkTime,
  z.ZodTypeDef,
  unknown
> = z.object({
  duration: z.nullable(z.string()).optional(),
  duration_unit: z.nullable(
    z.lazy(() => HrisUpdateEmploymentRequestDtoDurationUnit$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "duration_unit": "durationUnit",
  });
});

/** @internal */
export type HrisUpdateEmploymentRequestDtoWorkTime$Outbound = {
  duration?: string | null | undefined;
  duration_unit?:
    | HrisUpdateEmploymentRequestDtoDurationUnit$Outbound
    | null
    | undefined;
};

/** @internal */
export const HrisUpdateEmploymentRequestDtoWorkTime$outboundSchema: z.ZodType<
  HrisUpdateEmploymentRequestDtoWorkTime$Outbound,
  z.ZodTypeDef,
  HrisUpdateEmploymentRequestDtoWorkTime
> = z.object({
  duration: z.nullable(z.string()).optional(),
  durationUnit: z.nullable(
    z.lazy(() => HrisUpdateEmploymentRequestDtoDurationUnit$outboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    durationUnit: "duration_unit",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmploymentRequestDtoWorkTime$ {
  /** @deprecated use `HrisUpdateEmploymentRequestDtoWorkTime$inboundSchema` instead. */
  export const inboundSchema =
    HrisUpdateEmploymentRequestDtoWorkTime$inboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoWorkTime$outboundSchema` instead. */
  export const outboundSchema =
    HrisUpdateEmploymentRequestDtoWorkTime$outboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDtoWorkTime$Outbound` instead. */
  export type Outbound = HrisUpdateEmploymentRequestDtoWorkTime$Outbound;
}

export function hrisUpdateEmploymentRequestDtoWorkTimeToJSON(
  hrisUpdateEmploymentRequestDtoWorkTime:
    HrisUpdateEmploymentRequestDtoWorkTime,
): string {
  return JSON.stringify(
    HrisUpdateEmploymentRequestDtoWorkTime$outboundSchema.parse(
      hrisUpdateEmploymentRequestDtoWorkTime,
    ),
  );
}

export function hrisUpdateEmploymentRequestDtoWorkTimeFromJSON(
  jsonString: string,
): SafeParseResult<HrisUpdateEmploymentRequestDtoWorkTime, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      HrisUpdateEmploymentRequestDtoWorkTime$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmploymentRequestDtoWorkTime' from JSON`,
  );
}

/** @internal */
export const HrisUpdateEmploymentRequestDto$inboundSchema: z.ZodType<
  HrisUpdateEmploymentRequestDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  effective_date: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  employment_contract_type: z.nullable(
    z.lazy(() =>
      HrisUpdateEmploymentRequestDtoEmploymentContractType$inboundSchema
    ),
  ).optional(),
  employment_type: z.nullable(
    z.lazy(() => HrisUpdateEmploymentRequestDtoEmploymentType$inboundSchema),
  ).optional(),
  end_date: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  grade: z.nullable(
    z.lazy(() => HrisUpdateEmploymentRequestDtoGrade$inboundSchema),
  ).optional(),
  job_title: z.nullable(z.string()).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  pay_currency: z.nullable(z.string()).optional(),
  pay_frequency: z.nullable(
    z.lazy(() => HrisUpdateEmploymentRequestDtoPayFrequency$inboundSchema),
  ).optional(),
  pay_period: z.nullable(
    z.lazy(() => HrisUpdateEmploymentRequestDtoPayPeriod$inboundSchema),
  ).optional(),
  pay_rate: z.nullable(z.string()).optional(),
  payroll_code: z.nullable(z.string()).optional(),
  unified_custom_fields: z.nullable(z.record(z.any())).optional(),
  work_time: z.nullable(
    z.lazy(() => HrisUpdateEmploymentRequestDtoWorkTime$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "effective_date": "effectiveDate",
    "employment_contract_type": "employmentContractType",
    "employment_type": "employmentType",
    "end_date": "endDate",
    "job_title": "jobTitle",
    "pay_currency": "payCurrency",
    "pay_frequency": "payFrequency",
    "pay_period": "payPeriod",
    "pay_rate": "payRate",
    "payroll_code": "payrollCode",
    "unified_custom_fields": "unifiedCustomFields",
    "work_time": "workTime",
  });
});

/** @internal */
export type HrisUpdateEmploymentRequestDto$Outbound = {
  effective_date?: string | null | undefined;
  employment_contract_type?:
    | HrisUpdateEmploymentRequestDtoEmploymentContractType$Outbound
    | null
    | undefined;
  employment_type?:
    | HrisUpdateEmploymentRequestDtoEmploymentType$Outbound
    | null
    | undefined;
  end_date?: string | null | undefined;
  grade?: HrisUpdateEmploymentRequestDtoGrade$Outbound | null | undefined;
  job_title?: string | null | undefined;
  passthrough?: { [k: string]: any } | null | undefined;
  pay_currency?: string | null | undefined;
  pay_frequency?:
    | HrisUpdateEmploymentRequestDtoPayFrequency$Outbound
    | null
    | undefined;
  pay_period?:
    | HrisUpdateEmploymentRequestDtoPayPeriod$Outbound
    | null
    | undefined;
  pay_rate?: string | null | undefined;
  payroll_code?: string | null | undefined;
  unified_custom_fields?: { [k: string]: any } | null | undefined;
  work_time?:
    | HrisUpdateEmploymentRequestDtoWorkTime$Outbound
    | null
    | undefined;
};

/** @internal */
export const HrisUpdateEmploymentRequestDto$outboundSchema: z.ZodType<
  HrisUpdateEmploymentRequestDto$Outbound,
  z.ZodTypeDef,
  HrisUpdateEmploymentRequestDto
> = z.object({
  effectiveDate: z.nullable(z.date().transform(v => v.toISOString()))
    .optional(),
  employmentContractType: z.nullable(
    z.lazy(() =>
      HrisUpdateEmploymentRequestDtoEmploymentContractType$outboundSchema
    ),
  ).optional(),
  employmentType: z.nullable(
    z.lazy(() => HrisUpdateEmploymentRequestDtoEmploymentType$outboundSchema),
  ).optional(),
  endDate: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  grade: z.nullable(
    z.lazy(() => HrisUpdateEmploymentRequestDtoGrade$outboundSchema),
  ).optional(),
  jobTitle: z.nullable(z.string()).optional(),
  passthrough: z.nullable(z.record(z.any())).optional(),
  payCurrency: z.nullable(z.string()).optional(),
  payFrequency: z.nullable(
    z.lazy(() => HrisUpdateEmploymentRequestDtoPayFrequency$outboundSchema),
  ).optional(),
  payPeriod: z.nullable(
    z.lazy(() => HrisUpdateEmploymentRequestDtoPayPeriod$outboundSchema),
  ).optional(),
  payRate: z.nullable(z.string()).optional(),
  payrollCode: z.nullable(z.string()).optional(),
  unifiedCustomFields: z.nullable(z.record(z.any())).optional(),
  workTime: z.nullable(
    z.lazy(() => HrisUpdateEmploymentRequestDtoWorkTime$outboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    effectiveDate: "effective_date",
    employmentContractType: "employment_contract_type",
    employmentType: "employment_type",
    endDate: "end_date",
    jobTitle: "job_title",
    payCurrency: "pay_currency",
    payFrequency: "pay_frequency",
    payPeriod: "pay_period",
    payRate: "pay_rate",
    payrollCode: "payroll_code",
    unifiedCustomFields: "unified_custom_fields",
    workTime: "work_time",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisUpdateEmploymentRequestDto$ {
  /** @deprecated use `HrisUpdateEmploymentRequestDto$inboundSchema` instead. */
  export const inboundSchema = HrisUpdateEmploymentRequestDto$inboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDto$outboundSchema` instead. */
  export const outboundSchema = HrisUpdateEmploymentRequestDto$outboundSchema;
  /** @deprecated use `HrisUpdateEmploymentRequestDto$Outbound` instead. */
  export type Outbound = HrisUpdateEmploymentRequestDto$Outbound;
}

export function hrisUpdateEmploymentRequestDtoToJSON(
  hrisUpdateEmploymentRequestDto: HrisUpdateEmploymentRequestDto,
): string {
  return JSON.stringify(
    HrisUpdateEmploymentRequestDto$outboundSchema.parse(
      hrisUpdateEmploymentRequestDto,
    ),
  );
}

export function hrisUpdateEmploymentRequestDtoFromJSON(
  jsonString: string,
): SafeParseResult<HrisUpdateEmploymentRequestDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HrisUpdateEmploymentRequestDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisUpdateEmploymentRequestDto' from JSON`,
  );
}
