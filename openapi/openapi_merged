openapi: "3.0.0"
info:
    title: "Marketing"
    description: "The documentation for the StackOne Unified API - MARKETING"
    contact: {}
    version: "1.0.0"
servers:
    - url: "https://api.stackone.com"
paths:
    /unified/proxy:
        post:
            tags:
                - Proxy
            summary: "Proxy Request"
            operationId: "stackone_proxy_request"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                description: "The request body"
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProxyRequestBody'
                required: true
            responses:
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The proxy request was successful."
                "400":
                    description: "Invalid request."
            security:
                - basic: []
            x-speakeasy-name-override: "proxy_request"
    /accounts:
        get:
            tags:
                - Accounts
            summary: "List Accounts"
            operationId: "stackone_list_linked_accounts"
            parameters:
                - name: "provider"
                  in: "query"
                  description: "The provider of the results to fetch"
                  schema:
                    type: "string"
                - name: "origin_owner_id"
                  in: "query"
                  description: "The origin owner identifier of the results to fetch"
                  schema:
                    type: "string"
            responses:
                "400":
                    description: "Invalid request."
                "200":
                    description: "The list of accounts was retrieved."
                    content:
                        application/json:
                            schema:
                                type: "array"
                                items:
                                    $ref: '#/components/schemas/LinkedAccount'
                "403":
                    description: "Forbidden."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-name-override: "list_linked_accounts"
    /accounts/{id}:
        get:
            tags:
                - Accounts
            summary: "Get Account"
            operationId: "stackone_get_account"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
            responses:
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The account with the given identifier was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LinkedAccount'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
            security:
                - basic: []
            x-speakeasy-name-override: "get_account"
        delete:
            tags:
                - Accounts
            summary: "Delete Account"
            operationId: "stackone_delete_account"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
            responses:
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The account with the given identifier was deleted."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LinkedAccount'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "404":
                    description: "The account with the given identifier does not exist"
                "429":
                    description: "Too many requests."
            security:
                - basic: []
            x-speakeasy-name-override: "delete_account"
    /connect_sessions/authenticate:
        post:
            tags:
                - Connect Sessions
            summary: "Authenticate Connect Session"
            operationId: "stackone_authenticate_connect_session"
            requestBody:
                description: "The parameters to authenticate"
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ConnectSessionAuthenticate'
                required: true
            responses:
                "201":
                    description: "The details of the authenticated connect session."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ConnectSession'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-name-override: "authenticate_connect_session"
    /connect_sessions:
        post:
            tags:
                - Connect Sessions
            summary: "Create Connect Session"
            operationId: "stackone_create_connect_session"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ConnectSessionCreate'
                required: true
            responses:
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "201":
                    description: "The details of the connect session created with token."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ConnectSessionToken'
            security:
                - basic: []
            x-speakeasy-name-override: "create_connect_session"
    /accounts/{id}/meta:
        get:
            tags:
                - Accounts
            summary: "Get meta information of the account"
            operationId: "stackone_get_account_meta_info"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
            responses:
                "404":
                    description: "The account with the given identifier does not exist"
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The meta information of the account was retrieved"
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LinkedAccountMeta'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
            security:
                - basic: []
            x-speakeasy-name-override: "get_account_meta_info"
    /unified/marketing/campaigns/{id}:
        get:
            tags:
                - Campaigns
            summary: "Get campaign"
            operationId: "marketing_get_campaign"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,name,created_at,updated_at,description,schedule_type,status,channels,first_sent_at,last_sent_at,tags,messages"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "200":
                    description: "The campaign with the given identifier was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CampaignResult'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "marketing"
            x-speakeasy-name-override: "get_campaign"
    /unified/ats/offers:
        get:
            tags:
                - Offers
            summary: "List Offers"
            operationId: "ats_list_offers"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,application_id,start_date,status,offer_status,salary,currency,created_at,updated_at,offer_history"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
            responses:
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The list of offers was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OffersPaginated'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "list_offers"
        post:
            tags:
                - Offers
            summary: "Creates an offer"
            operationId: "ats_create_offer"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AtsCreateOfferRequestDto'
                required: true
            responses:
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The offer was created successfully."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateOfferResult'
                "400":
                    description: "Invalid request."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "create_offer"
    /unified/crm/contacts:
        get:
            tags:
                - Contacts
            summary: "List Contacts"
            operationId: "crm_list_contacts"
            parameters:
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,first_name,last_name,company_name,emails,phone_numbers,deal_ids,account_ids,created_at,updated_at"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The list of contacts was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ContactsPaginated'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "429":
                    description: "Too many requests."
            security:
                - basic: []
            x-speakeasy-group: "crm"
            x-speakeasy-name-override: "list_contacts"
        post:
            tags:
                - Contacts
            summary: "Creates a new Contact"
            operationId: "crm_create_contact"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CrmCreateContactRequestDto'
                required: true
            responses:
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The contact was successfully created."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ContactResult'
            security:
                - basic: []
            x-speakeasy-group: "crm"
            x-speakeasy-name-override: "create_contact"
    /unified/hris/time_off/{id}:
        get:
            tags:
                - Time Off
            summary: "Get time off request"
            operationId: "hris_get_time_off_request"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,employee_id,name,phone_number,street_1,street_2,city,state,zip_code,country,location_type,created_at,updated_at"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The time off request with the given identifier was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TimeOffResult'
                "400":
                    description: "Invalid request."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "get_time_off_request"
        patch:
            tags:
                - Time Off
            summary: "Update time off request"
            operationId: "hris_update_time_off_request"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/HrisCreateTimeOffRequestDto'
                required: true
            responses:
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "Record updated successfully"
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateTimeOffResult'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "update_time_off_request"
    /unified/marketing/templates/push/{id}:
        get:
            tags:
                - Templates
            summary: "Get push template"
            operationId: "marketing_get_push_template"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,name,messages,created_at,updated_at,tags"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
            responses:
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The push template with the given identifier was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TemplateResult'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
            security:
                - basic: []
            x-speakeasy-group: "marketing"
            x-speakeasy-name-override: "get_push_template"
        patch:
            tags:
                - Templates
            summary: "Update push template"
            operationId: "marketing_update_push_template"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MarketingCreatePushTemplateRequestDto'
                required: true
            responses:
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "Record updated successfully"
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateTemplateResult'
                "400":
                    description: "Invalid request."
            security:
                - basic: []
            x-speakeasy-group: "marketing"
            x-speakeasy-name-override: "update_push_template"
    /unified/ats/interviews/{id}:
        get:
            tags:
                - Interviews
            summary: "Get Interview"
            operationId: "ats_get_interview"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,application_id,interview_stage_id,interview_stage,status,interview_status,interviewer_ids,interview_parts,interviewers,start_at,end_at,meeting_url,created_at,updated_at"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The interview with the given identifier was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InterviewsResult'
                "400":
                    description: "Invalid request."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "get_interview"
    /unified/ats/job_postings/{id}:
        get:
            tags:
                - Job Postings
            summary: "Get Job Posting"
            operationId: "ats_get_job_posting"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,title,locations,internal,status,job_id,content,compensation,employment_type,employment_contract_type,external_url,external_apply_url,questions,updated_at,created_at"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "include"
                  in: "query"
                  description: "The comma separated list of fields that will be included in the response"
                  schema:
                    type: "string"
                    default: ""
                  example: "questions"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
            responses:
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The job with the given identifier was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/JobPostingResult'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "get_job_posting"
    /unified/crm/lists:
        get:
            tags:
                - Lists
            summary: "Get all Lists"
            operationId: "crm_list_lists"
            parameters:
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,name,created_at,updated_at,items,type"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The collection of lists was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListsPaginated'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
            security:
                - basic: []
            x-speakeasy-group: "crm"
            x-speakeasy-name-override: "list_lists"
    /unified/crm/contacts/{id}:
        get:
            tags:
                - Contacts
            summary: "Get Contact"
            operationId: "crm_get_contact"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,first_name,last_name,company_name,emails,phone_numbers,deal_ids,account_ids,created_at,updated_at"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The contact with the given identifier was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ContactResult'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
            security:
                - basic: []
            x-speakeasy-group: "crm"
            x-speakeasy-name-override: "get_contact"
        patch:
            tags:
                - Contacts
            summary: "Update Contact (early access)"
            operationId: "crm_update_contact"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CrmCreateContactRequestDto'
                required: true
            responses:
                "200":
                    description: "The contact was successfully updated."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ContactResult'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "crm"
            x-speakeasy-name-override: "update_contact"
    /unified/marketing/templates/push:
        get:
            tags:
                - Templates
            summary: "List push templates"
            operationId: "marketing_list_push_templates"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,name,messages,created_at,updated_at,tags"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
            responses:
                "200":
                    description: "The list of push templates was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TemplatesPaginated'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "marketing"
            x-speakeasy-name-override: "list_push_templates"
        post:
            tags:
                - Templates
            summary: "Create push template"
            operationId: "marketing_create_push_template"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MarketingCreatePushTemplateRequestDto'
                required: true
            responses:
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "201":
                    description: "Record created successfully."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateTemplateResult'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
            security:
                - basic: []
            x-speakeasy-group: "marketing"
            x-speakeasy-name-override: "create_push_template"
    /unified/ats/rejected_reasons:
        get:
            tags:
                - Rejected Reasons
            summary: "List Rejected Reasons"
            operationId: "ats_list_rejected_reasons"
            parameters:
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,label,type,rejected_reason_type"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The list of rejected reasons was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RejectedReasonsPaginated'
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "list_rejected_reasons"
    /unified/ats/candidates:
        get:
            tags:
                - Candidates
            summary: "List Candidates"
            operationId: "ats_list_candidates"
            parameters:
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,name,first_name,last_name,email,emails,social_links,phone,phone_numbers,company,title,application_ids,hired_at,created_at,updated_at"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The list of candidates was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CandidatesPaginated'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "list_candidates"
        post:
            tags:
                - Candidates
            summary: "Create Candidate (early access)"
            operationId: "ats_create_candidate"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AtsCreateCandidateRequestDto'
                required: true
            responses:
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The candidate was successfully created."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CandidateResult'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
            security:
                - basic: []
            x-speakeasy-name-override: "create_candidate"
            x-speakeasy-group: "ats"
    /unified/ats/jobs/{id}:
        get:
            tags:
                - Jobs
            summary: "Get Job"
            operationId: "ats_get_job"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,code,title,status,job_status,department_ids,location_ids,hiring_team,confidential,created_at,updated_at"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The job with the given identifier was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/JobResult'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "get_job"
    /unified/marketing/campaigns:
        get:
            tags:
                - Campaigns
            summary: "List campaigns"
            operationId: "marketing_list_campaigns"
            parameters:
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,name,created_at,updated_at,description,schedule_type,status,channels,first_sent_at,last_sent_at,tags,messages"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The list of campaigns was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CampaignsPaginated'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
            security:
                - basic: []
            x-speakeasy-group: "marketing"
            x-speakeasy-name-override: "list_campaigns"
    /unified/ats/departments/{id}:
        get:
            tags:
                - Departments
            summary: "Get Department"
            operationId: "ats_get_department"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,name"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The department with the given identifier was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DepartmentResult'
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "get_department"
    /unified/hris/time_off:
        get:
            tags:
                - Time Off
            summary: "List time off requests"
            operationId: "hris_list_time_off_requests"
            parameters:
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,employee_id,name,phone_number,street_1,street_2,city,state,zip_code,country,location_type,created_at,updated_at"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "200":
                    description: "The list of time off requests was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TimeOffPaginated'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-name-override: "list_time_off_requests"
            x-speakeasy-group: "hris"
        post:
            tags:
                - Time Off
            summary: "Creates a time off request"
            operationId: "hris_create_time_off_request"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/HrisCreateTimeOffRequestDto'
                required: true
            responses:
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "201":
                    description: "The time off request was created successfully."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateTimeOffResult'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "create_time_off_request"
    /unified/ats/users:
        get:
            tags:
                - Users
            summary: "List Users"
            operationId: "ats_list_users"
            parameters:
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,first_name,last_name,name,email"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The list of users was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UsersPaginated'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "list_users"
    /unified/ats/candidates/{id}/notes/{subResourceId}:
        get:
            tags:
                - Candidates
            summary: "Get Candidate Note"
            operationId: "ats_get_candidate_note"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "subResourceId"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,content,visibility,createdAt,updatedAt,deletedAt"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "200":
                    description: "The note with the given identifier related to the candidate with the given identifier was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoteResult'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "get_candidate_note"
    /unified/ats/offers/{id}:
        get:
            tags:
                - Offers
            summary: "Get Offer"
            operationId: "ats_get_offer"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,application_id,start_date,status,offer_status,salary,currency,created_at,updated_at,offer_history"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
            responses:
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The offer with the given identifier was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OffersResult'
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "get_offer"
    /unified/crm/accounts/{id}:
        get:
            tags:
                - Accounts
            summary: "Get Account"
            operationId: "crm_get_account"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,owner_id,name,description,industry,annual_revenue,website,addresses,phone_numbers,created_at,updated_at"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The account with the given identifier was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AccountResult'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
            security:
                - basic: []
            x-speakeasy-group: "crm"
            x-speakeasy-name-override: "get_account"
    /unified/marketing/templates/omni_channel:
        get:
            tags:
                - Templates
            summary: "List omni-channel templates"
            operationId: "marketing_list_omni_channel_templates"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,name,messages,created_at,updated_at,tags"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
            responses:
                "200":
                    description: "The list of omni-channel templates was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TemplatesPaginated'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "marketing"
            x-speakeasy-name-override: "list_omni_channel_templates"
        post:
            tags:
                - Templates
            summary: "Create omni-channel template"
            operationId: "marketing_create_omni_channel_template"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MarketingCreateTemplateRequestDto'
                required: true
            responses:
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "201":
                    description: "Record created successfully."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateTemplateResult'
                "400":
                    description: "Invalid request."
            security:
                - basic: []
            x-speakeasy-group: "marketing"
            x-speakeasy-name-override: "create_omni_channel_template"
    /unified/ats/job_postings:
        get:
            tags:
                - Job Postings
            summary: "List Job Postings"
            operationId: "ats_list_job_postings"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,title,locations,internal,status,job_id,content,compensation,employment_type,employment_contract_type,external_url,external_apply_url,questions,updated_at,created_at"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "include"
                  in: "query"
                  description: "The comma separated list of fields that will be included in the response"
                  schema:
                    type: "string"
                    default: ""
                  example: "questions"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
            responses:
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The list of job postings was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/JobPostingsPaginated'
                "400":
                    description: "Invalid request."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "list_job_postings"
    /unified/ats/users/{id}:
        get:
            tags:
                - Users
            summary: "Get User"
            operationId: "ats_get_user"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,first_name,last_name,name,email"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The user with the given identifier was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserResult'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "get_user"
    /unified/hris/companies:
        get:
            tags:
                - Companies
            summary: "List Companies"
            operationId: "hris_list_companies"
            parameters:
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,full_name,display_name,created_at,updated_at"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The list of Companies was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CompaniesPaginated'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "list_companies"
    /unified/hris/locations:
        get:
            tags:
                - Locations
            summary: "List locations"
            operationId: "hris_list_locations"
            parameters:
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,employee_id,name,phone_number,street_1,street_2,city,state,zip_code,country,location_type,created_at,updated_at"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The list of Locations was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HRISLocationsPaginated'
                "400":
                    description: "Invalid request."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "list_locations"
    /unified/ats/rejected_reasons/{id}:
        get:
            tags:
                - Rejected Reasons
            summary: "Get Rejected Reason"
            operationId: "ats_get_rejected_reason"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,label,type,rejected_reason_type"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "501":
                    description: "This functionality is not implemented."
                "400":
                    description: "Invalid request."
                "200":
                    description: "The rejected reason with the given identifier was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RejectedReasonResult'
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "get_rejected_reason"
    /unified/ats/jobs:
        get:
            tags:
                - Jobs
            summary: "List Jobs"
            operationId: "ats_list_jobs"
            parameters:
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,code,title,status,job_status,department_ids,location_ids,hiring_team,confidential,created_at,updated_at"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        filter[eq][name]: Luke
                        custom_filter_param: "123"
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The list of jobs was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/JobsPaginated'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "list_jobs"
    /unified/ats/applications:
        get:
            tags:
                - Applications
            summary: "List Applications"
            operationId: "ats_list_applications"
            parameters:
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,candidate_id,job_id,interview_stage,interview_stage_id,rejected_reason,rejected_reason_id,rejected_reason,rejected_reason_ids,rejected_reasons,rejected_at,location_id,location_ids,status,application_status,questionnaire,attachments,created_at,updated_at,candidate"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The list of applications was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApplicationsPaginated'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "list_applications"
        post:
            tags:
                - Applications
            summary: "Create Application (early access)"
            operationId: "ats_create_application"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AtsCreateApplicationRequestDto'
                required: true
            responses:
                "501":
                    description: "This functionality is not implemented."
                "201":
                    description: "The application was created successfully."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateResult'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "create_application"
    /unified/ats/locations:
        get:
            tags:
                - Locations
            summary: "List locations"
            operationId: "ats_list_locations"
            parameters:
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,name"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The list of locations was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ATSLocationsPaginated'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "list_locations"
    /unified/marketing/templates/omni_channel/{id}:
        get:
            tags:
                - Templates
            summary: "Get omni-channel template"
            operationId: "marketing_get_omni_channel_template"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,name,messages,created_at,updated_at,tags"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
            responses:
                "400":
                    description: "Invalid request."
                "429":
                    description: "Too many requests."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The omni-channel template with the given identifier was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TemplateResult'
            security:
                - basic: []
            x-speakeasy-group: "marketing"
            x-speakeasy-name-override: "get_omni_channel_template"
        patch:
            tags:
                - Templates
            summary: "Update omni-channel template"
            operationId: "marketing_update_omni_channel_template"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MarketingCreateTemplateRequestDto'
                required: true
            responses:
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "Record updated successfully"
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateTemplateResult'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
            security:
                - basic: []
            x-speakeasy-group: "marketing"
            x-speakeasy-name-override: "update_omni_channel_template"
    /unified/hris/locations/{id}:
        get:
            tags:
                - Locations
            summary: "Get Location"
            operationId: "hris_get_location"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,employee_id,name,phone_number,street_1,street_2,city,state,zip_code,country,location_type,created_at,updated_at"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The Location with the given identifier was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HRISLocationResult'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "get_location"
    /unified/ats/departments:
        get:
            tags:
                - Departments
            summary: "List Departments"
            operationId: "ats_list_departments"
            parameters:
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,name"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The list of departments was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DepartmentsPaginated'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "list_departments"
    /unified/ats/interview_stages:
        get:
            tags:
                - Interview Stages
            summary: "List Interview Stages"
            operationId: "ats_list_interview_stages"
            parameters:
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,name,order,created_at,updated_at"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The list of interview-stages was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InterviewStagesPaginated'
                "400":
                    description: "Invalid request."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "list_interview_stages"
    /unified/hris/employees/{id}:
        get:
            tags:
                - Employees
            summary: "Get Employee"
            operationId: "hris_get_employee"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,first_name,last_name,name,display_name,gender,ethnicity,date_of_birth,birthday,marital_status,avatar_url,avatar,personal_email,personal_phone_number,work_email,work_phone_number,job_title,department,manager_id,hire_date,start_date,tenure,work_anniversary,employment_type,employment_contract_type,employment_status,termination_date,company_name,home_location,work_location,employments,custom_fields,created_at,updated_at"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "expand"
                  in: "query"
                  description: "The comma separated list of fields that will be expanded in the response"
                  schema:
                    type: "string"
                    default: ""
                  example: "company,employments,work_location,home_location,custom_fields"
                - name: "include"
                  in: "query"
                  description: "The comma separated list of fields that will be included in the response"
                  schema:
                    type: "string"
                    default: ""
                  example: "avatar_url,avatar,custom_fields"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "501":
                    description: "This functionality is not implemented."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "200":
                    description: "The employee with the given identifier was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EmployeeResult'
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "get_employee"
        patch:
            tags:
                - Employees
            summary: "Updates an employee"
            operationId: "hris_update_employee"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/HrisCreateEmployeeRequestDto'
                required: true
            responses:
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "Record updated successfully"
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateEmployeeResult'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "update_employee"
    /unified/ats/interviews:
        get:
            tags:
                - Interviews
            summary: "List Interviews"
            operationId: "ats_list_interviews"
            parameters:
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,application_id,interview_stage_id,interview_stage,status,interview_status,interviewer_ids,interview_parts,interviewers,start_at,end_at,meeting_url,created_at,updated_at"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The list of interviews was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InterviewsPaginated'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "list_interviews"
    /unified/ats/candidates/{id}/notes:
        get:
            tags:
                - Candidates
            summary: "List Candidate Notes"
            operationId: "ats_list_candidate_notes"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,content,visibility,createdAt,updatedAt,deletedAt"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "200":
                    description: "The notes related to the candidate with the given identifier was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotesPaginated'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "list_candidate_notes"
        post:
            tags:
                - Candidates
            summary: "Create Candidate Note"
            operationId: "ats_create_candidate_note"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AtsCreateNotesRequestDto'
                required: true
            responses:
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "201":
                    description: "Record created successfully."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateCandidateNoteResult'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "create_candidate_note"
    /unified/ats/locations/{id}:
        get:
            tags:
                - Locations
            summary: "Get Location"
            operationId: "ats_get_location"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,name"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The location with the given identifier was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ATSLocationResult'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "get_location"
    /unified/ats/applications/{id}/offers:
        get:
            tags:
                - Applications
            summary: "List Application Offers"
            operationId: "ats_list_applications_offers"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,application_id,start_date,status,offer_status,salary,currency,created_at,updated_at,offer_history"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The offers related to the application with the given identifier were retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OffersPaginated'
                "400":
                    description: "Invalid request."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "list_applications_offers"
    /unified/crm/lists/{id}:
        get:
            tags:
                - Lists
            summary: "Get List"
            operationId: "crm_get_list"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,name,created_at,updated_at,items,type"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The list with the given identifier was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListResult'
                "400":
                    description: "Invalid request."
            security:
                - basic: []
            x-speakeasy-group: "crm"
            x-speakeasy-name-override: "get_list"
    /unified/ats/candidates/{id}:
        get:
            tags:
                - Candidates
            summary: "Get Candidate"
            operationId: "ats_get_candidate"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,name,first_name,last_name,email,emails,social_links,phone,phone_numbers,company,title,application_ids,hired_at,created_at,updated_at"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The candidate with the given identifier was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CandidateResult'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "get_candidate"
        patch:
            tags:
                - Candidates
            summary: "Update Candidate (early access)"
            operationId: "ats_update_candidate"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AtsUpdateCandidatesRequestDto'
                required: true
            responses:
                "200":
                    description: "The candidate was successfully updated."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CandidateResult'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "update_candidate"
    /unified/hris/companies/{id}:
        get:
            tags:
                - Companies
            summary: "Get Company"
            operationId: "hris_get_company"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,full_name,display_name,created_at,updated_at"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The Company with the given identifier was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CompanyResult'
            security:
                - basic: []
            x-speakeasy-name-override: "get_company"
            x-speakeasy-group: "hris"
    /unified/hris/employees/{id}/time_off/{subResourceId}:
        get:
            tags:
                - Employees
            summary: "Get Employees Time Off Request"
            operationId: "hris_get_employees_time_off_request"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "subResourceId"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,employee_id,name,phone_number,street_1,street_2,city,state,zip_code,country,location_type,created_at,updated_at"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
            responses:
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The time off request related to the employee with the given identifiers was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TimeOffResult'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "get_employees_time_off_request"
    /unified/marketing/templates/email/{id}:
        get:
            tags:
                - Templates
            summary: "Get email template"
            operationId: "marketing_get_email_template"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,name,messages,created_at,updated_at,tags"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
            responses:
                "200":
                    description: "The email template with the given identifier was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TemplateResult'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "marketing"
            x-speakeasy-name-override: "get_email_template"
        patch:
            tags:
                - Templates
            summary: "Update email template"
            operationId: "marketing_update_email_template"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MarketingCreateEmailTemplateRequestDto'
                required: true
            responses:
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "Record updated successfully"
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateTemplateResult'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
            security:
                - basic: []
            x-speakeasy-group: "marketing"
            x-speakeasy-name-override: "update_email_template"
    /unified/hris/employments:
        get:
            tags:
                - Employments
            summary: "List Employments"
            operationId: "hris_list_employments"
            parameters:
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,employee_id,job_title,pay_rate,pay_period,pay_frequency,pay_currency,effective_date,employment_type,employment_contract_type,created_at,updated_at"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The list of Employments was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EmploymentsPaginated'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "list_employments"
    /unified/ats/applications/{id}:
        get:
            tags:
                - Applications
            summary: "Get Application"
            operationId: "ats_get_application"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,candidate_id,job_id,interview_stage,interview_stage_id,rejected_reason,rejected_reason_id,rejected_reason,rejected_reason_ids,rejected_reasons,rejected_at,location_id,location_ids,status,application_status,questionnaire,attachments,created_at,updated_at,candidate"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The application with the given identifier was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApplicationResult'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
            security:
                - basic: []
            x-speakeasy-name-override: "get_application"
            x-speakeasy-group: "ats"
        patch:
            tags:
                - Applications
            summary: "Update Application (early access)"
            operationId: "ats_update_application"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AtsUpdateApplicationRequestDto'
                required: true
            responses:
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "Record updated successfully."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateResult'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
            security:
                - basic: []
            x-speakeasy-name-override: "update_application"
            x-speakeasy-group: "ats"
    /unified/ats/applications/{id}/offers/{subResourceId}:
        get:
            tags:
                - Applications
            summary: "Get Application Offer"
            operationId: "ats_get_application_offer"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "subResourceId"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,application_id,start_date,status,offer_status,salary,currency,created_at,updated_at,offer_history"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "200":
                    description: "The offer related to the application with the given identifiers was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OffersResult'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "get_application_offer"
    /unified/crm/accounts:
        get:
            tags:
                - Accounts
            summary: "List Accounts"
            operationId: "crm_list_accounts"
            parameters:
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,owner_id,name,description,industry,annual_revenue,website,addresses,phone_numbers,created_at,updated_at"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The list of accounts was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AccountsPaginated'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "429":
                    description: "Too many requests."
            security:
                - basic: []
            x-speakeasy-group: "crm"
            x-speakeasy-name-override: "list_accounts"
    /unified/marketing/templates/email:
        get:
            tags:
                - Templates
            summary: "List email templates"
            operationId: "marketing_list_email_templates"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,name,messages,created_at,updated_at,tags"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
            responses:
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The list of email templates was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TemplatesPaginated'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
            security:
                - basic: []
            x-speakeasy-group: "marketing"
            x-speakeasy-name-override: "list_email_templates"
        post:
            tags:
                - Templates
            summary: "Create email template"
            operationId: "marketing_create_email_template"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MarketingCreateEmailTemplateRequestDto'
                required: true
            responses:
                "201":
                    description: "Record created successfully."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateTemplateResult'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "marketing"
            x-speakeasy-name-override: "create_email_template"
    /unified/hris/employments/{id}:
        get:
            tags:
                - Employments
            summary: "Get Employment"
            operationId: "hris_get_employment"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,employee_id,job_title,pay_rate,pay_period,pay_frequency,pay_currency,effective_date,employment_type,employment_contract_type,created_at,updated_at"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        filter[eq][name]: Luke
                        custom_filter_param: "123"
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The Employment with the given identifier was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EmploymentResult'
                "400":
                    description: "Invalid request."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "get_employment"
    /unified/hris/employees:
        get:
            tags:
                - Employees
            summary: "List Employees"
            operationId: "hris_list_employees"
            parameters:
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,first_name,last_name,name,display_name,gender,ethnicity,date_of_birth,birthday,marital_status,avatar_url,avatar,personal_email,personal_phone_number,work_email,work_phone_number,job_title,department,manager_id,hire_date,start_date,tenure,work_anniversary,employment_type,employment_contract_type,employment_status,termination_date,company_name,home_location,work_location,employments,custom_fields,created_at,updated_at"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "expand"
                  in: "query"
                  description: "The comma separated list of fields that will be expanded in the response"
                  schema:
                    type: "string"
                    default: ""
                  example: "company,employments,work_location,home_location,custom_fields"
                - name: "include"
                  in: "query"
                  description: "The comma separated list of fields that will be included in the response"
                  schema:
                    type: "string"
                    default: ""
                  example: "avatar_url,avatar,custom_fields"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The list of employees was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EmployeesPaginated'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "list_employees"
        post:
            tags:
                - Employees
            summary: "Creates an employee"
            operationId: "hris_create_employee"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/HrisCreateEmployeeRequestDto'
                required: true
            responses:
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "201":
                    description: "The employee was created successfully."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateEmployeeResult'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "create_employee"
    /unified/hris/employees/{id}/time_off:
        get:
            tags:
                - Employees
            summary: "List Employee Time Off Requests"
            operationId: "hris_list_employee_time_off_requests"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,employee_id,name,phone_number,street_1,street_2,city,state,zip_code,country,location_type,created_at,updated_at"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
            responses:
                "200":
                    description: "The time off requests related to the employee with the given identifier were retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TimeOffPaginated'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-name-override: "list_employee_time_off_requests"
            x-speakeasy-group: "hris"
        post:
            tags:
                - Employees
            summary: "Create Employee Time Off Request"
            operationId: "hris_create_employee_time_off_request"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/HrisCreateTimeOffRequestDto'
                required: true
            responses:
                "201":
                    description: "Record created successfully."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateTimeOffResult'
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "501":
                    description: "This functionality is not implemented."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "create_employee_time_off_request"
    /unified/ats/interview_stages/{id}:
        get:
            tags:
                - Interview Stages
            summary: "Get Interview Stage"
            operationId: "ats_get_interview_stage"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  schema:
                    type: "string"
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  schema:
                    type: "string"
                    default: "25"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  schema:
                    type: "boolean"
                    default: false
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  schema:
                    type: "string"
                    default: ""
                  example: "id,name,order,created_at,updated_at"
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  schema:
                    type: "string"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  schema:
                    type: "string"
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with \"proxy\" key"
                  style: "deepObject"
                  explode: true
                  schema:
                    type: "object"
                    additionalProperties: true
                  example:
                    proxy:
                        custom_filter_param: "123"
                        filter[eq][name]: Luke
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
                "200":
                    description: "The interview-stage with the given identifier was retrieved."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InterviewStageResult'
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "get_interview_stage"
components:
    schemas:
        LinkedAccount:
            type: "object"
            properties:
                provider:
                    type: "string"
                updated_at:
                    type: "string"
                    format: "date-time"
                origin_owner_name:
                    type: "string"
                id:
                    type: "string"
                origin_username:
                    type: "string"
                active:
                    type: "boolean"
                origin_owner_id:
                    type: "string"
                credentials:
                    type: "object"
                created_at:
                    type: "string"
                    format: "date-time"
            required:
                - id
                - provider
                - active
                - origin_owner_id
                - origin_owner_name
                - origin_username
                - created_at
                - updated_at
        ConnectSession:
            type: "object"
            properties:
                created_at:
                    type: "string"
                    format: "date-time"
                project_id:
                    type: "string"
                provider:
                    type: "string"
                organization_id:
                    type: "string"
                categories:
                    type: "array"
                    items:
                        type: "string"
                        enum:
                            - ats
                            - hris
                            - hris-legacy
                            - crm
                            - marketing
                            - stackone
                    example:
                        - ats
                        - hris
                        - hrisLegacy
                        - crm
                        - marketing
                        - stackOne
                id:
                    type: "string"
                origin_owner_id:
                    type: "string"
                origin_owner_name:
                    type: "string"
                origin_username:
                    type: "string"
            required:
                - id
                - organization_id
                - project_id
                - provider
                - origin_owner_id
                - origin_owner_name
                - created_at
        ConnectSessionAuthenticate:
            type: "object"
            properties:
                token:
                    type: "string"
                    description: "The token to authenticate with"
            required:
                - token
        ConnectSessionCreate:
            type: "object"
            properties:
                origin_username:
                    type: "string"
                    description: "The origin username"
                expires_in:
                    type: "number"
                    description: "How long the session should be valid for in seconds"
                    default: 1800
                metadata:
                    type: "object"
                    description: "The metadata for the connection"
                categories:
                    type: "array"
                    items:
                        type: "string"
                        enum:
                            - ats
                            - hris
                            - hris-legacy
                            - crm
                            - marketing
                            - stackone
                    description: "The categories of the provider to connect to"
                    example:
                        - ats
                        - hris
                        - hrisLegacy
                        - crm
                        - marketing
                        - stackOne
                provider:
                    type: "string"
                    description: "The provider to connect to"
                origin_owner_id:
                    type: "string"
                    description: "The origin owner identifier"
                origin_owner_name:
                    type: "string"
                    description: "The origin owner name"
            required:
                - origin_owner_id
                - origin_owner_name
        ProxyRequestBody:
            type: "object"
            properties:
                body:
                    type: "object"
                    description: "The body of the request"
                url:
                    type: "string"
                    description: "The base url of the request"
                    default: ""
                    example: "https://api.sample-integration.com/v1"
                method:
                    type: "string"
                    enum:
                        - get
                        - post
                        - put
                        - delete
                        - patch
                        - job
                    description: "The method of the request"
                    default: "get"
                path:
                    type: "string"
                    description: "The path of the request including any query paramters"
                    default: ""
                    example: "/employees/directory"
                headers:
                    type: "object"
                    description: "The headers to send in the request"
                    example:
                        Accept: application/json
        LinkedAccountMeta:
            type: "object"
            properties:
                category:
                    type: "string"
                    enum:
                        - ats
                        - hris
                        - hris-legacy
                        - crm
                        - marketing
                        - stackone
                models:
                    type: "object"
                provider:
                    type: "string"
            required:
                - provider
                - category
                - models
        ConnectSessionToken:
            type: "object"
            properties:
                id:
                    type: "string"
                categories:
                    type: "array"
                    items:
                        type: "string"
                        enum:
                            - ats
                            - hris
                            - hris-legacy
                            - crm
                            - marketing
                            - stackone
                    example:
                        - ats
                        - hris
                        - hrisLegacy
                        - crm
                        - marketing
                        - stackOne
                created_at:
                    type: "string"
                    format: "date-time"
                token:
                    type: "string"
                project_id:
                    type: "string"
                provider:
                    type: "string"
                origin_owner_name:
                    type: "string"
                origin_username:
                    type: "string"
                origin_owner_id:
                    type: "string"
                organization_id:
                    type: "string"
            required:
                - id
                - organization_id
                - project_id
                - provider
                - origin_owner_id
                - origin_owner_name
                - created_at
                - token
        ATSLocation:
            type: "object"
            properties:
                name:
                    type: "string"
                id:
                    type: "string"
            required:
                - id
                - name
        MarketingCreatePushTemplateRequestDto:
            type: "object"
            properties:
                messages:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/PushMessages'
                id:
                    type: "string"
                name:
                    type: "string"
                tags:
                    type: "array"
                    items:
                        type: "string"
        MessageTypeEnum:
            type: "object"
            properties:
                source_value:
                    type: "string"
                value:
                    type: "string"
                    enum:
                        - email
                        - sms
                        - web_push
                        - ios_push
                        - android_push
                        - app_push
                        - omni_channel
                        - unknown
                        - unmapped_value
            required:
                - value
                - source_value
        InterviewPart:
            type: "object"
            properties:
                created_at:
                    type: "string"
                    format: "date-time"
                updated_at:
                    type: "string"
                    format: "date-time"
                id:
                    type: "string"
                interviewer_ids:
                    type: "array"
                    items:
                        type: "string"
                meeting_url:
                    type: "string"
                meeting_provider:
                    type: "string"
        Questionnaire:
            type: "object"
            properties:
                answers:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/Answer'
                id:
                    type: "string"
            required:
                - answers
        RejectedReasonsPaginated:
            type: "object"
            properties:
                raw:
                    type: "string"
                next_page:
                    type: "string"
                data:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/RejectedReason'
            required:
                - next_page
                - data
        UserResult:
            type: "object"
            properties:
                raw:
                    type: "string"
                data:
                    $ref: '#/components/schemas/User'
            required:
                - data
                - raw
        Contact:
            type: "object"
            properties:
                account_ids:
                    type: "array"
                    items:
                        type: "string"
                    description: "List of associated account IDs"
                    example:
                        - account-123
                        - account-456
                last_name:
                    type: "string"
                    description: "The contact last name"
                    example: "Wozniak"
                company_name:
                    type: "string"
                    description: "The contact company name"
                    example: "Apple Inc."
                deal_ids:
                    type: "array"
                    items:
                        type: "string"
                    description: "List of associated deal IDs"
                    example:
                        - deal-001
                        - deal-002
                emails:
                    type: "array"
                    items:
                        type: "string"
                    description: "List of contact email addresses"
                    example:
                        - steve@apple.com
                first_name:
                    type: "string"
                    description: "The contact first name"
                    example: "Steve"
                id:
                    type: "string"
                    description: "The contact ID"
                    example: "1234-5678"
                phone_numbers:
                    type: "array"
                    items:
                        type: "string"
                    description: "List of contact phone numbers"
                    example:
                        - 123-456-7890
                created_at:
                    type: "string"
                    description: "Timestamp when the contact was created"
                    example: "2023-08-24T10:00:00Z"
                updated_at:
                    type: "string"
                    description: "Timestamp when the contact was last updated"
                    example: "2023-08-25T15:30:00Z"
        OffersPaginated:
            type: "object"
            properties:
                data:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/Offer'
                raw:
                    type: "string"
                next_page:
                    type: "string"
            required:
                - next_page
                - data
        JobStatusEnum:
            type: "object"
            properties:
                source_value:
                    type: "string"
                value:
                    type: "string"
                    enum:
                        - published
                        - draft
                        - pending
                        - internal
                        - archived
                        - closed
                        - open
                        - unmapped_value
            required:
                - value
                - source_value
        Questions:
            type: "object"
            properties:
                id:
                    type: "string"
                name:
                    type: "string"
                type:
                    type: "string"
                text:
                    type: "string"
                required:
                    type: "boolean"
                multiple_choice_answers:
                    type: "array"
                    items:
                        type: "string"
        ContactResult:
            type: "object"
            properties:
                raw:
                    type: "string"
                data:
                    $ref: '#/components/schemas/Contact'
            required:
                - data
        CandidateResult:
            type: "object"
            properties:
                raw:
                    type: "string"
                data:
                    $ref: '#/components/schemas/Candidate'
            required:
                - data
        Department:
            type: "object"
            properties:
                name:
                    type: "string"
                id:
                    type: "string"
            required:
                - id
                - name
        EmployeeResult:
            type: "object"
            properties:
                raw:
                    type: "string"
                data:
                    $ref: '#/components/schemas/Employee'
            required:
                - data
        CompaniesPaginated:
            type: "object"
            properties:
                raw:
                    type: "string"
                next_page:
                    type: "string"
                data:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/Company'
            required:
                - next_page
                - data
        PayPeriodEnum:
            type: "object"
            properties:
                value:
                    type: "string"
                    enum:
                        - hour
                        - day
                        - week
                        - every_two_weeks
                        - month
                        - quarter
                        - every_six_months
                        - year
                        - unmapped_value
                source_value:
                    type: "string"
            required:
                - value
                - source_value
        Application:
            type: "object"
            properties:
                job_id:
                    type: "string"
                rejected_reason_ids:
                    type: "array"
                    items:
                        type: "string"
                location_id:
                    type: "string"
                rejected_reasons:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/RejectedReason'
                updated_at:
                    type: "string"
                application_status:
                    $ref: '#/components/schemas/ApplicationStatusEnum'
                attachments:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/ApplicationAttachment'
                candidate:
                    $ref: '#/components/schemas/ApplicationCandidate'
                created_at:
                    type: "string"
                candidate_id:
                    type: "string"
                questionnaire:
                    $ref: '#/components/schemas/Questionnaire'
                rejected_at:
                    type: "string"
                location_ids:
                    type: "array"
                    items:
                        type: "string"
                interview_stage_id:
                    type: "string"
                id:
                    type: "string"
                interview_stage:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/InterviewStage'
            required:
                - application_status
                - questionnaire
                - candidate
        Content:
            type: "object"
            properties:
                html:
                    type: "string"
                plain:
                    type: "string"
        CreateOfferResult:
            type: "object"
            properties:
                timestamp:
                    type: "string"
                    format: "date-time"
                statusCode:
                    type: "number"
                message:
                    type: "string"
            required:
                - statusCode
                - message
                - timestamp
        CandidateEmail:
            type: "object"
            properties:
                value:
                    type: "string"
                type:
                    type: "string"
            required:
                - type
                - value
        CreateTimeOffResult:
            type: "object"
            properties:
                message:
                    type: "string"
                timestamp:
                    type: "string"
                    format: "date-time"
                statusCode:
                    type: "number"
            required:
                - statusCode
                - message
                - timestamp
        Employment:
            type: "object"
            properties:
                pay_rate:
                    type: "string"
                    description: "The pay rate for the employee"
                    example: "40.00"
                pay_frequency:
                    allOf:
                        - $ref: '#/components/schemas/PayFrequencyEnum'
                    description: "The pay frequency"
                    example: "hourly"
                employee_id:
                    type: "string"
                    description: "The employee ID associated with this employment"
                    example: "1687-3"
                effective_date:
                    type: "string"
                    format: "date-time"
                    description: "The effective date of the employment contract"
                    example: "2023-07-01"
                job_title:
                    type: "string"
                    description: "The job title of the employee"
                    example: "Software Engineer"
                pay_period:
                    allOf:
                        - $ref: '#/components/schemas/PayPeriodEnum'
                    description: "The pay period"
                    example: "monthly"
                updated_at:
                    type: "string"
                    description: "The updated_at date"
                    example: "2023-06-14T01:00:00Z"
                employment_type:
                    allOf:
                        - $ref: '#/components/schemas/EmploymentTypeEnum'
                    description: "The type of employment (e.g., contractor, permanent)"
                    example: "permanent"
                employment_contract_type:
                    allOf:
                        - $ref: '#/components/schemas/EmploymentScheduleTypeEnum'
                    description: "The employment work schedule type (e.g., full-time, part-time)"
                    example: "full_time"
                created_at:
                    type: "string"
                    description: "The created_at date"
                    example: "2023-06-14T01:00:00Z"
                id:
                    type: "string"
                    description: "The unique ID of the employment"
                    example: "123456"
                pay_currency:
                    type: "string"
                    description: "The currency used for pay"
                    example: "USD"
            required:
                - employee_id
        CampaignResult:
            type: "object"
            properties:
                raw:
                    type: "string"
                data:
                    $ref: '#/components/schemas/Campaign'
            required:
                - data
        TimeOff:
            type: "object"
            properties:
                approver_id:
                    type: "string"
                    description: "The approver ID"
                    example: "1687-4"
                start_date:
                    type: "string"
                    description: "The start date of the time off request"
                id:
                    type: "string"
                    description: "The unique ID of the time off request"
                    example: "123456"
                employee_id:
                    type: "string"
                    description: "The employee ID"
                    example: "1687-3"
                end_date:
                    type: "string"
                    description: "The end date of the time off request"
                created_date:
                    type: "string"
                    description: "The created date of the time off request"
                status:
                    allOf:
                        - $ref: '#/components/schemas/TimeOffStatusEnum'
                    description: "The status of the time off request"
                type:
                    allOf:
                        - $ref: '#/components/schemas/TimeOffTypeEnum'
                    description: "The type of the time off request"
                updated_date:
                    type: "string"
                    description: "The updated date of the time off request"
        Company:
            type: "object"
            properties:
                name:
                    type: "string"
                id:
                    type: "string"
                updated_at:
                    type: "string"
                    description: "The updated_at date"
                    example: "2023-06-14T01:00:00Z"
                display_name:
                    type: "string"
                created_at:
                    type: "string"
                    description: "The created_at date"
                    example: "2023-06-14T01:00:00Z"
        JobResult:
            type: "object"
            properties:
                raw:
                    type: "string"
                job:
                    $ref: '#/components/schemas/Job'
            required:
                - job
        ContactsPaginated:
            type: "object"
            properties:
                raw:
                    type: "string"
                next_page:
                    type: "string"
                data:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/Contact'
            required:
                - next_page
                - data
        AccountResult:
            type: "object"
            properties:
                raw:
                    type: "string"
                data:
                    $ref: '#/components/schemas/Account'
            required:
                - data
        Image:
            type: "object"
            properties:
                base64:
                    type: "string"
                url:
                    type: "string"
        LocationTypeEnum:
            type: "object"
            properties:
                source_value:
                    type: "string"
                value:
                    type: "string"
                    enum:
                        - home
                        - work
                        - unmapped_value
            required:
                - value
                - source_value
        Note:
            type: "object"
            properties:
                created_at:
                    type: "string"
                updated_at:
                    type: "string"
                deleted_at:
                    type: "string"
                id:
                    type: "string"
                content:
                    type: "array"
                    items:
                        type: "string"
                visibility:
                    $ref: '#/components/schemas/NotesVisibilityEnum'
            required:
                - id
                - content
                - visibility
                - created_at
                - updated_at
                - deleted_at
        CreateResult:
            type: "object"
            properties:
                timestamp:
                    type: "string"
                    format: "date-time"
                statusCode:
                    type: "number"
                    example: 200
                message:
                    type: "string"
                    example: "Record created successfully."
            required:
                - statusCode
                - message
                - timestamp
        AtsCreateNotesRequestDto:
            type: "object"
            properties:
                visibility:
                    $ref: '#/components/schemas/NotesVisibilityEnum'
                content:
                    type: "array"
                    items:
                        type: "string"
            required:
                - content
                - visibility
        Candidate:
            type: "object"
            properties:
                created_at:
                    type: "string"
                    format: "date-time"
                email:
                    type: "string"
                id:
                    type: "string"
                emails:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/CandidateEmail'
                company:
                    type: "string"
                hired_at:
                    type: "string"
                    format: "date-time"
                last_name:
                    type: "string"
                title:
                    type: "string"
                social_links:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/SocialLink'
                name:
                    type: "string"
                application_ids:
                    type: "array"
                    items:
                        type: "string"
                first_name:
                    type: "string"
                updated_at:
                    type: "string"
                    format: "date-time"
                phone:
                    type: "string"
            required:
                - id
                - name
                - first_name
                - last_name
                - email
                - emails
                - social_links
                - title
                - created_at
                - updated_at
        ATSLocationsPaginated:
            type: "object"
            properties:
                raw:
                    type: "string"
                next_page:
                    type: "string"
                data:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/ATSLocation'
            required:
                - next_page
                - data
        RejectedReasonTypeEnum:
            type: "object"
            properties:
                source_value:
                    type: "string"
                value:
                    type: "string"
                    enum:
                        - rejected_by_candidate
                        - rejected_by_organization
                        - other
                        - unknown
                        - unmapped_value
            required:
                - value
                - source_value
        ListTypeEnum:
            type: "object"
            properties:
                source_value:
                    type: "string"
                value:
                    type: "string"
                    enum:
                        - contacts
                        - companies
                        - unmapped_value
            required:
                - value
                - source_value
        MarketingCreateEmailTemplateRequestDto:
            type: "object"
            properties:
                id:
                    type: "string"
                name:
                    type: "string"
                tags:
                    type: "array"
                    items:
                        type: "string"
                messages:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/EmailMessages'
        ListsPaginated:
            type: "object"
            properties:
                data:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/List'
                raw:
                    type: "string"
                next_page:
                    type: "string"
            required:
                - next_page
                - data
        MarketingCreateTemplateRequestDto:
            type: "object"
            properties:
                tags:
                    type: "array"
                    items:
                        type: "string"
                messages:
                    $ref: '#/components/schemas/Message'
                id:
                    type: "string"
                name:
                    type: "string"
        AtsUpdateCandidatesRequestDto:
            type: "object"
            properties:
                emails:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/CandidateEmail'
                phone:
                    type: "string"
                company:
                    type: "string"
                title:
                    type: "string"
                application_ids:
                    type: "array"
                    items:
                        type: "string"
                name:
                    type: "string"
                first_name:
                    type: "string"
                last_name:
                    type: "string"
        EmployeesPaginated:
            type: "object"
            properties:
                data:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/Employee'
                raw:
                    type: "string"
                next_page:
                    type: "string"
            required:
                - next_page
                - data
        UpdateResult:
            type: "object"
            properties:
                timestamp:
                    type: "string"
                    format: "date-time"
                statusCode:
                    type: "number"
                    example: 200
                message:
                    type: "string"
                    example: "Record updated successfully."
            required:
                - statusCode
                - message
                - timestamp
        HrisLocationsCreateRequestDto:
            type: "object"
            properties:
                country:
                    allOf:
                        - $ref: '#/components/schemas/CountryCodeEnum'
                    description: "The country code"
                    example: "GB"
                city:
                    type: "string"
                    description: "The city where the location is situated"
                    example: "Grantham"
                state:
                    allOf:
                        - $ref: '#/components/schemas/ISO3166_2SubDivisionEnum'
                    description: "The ISO3166-2 sub division where the location is situated"
                    example: "GB-LIN"
                name:
                    type: "string"
                    description: "The name of the location"
                    example: "Woolsthorpe Manor"
                phone_number:
                    type: "string"
                    description: "The phone number of the location"
                    example: "+44 1476 860 364"
                street_1:
                    type: "string"
                    description: "The first line of the address"
                    example: "Water Lane"
                street_2:
                    type: "string"
                    description: "The second line of the address"
                    example: "Woolsthorpe by Colsterworth"
                zip_code:
                    type: "string"
                    description: "The ZIP code/Postal code of the location"
                    example: "NG33 5NR"
        EmploymentResult:
            type: "object"
            properties:
                data:
                    $ref: '#/components/schemas/Employment'
                raw:
                    type: "string"
            required:
                - data
        EmployeeCustomFieldTypeEnum:
            type: "object"
            properties:
                source_value:
                    type: "string"
                value:
                    type: "string"
                    enum:
                        - date
                        - float
                        - integer
                        - list
                        - text
                        - unmapped_value
            required:
                - value
                - source_value
        OfferHistory:
            type: "object"
            properties:
                currency:
                    type: "string"
                created_at:
                    type: "string"
                updated_at:
                    type: "string"
                start_date:
                    type: "string"
                    format: "date-time"
                salary:
                    type: "number"
            required:
                - start_date
        JobPostingResult:
            type: "object"
            properties:
                raw:
                    type: "string"
                data:
                    $ref: '#/components/schemas/JobPosting'
            required:
                - data
        Account:
            type: "object"
            properties:
                updated_at:
                    type: "string"
                description:
                    type: "string"
                phone_numbers:
                    type: "array"
                    items:
                        type: "string"
                annual_revenue:
                    type: "string"
                industry:
                    type: "string"
                id:
                    type: "string"
                created_at:
                    type: "string"
                owner_id:
                    type: "string"
                name:
                    type: "string"
                website:
                    type: "string"
                addresses:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/AccountAddress'
            required:
                - id
                - owner_id
                - name
        Template:
            type: "object"
            properties:
                created_at:
                    type: "string"
                    format: "date-time"
                updated_at:
                    type: "string"
                    format: "date-time"
                id:
                    type: "string"
                name:
                    type: "string"
                tags:
                    type: "array"
                    items:
                        type: "string"
        EmailMessages:
            type: "object"
            properties:
                message_content:
                    $ref: '#/components/schemas/EmailMessageContents'
                id:
                    type: "string"
                name:
                    type: "string"
                message_type:
                    $ref: '#/components/schemas/MessageTypeEnum'
        EthnicityEnum:
            type: "object"
            properties:
                source_value:
                    type: "string"
                value:
                    type: "string"
                    enum:
                        - white
                        - black_or_african_american
                        - asian
                        - hispanic_or_latino
                        - american_indian_or_alaska_native
                        - native_hawaiian_or_pacific_islander
                        - two_or_more_races
                        - not_disclosed
                        - other
                        - unmapped_value
            required:
                - value
                - source_value
        CountryCodeEnum:
            type: "object"
            properties:
                source_value:
                    type: "string"
                value:
                    type: "string"
                    enum:
                        - AF
                        - AL
                        - DZ
                        - AS
                        - AD
                        - AO
                        - AI
                        - AQ
                        - AG
                        - AR
                        - AM
                        - AW
                        - AU
                        - AT
                        - AZ
                        - BS
                        - BH
                        - BD
                        - BB
                        - BY
                        - BE
                        - BZ
                        - BJ
                        - BM
                        - BT
                        - BO
                        - BQ
                        - BA
                        - BW
                        - BV
                        - BR
                        - IO
                        - BN
                        - BG
                        - BF
                        - BI
                        - KH
                        - CM
                        - CA
                        - CV
                        - KY
                        - CF
                        - TD
                        - CL
                        - CN
                        - CX
                        - CC
                        - CO
                        - KM
                        - CG
                        - CD
                        - CK
                        - CR
                        - HR
                        - CU
                        - CW
                        - CY
                        - CZ
                        - CI
                        - DK
                        - DJ
                        - DM
                        - DO
                        - EC
                        - EG
                        - SV
                        - GQ
                        - ER
                        - EE
                        - ET
                        - FK
                        - FO
                        - FJ
                        - FI
                        - FR
                        - GF
                        - PF
                        - TF
                        - GA
                        - GM
                        - GE
                        - DE
                        - GH
                        - GI
                        - GR
                        - GL
                        - GD
                        - GP
                        - GU
                        - GT
                        - GG
                        - GN
                        - GW
                        - GY
                        - HT
                        - HM
                        - VA
                        - HN
                        - HK
                        - HU
                        - IS
                        - IN
                        - ID
                        - IR
                        - IQ
                        - IE
                        - IM
                        - IL
                        - IT
                        - JM
                        - JP
                        - JE
                        - JO
                        - KZ
                        - KE
                        - KI
                        - KP
                        - KR
                        - KW
                        - KG
                        - LA
                        - LV
                        - LB
                        - LS
                        - LR
                        - LY
                        - LI
                        - LT
                        - LU
                        - MO
                        - MK
                        - MG
                        - MW
                        - MY
                        - MV
                        - ML
                        - MT
                        - MH
                        - MQ
                        - MR
                        - MU
                        - YT
                        - MX
                        - FM
                        - MD
                        - MC
                        - MN
                        - ME
                        - MS
                        - MA
                        - MZ
                        - MM
                        - NA
                        - NR
                        - NP
                        - NL
                        - NC
                        - NZ
                        - NI
                        - NE
                        - NG
                        - NU
                        - NF
                        - MP
                        - "NO"
                        - OM
                        - PK
                        - PW
                        - PS
                        - PA
                        - PG
                        - PY
                        - PE
                        - PH
                        - PN
                        - PL
                        - PT
                        - PR
                        - QA
                        - RO
                        - RU
                        - RW
                        - RE
                        - BL
                        - SH
                        - KN
                        - LC
                        - MF
                        - PM
                        - VC
                        - WS
                        - SM
                        - ST
                        - SA
                        - SN
                        - RS
                        - SC
                        - SL
                        - SG
                        - SX
                        - SK
                        - SI
                        - SB
                        - SO
                        - ZA
                        - GS
                        - SS
                        - ES
                        - LK
                        - SD
                        - SR
                        - SJ
                        - SZ
                        - SE
                        - CH
                        - SY
                        - TW
                        - TJ
                        - TZ
                        - TH
                        - TL
                        - TG
                        - TK
                        - TO
                        - TT
                        - TN
                        - TR
                        - TM
                        - TC
                        - TV
                        - UG
                        - UA
                        - AE
                        - GB
                        - US
                        - UM
                        - UY
                        - UZ
                        - VU
                        - VE
                        - VN
                        - VG
                        - VI
                        - WF
                        - EH
                        - YE
                        - ZM
                        - ZW
                        - unmapped_value
            required:
                - value
                - source_value
        HrisCreateTimeOffRequestDto:
            type: "object"
            properties:
                approver_id:
                    type: "string"
                    description: "The approver ID"
                    example: "1687-4"
                status:
                    allOf:
                        - $ref: '#/components/schemas/TimeOffStatusEnum'
                    description: "The status of the time off request"
                type:
                    allOf:
                        - $ref: '#/components/schemas/TimeOffTypeEnum'
                    description: "The type of the time off request"
                start_date:
                    type: "string"
                    description: "The start date of the time off request"
                end_date:
                    type: "string"
                    description: "The end date of the time off request"
                employee_id:
                    type: "string"
                    description: "The employee ID"
                    example: "1687-3"
        AnswerEnum:
            type: "object"
            properties:
                source_value:
                    type: "string"
                value:
                    type: "string"
                    enum:
                        - short_text
                        - long_text
                        - multiple_choice
                        - boolean
                        - integer
                        - date
        ListResult:
            type: "object"
            properties:
                raw:
                    type: "string"
                data:
                    $ref: '#/components/schemas/List'
            required:
                - data
        SmsMessageContents:
            type: "object"
            properties:
                body:
                    type: "string"
                from:
                    type: "string"
            required:
                - body
        GenderEnum:
            type: "object"
            properties:
                value:
                    type: "string"
                    enum:
                        - male
                        - female
                        - non_binary
                        - other
                        - not_disclosed
                        - diverse
                        - unmapped_value
                source_value:
                    type: "string"
            required:
                - value
                - source_value
        TimeOffStatusEnum:
            type: "object"
            properties:
                source_value:
                    type: "string"
                value:
                    type: "string"
                    enum:
                        - approved
                        - unmapped_value
            required:
                - value
                - source_value
        SocialLink:
            type: "object"
            properties:
                url:
                    type: "string"
                type:
                    type: "string"
            required:
                - type
                - url
        CrmCreateContactRequestDto:
            type: "object"
            properties:
                deal_ids:
                    type: "array"
                    items:
                        type: "string"
                    description: "List of associated deal IDs"
                    example:
                        - deal-001
                        - deal-002
                account_ids:
                    type: "array"
                    items:
                        type: "string"
                    description: "List of associated account IDs"
                    example:
                        - account-123
                        - account-456
                first_name:
                    type: "string"
                    description: "The contact first name"
                    example: "Steve"
                last_name:
                    type: "string"
                    description: "The contact last name"
                    example: "Wozniak"
                company_name:
                    type: "string"
                    description: "The contact company name"
                    example: "Apple Inc."
                emails:
                    type: "array"
                    items:
                        type: "string"
                    description: "List of contact email addresses"
                    example:
                        - steve@apple.com
                phone_numbers:
                    type: "array"
                    items:
                        type: "string"
                    description: "List of contact phone numbers"
                    example:
                        - 123-456-7890
        EmploymentScheduleTypeEnum:
            type: "object"
            properties:
                value:
                    type: "string"
                    enum:
                        - full_time
                        - shifts
                        - part_time
                        - unmapped_value
                source_value:
                    type: "string"
            required:
                - value
                - source_value
        AttachmentType:
            type: "object"
            properties:
                source_value:
                    type: "string"
                value:
                    type: "string"
                    enum:
                        - resume
                        - unmapped_value
        Compensation:
            type: "object"
            properties:
                max_value:
                    type: "string"
                name:
                    type: "string"
                type:
                    type: "string"
                    enum:
                        - salary
                        - hourly
                        - commission
                        - bonus
                        - equity
                        - other
                        - unmapped_value
                pay_period:
                    type: "string"
                    enum:
                        - hour
                        - day
                        - week
                        - every_two_weeks
                        - month
                        - quarter
                        - every_six_months
                        - year
                        - none
                        - unmapped_value
                pay_frequency:
                    type: "string"
                    enum:
                        - hourly
                        - weekly
                        - bi_weekly
                        - four_weekly
                        - semi_monthly
                        - monthly
                        - bi_monthly
                        - quarterly
                        - semi_annually
                        - yearly
                        - thirteen_monthly
                        - pro_rata
                        - unmapped_value
                        - half_yearly
                currency:
                    type: "string"
                value:
                    type: "string"
                min_value:
                    type: "string"
        CreateCandidateNoteResult:
            type: "object"
            properties:
                message:
                    type: "string"
                timestamp:
                    type: "string"
                    format: "date-time"
                statusCode:
                    type: "number"
            required:
                - statusCode
                - message
                - timestamp
        InterviewStagesPaginated:
            type: "object"
            properties:
                raw:
                    type: "string"
                next_page:
                    type: "string"
                data:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/InterviewStage'
            required:
                - next_page
                - data
        CampaignsPaginated:
            type: "object"
            properties:
                raw:
                    type: "string"
                next_page:
                    type: "string"
                data:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/Campaign'
            required:
                - next_page
                - data
        EmploymentsPaginated:
            type: "object"
            properties:
                raw:
                    type: "string"
                next_page:
                    type: "string"
                data:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/Employment'
            required:
                - next_page
                - data
        EmploymentStatusEnum:
            type: "object"
            properties:
                source_value:
                    type: "string"
                value:
                    type: "string"
                    enum:
                        - active
                        - pending
                        - terminated
                        - leave
                        - unmapped_value
            required:
                - value
                - source_value
        PushMessageContents:
            type: "object"
            properties:
                body:
                    type: "string"
            required:
                - body
        PayFrequencyEnum:
            type: "object"
            properties:
                value:
                    type: "string"
                    enum:
                        - hourly
                        - weekly
                        - bi_weekly
                        - four_weekly
                        - semi_monthly
                        - monthly
                        - bi_monthly
                        - quarterly
                        - semi_annually
                        - yearly
                        - thirteen_monthly
                        - pro_rata
                        - unmapped_value
                        - half_yearly
                source_value:
                    type: "string"
            required:
                - value
                - source_value
        MaritalStatusEnum:
            type: "object"
            properties:
                source_value:
                    type: "string"
                value:
                    type: "string"
                    enum:
                        - single
                        - married
                        - common_law
                        - divorced
                        - widowed
                        - domestic_partnership
                        - separated
                        - other
                        - not_disclosed
                        - unmapped_value
            required:
                - value
                - source_value
        TimeOffResult:
            type: "object"
            properties:
                data:
                    $ref: '#/components/schemas/TimeOff'
                raw:
                    type: "string"
            required:
                - data
        AtsCreateOfferRequestDto:
            type: "object"
            properties:
                offer_status:
                    $ref: '#/components/schemas/OfferStatusEnum'
                salary:
                    type: "number"
                currency:
                    type: "string"
                offer_history:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/OfferHistory'
                application_id:
                    type: "string"
                start_date:
                    type: "string"
                    format: "date-time"
            required:
                - application_id
                - start_date
                - offer_status
        OffersResult:
            type: "object"
            properties:
                raw:
                    type: "string"
                data:
                    $ref: '#/components/schemas/Offer'
            required:
                - data
        ApplicationAttachment:
            type: "object"
            properties:
                content:
                    type: "string"
                url:
                    type: "string"
                type:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/AttachmentType'
                file_name:
                    type: "string"
        ApplicationStatusEnum:
            type: "object"
            properties:
                source_value:
                    type: "string"
                value:
                    type: "string"
                    enum:
                        - active
                        - converted
                        - hired
                        - lead
                        - rejected
                        - unmapped_value
            required:
                - value
                - source_value
        EmployeeCustomFields:
            type: "object"
            properties:
                options:
                    type: "array"
                    items:
                        type: "string"
                    description: "An array of possible options for the custom field."
                    example:
                        - Not Started
                        - In Progress
                        - Completed
                        - Overdue
                id:
                    type: "string"
                    description: "The unique identifier for the custom field, which defaults to the name property if the ID is not accessible."
                    example: "custom_field_123"
                name:
                    type: "string"
                    description: "The name of the custom field."
                    example: "Training Completion Status"
                description:
                    type: "string"
                    description: "The description of the custom field."
                    example: "The completion status of the employee's training."
                type:
                    allOf:
                        - $ref: '#/components/schemas/EmployeeCustomFieldTypeEnum'
                    description: "The type of the custom field."
                    example: "Dropdown"
                value:
                    type: "object"
                    description: "The value associated with the custom field."
                    example: "Completed"
                value_id:
                    type: "string"
                    description: "The unique identifier for the value of the custom field."
                    example: "value_456"
        AccountAddress:
            type: "object"
            properties:
                location_type:
                    type: "string"
                street_1:
                    type: "string"
                street_2:
                    type: "string"
                city:
                    type: "string"
                state:
                    type: "string"
                zip_code:
                    type: "string"
                country:
                    type: "string"
        CreateTemplateResult:
            type: "object"
            properties:
                timestamp:
                    type: "string"
                    format: "date-time"
                statusCode:
                    type: "number"
                message:
                    type: "string"
            required:
                - statusCode
                - message
                - timestamp
        HRISLocationResult:
            type: "object"
            properties:
                raw:
                    type: "string"
                data:
                    $ref: '#/components/schemas/HRISLocation'
            required:
                - data
        TimeOffPaginated:
            type: "object"
            properties:
                data:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/TimeOff'
                raw:
                    type: "string"
                next_page:
                    type: "string"
            required:
                - next_page
                - data
        InterviewStatusEnum:
            type: "object"
            properties:
                source_value:
                    type: "string"
                value:
                    type: "string"
                    enum:
                        - unscheduled
                        - scheduled
                        - completed
                        - cancelled
                        - pending_feedback
                        - unmapped_value
            required:
                - value
                - source_value
        NoteResult:
            type: "object"
            properties:
                data:
                    $ref: '#/components/schemas/Note'
                raw:
                    type: "string"
            required:
                - data
        AtsCreateApplicationRequestDto:
            type: "object"
            properties:
                candidate_id:
                    type: "string"
                job_id:
                    type: "string"
                location_ids:
                    type: "array"
                    items:
                        type: "string"
                application_status:
                    $ref: '#/components/schemas/ApplicationStatusEnum'
                questionnaire:
                    $ref: '#/components/schemas/Questionnaire'
                candidate:
                    $ref: '#/components/schemas/ApplicationCandidate'
                attachments:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/ApplicationAttachment'
            required:
                - application_status
                - questionnaire
                - candidate
        AtsCreateCandidateRequestDto:
            type: "object"
            properties:
                application_ids:
                    type: "array"
                    items:
                        type: "string"
                name:
                    type: "string"
                first_name:
                    type: "string"
                last_name:
                    type: "string"
                emails:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/CandidateEmail'
                phone:
                    type: "string"
                company:
                    type: "string"
                title:
                    type: "string"
            required:
                - name
                - first_name
                - last_name
                - emails
                - title
        List:
            type: "object"
            properties:
                location_type:
                    $ref: '#/components/schemas/ListTypeEnum'
                id:
                    type: "string"
                name:
                    type: "string"
                items:
                    type: "array"
                    items:
                        type: "string"
                created_at:
                    type: "string"
                updated_at:
                    type: "string"
            required:
                - id
                - name
        TemplateResult:
            type: "object"
            properties:
                data:
                    $ref: '#/components/schemas/Template'
                raw:
                    type: "string"
            required:
                - data
        HRISLocationsPaginated:
            type: "object"
            properties:
                next_page:
                    type: "string"
                data:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/HRISLocation'
                raw:
                    type: "string"
            required:
                - next_page
                - data
        Campaign:
            type: "object"
            properties:
                messages:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/Message'
                    example:
                        - id: message-id-1
                          message_content:
                            body: This is an example SMS body.
                            from: 1-555-123-4567
                          message_type:
                            sourceValue: sms-message
                            value: sms
                          name: SMS Message
                        - id: message-id-2
                          message_content:
                            body: |-
                                <h1>This is an example</h1>
                                            <p>email body</p>
                            from: Jane Smith
                            preheader: This is the preheader of the email.
                            reply-to: reply@example.com
                            subject: Example Email Subject
                          message_type:
                            sourceValue: email-message
                            value: email
                          name: Email Message
                        - id: message-id-3
                          message_content:
                            body: This is an example push notification body.
                          message_type:
                            sourceValue: ios-push
                            value: ios_push
                          name: iOS Push Message
                name:
                    type: "string"
                description:
                    type: "string"
                draft:
                    type: "boolean"
                channels:
                    type: "array"
                    items:
                        type: "string"
                        enum:
                            - email
                            - sms
                            - web_push
                            - ios_push
                            - android_push
                            - unknown
                            - unmapped_value
                    example:
                        - email
                        - sms
                        - ios_push
                        - android_push
                id:
                    type: "string"
                updated_at:
                    type: "string"
                first_sent_at:
                    type: "string"
                last_sent_at:
                    type: "string"
                tags:
                    type: "array"
                    items:
                        type: "string"
                created_at:
                    type: "string"
                archived:
                    type: "boolean"
            required:
                - name
        TimeOffTypeEnum:
            type: "object"
            properties:
                source_value:
                    type: "string"
                value:
                    type: "string"
                    enum:
                        - sick
                        - unmapped_value
                        - vacation
            required:
                - value
                - source_value
        JobsPaginated:
            type: "object"
            properties:
                next_page:
                    type: "string"
                data:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/Job'
                raw:
                    type: "string"
            required:
                - next_page
                - data
        ATSLocationResult:
            type: "object"
            properties:
                raw:
                    type: "string"
                data:
                    $ref: '#/components/schemas/ATSLocation'
            required:
                - data
        JobPosting:
            type: "object"
            properties:
                questions:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/Questions'
                    example:
                        - id: question001
                          required: true
                          text: What is your favorite color?
                          type: text
                        - id: question002
                          multiple_choice_answers:
                            - Dog
                            - Cat
                            - Bird
                            - Other
                          required: true
                          text: What is your favorite animal?
                          type: multiple_choice
                id:
                    type: "string"
                    example: "abcd1234"
                title:
                    type: "string"
                    example: "Software Engineer"
                external_url:
                    type: "string"
                    example: "https://www.example.com/job-posting/abcd1234"
                internal:
                    type: "string"
                    enum:
                        - "true"
                        - "false"
                    example: "true"
                updated_at:
                    type: "string"
                    example: "2023-08-24T12:00:00Z"
                status:
                    type: "string"
                    enum:
                        - live
                        - draft
                        - closed
                        - unmapped_value
                    example: "live"
                compensation:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/Compensation'
                    example:
                        - currency: USD
                          max_value: "55000"
                          min_value: "45000"
                          name: Base Salary
                          pay_frequency: yearly
                          pay_period: month
                          type: salary
                          value: "50000"
                        - currency: USD
                          name: Bonus
                          pay_frequency: quarterly
                          type: bonus
                          value: 10%
                job_id:
                    type: "string"
                    example: "job001"
                employment_contract_type:
                    type: "string"
                    enum:
                        - full_time
                        - shifts
                        - part_time
                        - unmapped_value
                    example: "full_time"
                created_at:
                    type: "string"
                    example: "2023-01-01T12:00:00Z"
                employment_type:
                    type: "string"
                    enum:
                        - permanent
                        - contractor
                        - intern
                        - apprentice
                        - freelance
                        - temporary
                        - seasonal
                        - volunteer
                        - unmapped_value
                    example: "permanent"
                content:
                    allOf:
                        - $ref: '#/components/schemas/Content'
                    example:
                        plain: This is a plain text description
                        html: <p>This is an HTML description</p>
                external_apply_url:
                    type: "string"
                    example: "https://www.example.com/job-posting/abcd1234/apply"
                locations:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/Location'
                    example:
                        - id: "12345"
                          name: New York
                        - id: "67890"
                          name: Remote
            required:
                - id
        PushMessages:
            type: "object"
            properties:
                name:
                    type: "string"
                message_type:
                    $ref: '#/components/schemas/MessageTypeEnum'
                message_content:
                    $ref: '#/components/schemas/PushMessageContents'
                id:
                    type: "string"
        CompanyResult:
            type: "object"
            properties:
                raw:
                    type: "string"
                data:
                    $ref: '#/components/schemas/Company'
            required:
                - data
        UsersPaginated:
            type: "object"
            properties:
                data:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/User'
                raw:
                    type: "string"
                next_page:
                    type: "string"
            required:
                - next_page
                - data
                - raw
        Answer:
            type: "object"
            properties:
                values:
                    type: "array"
                    items:
                        type: "string"
                id:
                    type: "string"
                type:
                    $ref: '#/components/schemas/AnswerEnum'
            required:
                - values
        Interviewer:
            type: "object"
            properties:
                last_name:
                    type: "string"
                name:
                    type: "string"
                email:
                    type: "string"
                id:
                    type: "string"
                first_name:
                    type: "string"
            required:
                - id
                - first_name
                - last_name
                - name
                - email
        InterviewStageResult:
            type: "object"
            properties:
                raw:
                    type: "string"
                data:
                    $ref: '#/components/schemas/InterviewStage'
            required:
                - data
        DepartmentResult:
            type: "object"
            properties:
                raw:
                    type: "string"
                data:
                    $ref: '#/components/schemas/Department'
            required:
                - data
        InterviewsPaginated:
            type: "object"
            properties:
                raw:
                    type: "string"
                next_page:
                    type: "string"
                data:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/Interview'
            required:
                - next_page
                - data
        User:
            type: "object"
            properties:
                first_name:
                    type: "string"
                last_name:
                    type: "string"
                name:
                    type: "string"
                phone:
                    type: "string"
                id:
                    type: "string"
                email:
                    type: "string"
            required:
                - id
                - email
                - first_name
                - last_name
                - name
                - phone
        DepartmentsPaginated:
            type: "object"
            properties:
                raw:
                    type: "string"
                next_page:
                    type: "string"
                data:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/Department'
            required:
                - next_page
                - data
        CreateEmployeeResult:
            type: "object"
            properties:
                timestamp:
                    type: "string"
                    format: "date-time"
                statusCode:
                    type: "number"
                message:
                    type: "string"
            required:
                - statusCode
                - message
                - timestamp
        Job:
            type: "object"
            properties:
                code:
                    type: "string"
                title:
                    type: "string"
                location_ids:
                    type: "array"
                    items:
                        type: "string"
                department_ids:
                    type: "array"
                    items:
                        type: "string"
                hiring_team:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/HiringTeam'
                job_status:
                    $ref: '#/components/schemas/JobStatusEnum'
                id:
                    type: "string"
                confidential:
                    type: "string"
                    enum:
                        - "true"
                        - "false"
                created_at:
                    type: "string"
                updated_at:
                    type: "string"
                company_id:
                    type: "string"
            required:
                - id
                - code
                - title
                - company_id
                - department_ids
                - location_ids
                - job_status
                - created_at
                - updated_at
        InterviewStage:
            type: "object"
            properties:
                name:
                    type: "string"
                order:
                    type: "number"
                created_at:
                    type: "string"
                    format: "date-time"
                updated_at:
                    type: "string"
                    format: "date-time"
                id:
                    type: "string"
            required:
                - id
                - name
        OfferStatusEnum:
            type: "object"
            properties:
                value:
                    type: "string"
                    enum:
                        - pending
                        - retracted
                        - unmapped_value
                source_value:
                    type: "string"
            required:
                - value
                - source_value
        AccountsPaginated:
            type: "object"
            properties:
                raw:
                    type: "string"
                next_page:
                    type: "string"
                data:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/Account'
            required:
                - next_page
                - data
        ApplicationCandidate:
            type: "object"
            properties:
                last_name:
                    type: "string"
                email:
                    type: "string"
                first_name:
                    type: "string"
        NotesVisibilityEnum:
            type: "object"
            properties:
                source_value:
                    type: "string"
                value:
                    type: "string"
                    enum:
                        - private
                        - public
            required:
                - value
                - source_value
        ApplicationsPaginated:
            type: "object"
            properties:
                raw:
                    type: "string"
                next_page:
                    type: "string"
                data:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/Application'
            required:
                - next_page
                - data
        EmploymentTypeEnum:
            type: "object"
            properties:
                source_value:
                    type: "string"
                value:
                    type: "string"
                    enum:
                        - full_time
                        - part_time
                        - contractor
                        - intern
                        - permanent
                        - apprentice
                        - freelance
                        - terminated
                        - temporary
                        - seasonal
                        - volunteer
                        - probation
                        - internal
                        - external
                        - employer_of_record
                        - unmapped_value
            required:
                - value
                - source_value
        TemplatesPaginated:
            type: "object"
            properties:
                raw:
                    type: "string"
                next_page:
                    type: "string"
                data:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/Template'
            required:
                - next_page
                - data
        Message:
            type: "object"
            properties:
                message_type:
                    type: "string"
                    enum:
                        - email
                        - sms
                        - web_push
                        - ios_push
                        - android_push
                        - app_push
                        - omni_channel
                        - unknown
                        - unmapped_value
                message_content:
                    oneOf:
                        - $ref: '#/components/schemas/SmsMessageContents'
                        - $ref: '#/components/schemas/EmailMessageContents'
                        - $ref: '#/components/schemas/PushMessageContents'
                id:
                    type: "string"
                name:
                    type: "string"
            required:
                - id
                - name
                - message_type
        RejectedReason:
            type: "object"
            properties:
                id:
                    type: "string"
                label:
                    type: "string"
                rejected_reason_type:
                    $ref: '#/components/schemas/RejectedReasonTypeEnum'
            required:
                - id
                - label
                - rejected_reason_type
        RejectedReasonResult:
            type: "object"
            properties:
                data:
                    $ref: '#/components/schemas/RejectedReason'
                raw:
                    type: "string"
            required:
                - data
        Offer:
            type: "object"
            properties:
                id:
                    type: "string"
                start_date:
                    type: "string"
                    format: "date-time"
                currency:
                    type: "string"
                created_at:
                    type: "string"
                application_id:
                    type: "string"
                salary:
                    type: "number"
                updated_at:
                    type: "string"
                offer_history:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/OfferHistory'
                offer_status:
                    $ref: '#/components/schemas/OfferStatusEnum'
            required:
                - id
                - application_id
                - start_date
                - offer_status
        JobPostingsPaginated:
            type: "object"
            properties:
                data:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/JobPosting'
                raw:
                    type: "string"
                next_page:
                    type: "string"
            required:
                - next_page
                - data
        CandidatesPaginated:
            type: "object"
            properties:
                raw:
                    type: "string"
                next_page:
                    type: "string"
                data:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/Candidate'
            required:
                - next_page
                - data
        HiringTeam:
            type: "object"
            properties:
                first_name:
                    type: "string"
                last_name:
                    type: "string"
                email:
                    type: "string"
                role:
                    type: "string"
                user_id:
                    type: "string"
        EmailMessageContents:
            type: "object"
            properties:
                body:
                    type: "string"
                from:
                    type: "string"
                reply-to:
                    type: "string"
                preheader:
                    type: "string"
                subject:
                    type: "string"
            required:
                - subject
                - body
                - from
        HrisCreateEmployeeRequestDto:
            type: "object"
            properties:
                name:
                    type: "string"
                    description: "The employee name"
                    example: "Issac Newton"
                employment_status:
                    allOf:
                        - $ref: '#/components/schemas/EmploymentStatusEnum'
                    description: "The employee employment status"
                    example: "active"
                work_location:
                    allOf:
                        - $ref: '#/components/schemas/HrisLocationsCreateRequestDto'
                    description: "The employee work location"
                hire_date:
                    type: "string"
                    description: "The employee hire date"
                    example: "2022-01-01"
                employments:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/Employment'
                    description: "The employee employments"
                first_name:
                    type: "string"
                    description: "The employee first name"
                    example: "Issac"
                start_date:
                    type: "string"
                    description: "The employee start date"
                    example: "2022-01-01"
                home_location:
                    allOf:
                        - $ref: '#/components/schemas/HrisLocationsCreateRequestDto'
                    description: "The employee home location"
                custom_fields:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/EmployeeCustomFields'
                    description: "The employee custom fields"
                avatar:
                    allOf:
                        - $ref: '#/components/schemas/Image'
                    description: "The employee avatar"
                    example: "https://example.com/avatar.png"
                company_name:
                    type: "string"
                    description: "The employee company name"
                    example: "Example Corp"
                gender:
                    allOf:
                        - $ref: '#/components/schemas/GenderEnum'
                    description: "The employee gender"
                    example: "male"
                last_name:
                    type: "string"
                    description: "The employee last name"
                    example: "Newton"
                work_email:
                    type: "string"
                    description: "The employee work email"
                    example: "newton@example.com"
                department:
                    type: "string"
                    description: "The employee department"
                    example: "Physics"
                personal_phone_number:
                    type: "string"
                    description: "The employee personal phone number"
                    example: "+1234567890"
                birthday:
                    type: "string"
                    description: "The employee birthday"
                    example: "2023-06-14T00:00:00Z"
                ethnicity:
                    allOf:
                        - $ref: '#/components/schemas/EthnicityEnum'
                    description: "The employee ethnicity"
                    example: "white"
                work_anniversary:
                    type: "string"
                    description: "The employee work anniversary"
                    example: "2022-06-14T00:00:00Z"
                manager_id:
                    type: "string"
                    description: "The employee manager ID"
                    example: "67890"
                employment_type:
                    allOf:
                        - $ref: '#/components/schemas/EmploymentTypeEnum'
                    description: "The employee employment type"
                    example: "full_time"
                employment_contract_type:
                    allOf:
                        - $ref: '#/components/schemas/EmploymentScheduleTypeEnum'
                    description: "The employment work schedule type (e.g., full-time, part-time)"
                    example: "full_time"
                personal_email:
                    type: "string"
                    description: "The employee personal email"
                    example: "isaac.newton@example.com"
                avatar_url:
                    type: "string"
                    description: "The employee avatar Url"
                    example: "https://example.com/avatar.png"
                tenure:
                    type: "string"
                    description: "The employee tenure"
                    example: 2
                termination_date:
                    type: "string"
                    description: "The employee termination date"
                    example: "2023-06-14T00:00:00Z"
                job_title:
                    type: "string"
                    description: "The employee job title"
                    example: "Physicist"
                work_phone_number:
                    type: "string"
                    description: "The employee work phone number"
                    example: "+1234567890"
                date_of_birth:
                    type: "string"
                    description: "The employee date_of_birth"
                    example: "1990-01-01"
                display_name:
                    type: "string"
                    description: "The employee display name"
                    example: "Sir Issac Newton"
                marital_status:
                    allOf:
                        - $ref: '#/components/schemas/MaritalStatusEnum'
                    description: "The employee marital status"
                    example: "single"
        ISO3166_2SubDivisionEnum:
            type: "object"
            properties:
                source_value:
                    type: "string"
                value:
                    type: "string"
                    enum:
                        - AD-07
                        - AD-02
                        - AD-03
                        - AD-08
                        - AD-04
                        - AD-05
                        - AD-06
                        - AE-AJ
                        - AE-AZ
                        - AE-FU
                        - AE-SH
                        - AE-DU
                        - AE-RK
                        - AE-UQ
                        - AF-BDS
                        - AF-BDG
                        - AF-BGL
                        - AF-BAL
                        - AF-BAM
                        - AF-DAY
                        - AF-FRA
                        - AF-FYB
                        - AF-GHA
                        - AF-GHO
                        - AF-HEL
                        - AF-HER
                        - AF-JOW
                        - AF-KAB
                        - AF-KAN
                        - AF-KAP
                        - AF-KHO
                        - AF-KDZ
                        - AF-LAG
                        - AF-LOG
                        - AF-NAN
                        - AF-NIM
                        - AF-PIA
                        - AF-PAR
                        - AF-SAR
                        - AF-TAK
                        - AF-URU
                        - AG-11
                        - AG-03
                        - AG-04
                        - AG-06
                        - AG-07
                        - AG-08
                        - AI-XX-1
                        - AL-01
                        - AL-09
                        - AL-02
                        - AL-03
                        - AL-04
                        - AL-05
                        - AL-06
                        - AL-07
                        - AL-08
                        - AL-10
                        - AL-11
                        - AL-12
                        - AM-AG
                        - AM-AR
                        - AM-AV
                        - AM-ER
                        - AM-GR
                        - AM-KT
                        - AM-LO
                        - AM-SH
                        - AM-SU
                        - AM-TV
                        - AM-VD
                        - AO-BGO
                        - AO-BGU
                        - AO-BIE
                        - AO-CAB
                        - AO-CCU
                        - AO-CNO
                        - AO-CUS
                        - AO-CNN
                        - AO-HUA
                        - AO-HUI
                        - AO-LUA
                        - AO-LNO
                        - AO-LSU
                        - AO-MAL
                        - AO-MOX
                        - AO-NAM
                        - AO-UIG
                        - AO-ZAI
                        - AQ-XX-1
                        - AR-B
                        - AR-K
                        - AR-H
                        - AR-U
                        - AR-C
                        - AR-X
                        - AR-W
                        - AR-E
                        - AR-P
                        - AR-Y
                        - AR-L
                        - AR-F
                        - AR-M
                        - AR-N
                        - AR-Q
                        - AR-R
                        - AR-A
                        - AR-J
                        - AR-D
                        - AR-Z
                        - AR-S
                        - AR-G
                        - AR-V
                        - AR-T
                        - AS-XX-1
                        - AS-XX-2
                        - AT-1
                        - AT-2
                        - AT-3
                        - AT-4
                        - AT-5
                        - AT-6
                        - AT-7
                        - AT-8
                        - AT-9
                        - AU-ACT
                        - AU-NSW
                        - AU-NT
                        - AU-QLD
                        - AU-SA
                        - AU-TAS
                        - AU-VIC
                        - AU-WA
                        - AW-XX-1
                        - AX-XX-1
                        - AX-XX-2
                        - AX-XX-3
                        - AX-XX-4
                        - AX-XX-5
                        - AX-XX-6
                        - AX-XX-7
                        - AX-XX-8
                        - AZ-ABS
                        - AZ-AGC
                        - AZ-AGU
                        - AZ-AST
                        - AZ-BA
                        - AZ-BAL
                        - AZ-BAR
                        - AZ-BEY
                        - AZ-BIL
                        - AZ-CAL
                        - AZ-FUZ
                        - AZ-GAD
                        - AZ-GA
                        - AZ-GOR
                        - AZ-GOY
                        - AZ-GYG
                        - AZ-IMI
                        - AZ-ISM
                        - AZ-KUR
                        - AZ-LA
                        - AZ-MAS
                        - AZ-MI
                        - AZ-NA
                        - AZ-NX
                        - AZ-NEF
                        - AZ-OGU
                        - AZ-QAB
                        - AZ-QAX
                        - AZ-QAZ
                        - AZ-QBA
                        - AZ-QUS
                        - AZ-SAT
                        - AZ-SAB
                        - AZ-SAK
                        - AZ-SAL
                        - AZ-SMI
                        - AZ-SKR
                        - AZ-SMX
                        - AZ-SR
                        - AZ-SM
                        - AZ-TAR
                        - AZ-UCA
                        - AZ-XAC
                        - AZ-XVD
                        - AZ-YAR
                        - AZ-YEV
                        - AZ-ZAQ
                        - AZ-ZAR
                        - BA-BRC
                        - BA-BIH
                        - BA-SRP
                        - BB-01
                        - BB-02
                        - BB-03
                        - BB-04
                        - BB-05
                        - BB-07
                        - BB-08
                        - BB-09
                        - BB-10
                        - BB-11
                        - BD-A
                        - BD-B
                        - BD-C
                        - BD-D
                        - BD-E
                        - BD-F
                        - BD-G
                        - BE-VAN
                        - BE-WBR
                        - BE-BRU
                        - BE-WHT
                        - BE-WLG
                        - BE-VLI
                        - BE-WLX
                        - BE-WNA
                        - BE-VOV
                        - BE-VBR
                        - BE-VWV
                        - BF-BAM
                        - BF-BAZ
                        - BF-BLG
                        - BF-BLK
                        - BF-COM
                        - BF-GAN
                        - BF-GNA
                        - BF-GOU
                        - BF-HOU
                        - BF-IOB
                        - BF-KAD
                        - BF-KEN
                        - BF-KMP
                        - BF-KOS
                        - BF-KOT
                        - BF-KOW
                        - BF-LER
                        - BF-LOR
                        - BF-MOU
                        - BF-NAO
                        - BF-NAM
                        - BF-NAY
                        - BF-OUB
                        - BF-OUD
                        - BF-PAS
                        - BF-PON
                        - BF-SNG
                        - BF-SMT
                        - BF-SEN
                        - BF-SIS
                        - BF-SOM
                        - BF-SOR
                        - BF-TAP
                        - BF-TUI
                        - BF-YAT
                        - BF-ZIR
                        - BF-ZON
                        - BF-ZOU
                        - BG-01
                        - BG-02
                        - BG-08
                        - BG-07
                        - BG-26
                        - BG-09
                        - BG-10
                        - BG-11
                        - BG-12
                        - BG-13
                        - BG-14
                        - BG-15
                        - BG-16
                        - BG-17
                        - BG-18
                        - BG-27
                        - BG-19
                        - BG-20
                        - BG-21
                        - BG-23
                        - BG-22
                        - BG-24
                        - BG-25
                        - BG-03
                        - BG-04
                        - BG-05
                        - BG-06
                        - BG-28
                        - BH-13
                        - BH-14
                        - BH-15
                        - BH-17
                        - BI-BM
                        - BI-CI
                        - BI-GI
                        - BI-KR
                        - BI-KI
                        - BI-MW
                        - BI-NG
                        - BI-RM
                        - BI-RT
                        - BI-RY
                        - BJ-AK
                        - BJ-AQ
                        - BJ-BO
                        - BJ-CO
                        - BJ-DO
                        - BJ-LI
                        - BJ-MO
                        - BJ-OU
                        - BJ-PL
                        - BJ-ZO
                        - BL-XX-1
                        - BM-XX-1
                        - BM-XX-2
                        - BN-BE
                        - BN-BM
                        - BN-TE
                        - BN-TU
                        - BO-H
                        - BO-C
                        - BO-B
                        - BO-L
                        - BO-O
                        - BO-N
                        - BO-P
                        - BO-S
                        - BO-T
                        - BQ-BO
                        - BQ-SA
                        - BQ-SE
                        - BR-AC
                        - BR-AL
                        - BR-AP
                        - BR-AM
                        - BR-BA
                        - BR-CE
                        - BR-DF
                        - BR-ES
                        - BR-GO
                        - BR-MA
                        - BR-MT
                        - BR-MS
                        - BR-MG
                        - BR-PA
                        - BR-PB
                        - BR-PR
                        - BR-PE
                        - BR-PI
                        - BR-RN
                        - BR-RS
                        - BR-RJ
                        - BR-RO
                        - BR-RR
                        - BR-SC
                        - BR-SP
                        - BR-SE
                        - BR-TO
                        - BS-BP
                        - BS-CO
                        - BS-FP
                        - BS-EG
                        - BS-HI
                        - BS-LI
                        - BS-NP
                        - BS-NO
                        - BS-NS
                        - BS-NE
                        - BS-SE
                        - BS-WG
                        - BT-33
                        - BT-12
                        - BT-22
                        - BT-GA
                        - BT-44
                        - BT-42
                        - BT-11
                        - BT-43
                        - BT-23
                        - BT-45
                        - BT-14
                        - BT-31
                        - BT-15
                        - BT-41
                        - BT-32
                        - BT-21
                        - BT-24
                        - BV-XX-1
                        - BW-CE
                        - BW-CH
                        - BW-GH
                        - BW-KG
                        - BW-KL
                        - BW-KW
                        - BW-NE
                        - BW-NW
                        - BW-SE
                        - BW-SO
                        - BY-BR
                        - BY-HO
                        - BY-HM
                        - BY-HR
                        - BY-MA
                        - BY-MI
                        - BY-VI
                        - BZ-BZ
                        - BZ-CY
                        - BZ-CZL
                        - BZ-OW
                        - BZ-SC
                        - BZ-TOL
                        - CA-AB
                        - CA-BC
                        - CA-MB
                        - CA-NB
                        - CA-NL
                        - CA-NT
                        - CA-NS
                        - CA-NU
                        - CA-ON
                        - CA-PE
                        - CA-QC
                        - CA-SK
                        - CA-YT
                        - CC-XX-1
                        - CD-EQ
                        - CD-HK
                        - CD-HL
                        - CD-IT
                        - CD-KC
                        - CD-KE
                        - CD-KN
                        - CD-BC
                        - CD-KG
                        - CD-KL
                        - CD-LU
                        - CD-NK
                        - CD-SA
                        - CD-SK
                        - CD-TA
                        - CD-TO
                        - CD-TU
                        - CF-BB
                        - CF-BGF
                        - CF-KB
                        - CF-HM
                        - CF-KG
                        - CF-NM
                        - CF-UK
                        - CF-AC
                        - CF-OP
                        - CF-VK
                        - CG-11
                        - CG-BZV
                        - CG-8
                        - CG-9
                        - CG-16
                        - CG-13
                        - CH-AG
                        - CH-AR
                        - CH-AI
                        - CH-BL
                        - CH-BS
                        - CH-BE
                        - CH-FR
                        - CH-GE
                        - CH-GL
                        - CH-GR
                        - CH-JU
                        - CH-LU
                        - CH-NE
                        - CH-NW
                        - CH-OW
                        - CH-SG
                        - CH-SH
                        - CH-SZ
                        - CH-SO
                        - CH-TG
                        - CH-TI
                        - CH-UR
                        - CH-VS
                        - CH-VD
                        - CH-ZG
                        - CH-ZH
                        - CI-AB
                        - CI-BS
                        - CI-CM
                        - CI-DN
                        - CI-GD
                        - CI-LC
                        - CI-LG
                        - CI-MG
                        - CI-SM
                        - CI-SV
                        - CI-VB
                        - CI-WR
                        - CI-YM
                        - CI-ZZ
                        - CK-XX-1
                        - CL-AI
                        - CL-AN
                        - CL-AP
                        - CL-AT
                        - CL-BI
                        - CL-CO
                        - CL-AR
                        - CL-LI
                        - CL-LL
                        - CL-LR
                        - CL-MA
                        - CL-ML
                        - CL-NB
                        - CL-RM
                        - CL-TA
                        - CL-VS
                        - CM-AD
                        - CM-CE
                        - CM-ES
                        - CM-EN
                        - CM-LT
                        - CM-NO
                        - CM-NW
                        - CM-OU
                        - CM-SU
                        - CM-SW
                        - CN-AH
                        - CN-BJ
                        - CN-CQ
                        - CN-FJ
                        - CN-GS
                        - CN-GD
                        - CN-GX
                        - CN-GZ
                        - CN-HI
                        - CN-HE
                        - CN-HL
                        - CN-HA
                        - CN-HB
                        - CN-HN
                        - CN-JS
                        - CN-JX
                        - CN-JL
                        - CN-LN
                        - CN-NM
                        - CN-NX
                        - CN-QH
                        - CN-SN
                        - CN-SD
                        - CN-SH
                        - CN-SX
                        - CN-SC
                        - CN-TJ
                        - CN-XJ
                        - CN-XZ
                        - CN-YN
                        - CN-ZJ
                        - CO-AMA
                        - CO-ANT
                        - CO-ARA
                        - CO-ATL
                        - CO-BOL
                        - CO-BOY
                        - CO-CAL
                        - CO-CAQ
                        - CO-CAS
                        - CO-CAU
                        - CO-CES
                        - CO-CHO
                        - CO-COR
                        - CO-CUN
                        - CO-DC
                        - CO-GUA
                        - CO-GUV
                        - CO-HUI
                        - CO-LAG
                        - CO-MAG
                        - CO-MET
                        - CO-NAR
                        - CO-NSA
                        - CO-PUT
                        - CO-QUI
                        - CO-RIS
                        - CO-SAP
                        - CO-SAN
                        - CO-SUC
                        - CO-TOL
                        - CO-VAC
                        - CO-VID
                        - CR-A
                        - CR-C
                        - CR-G
                        - CR-H
                        - CR-L
                        - CR-P
                        - CR-SJ
                        - CU-15
                        - CU-09
                        - CU-08
                        - CU-06
                        - CU-12
                        - CU-14
                        - CU-11
                        - CU-03
                        - CU-10
                        - CU-04
                        - CU-16
                        - CU-01
                        - CU-07
                        - CU-13
                        - CU-05
                        - CV-BV
                        - CV-BR
                        - CV-MO
                        - CV-PN
                        - CV-PR
                        - CV-RS
                        - CV-SL
                        - CV-CR
                        - CV-SD
                        - CV-SO
                        - CV-SV
                        - CV-TA
                        - CV-TS
                        - CW-XX-1
                        - CX-XX-1
                        - CY-04
                        - CY-06
                        - CY-03
                        - CY-01
                        - CY-02
                        - CY-05
                        - CZ-31
                        - CZ-64
                        - CZ-41
                        - CZ-63
                        - CZ-52
                        - CZ-51
                        - CZ-80
                        - CZ-71
                        - CZ-53
                        - CZ-32
                        - CZ-10
                        - CZ-20
                        - CZ-42
                        - CZ-72
                        - DE-BW
                        - DE-BY
                        - DE-BE
                        - DE-BB
                        - DE-HB
                        - DE-HH
                        - DE-HE
                        - DE-MV
                        - DE-NI
                        - DE-NW
                        - DE-RP
                        - DE-SL
                        - DE-SN
                        - DE-ST
                        - DE-SH
                        - DE-TH
                        - DJ-AR
                        - DJ-DJ
                        - DK-84
                        - DK-82
                        - DK-81
                        - DK-85
                        - DK-83
                        - DM-02
                        - DM-04
                        - DM-05
                        - DM-06
                        - DM-07
                        - DM-09
                        - DM-10
                        - DO-02
                        - DO-03
                        - DO-04
                        - DO-05
                        - DO-01
                        - DO-06
                        - DO-08
                        - DO-07
                        - DO-09
                        - DO-30
                        - DO-19
                        - DO-10
                        - DO-11
                        - DO-12
                        - DO-13
                        - DO-14
                        - DO-28
                        - DO-15
                        - DO-29
                        - DO-17
                        - DO-18
                        - DO-20
                        - DO-21
                        - DO-31
                        - DO-22
                        - DO-23
                        - DO-24
                        - DO-25
                        - DO-26
                        - DO-27
                        - DZ-01
                        - DZ-44
                        - DZ-46
                        - DZ-16
                        - DZ-23
                        - DZ-05
                        - DZ-08
                        - DZ-06
                        - DZ-07
                        - DZ-09
                        - DZ-34
                        - DZ-10
                        - DZ-35
                        - DZ-02
                        - DZ-25
                        - DZ-17
                        - DZ-32
                        - DZ-39
                        - DZ-36
                        - DZ-47
                        - DZ-24
                        - DZ-33
                        - DZ-18
                        - DZ-40
                        - DZ-03
                        - DZ-28
                        - DZ-29
                        - DZ-26
                        - DZ-43
                        - DZ-27
                        - DZ-45
                        - DZ-31
                        - DZ-30
                        - DZ-04
                        - DZ-48
                        - DZ-20
                        - DZ-19
                        - DZ-22
                        - DZ-21
                        - DZ-41
                        - DZ-11
                        - DZ-12
                        - DZ-14
                        - DZ-37
                        - DZ-42
                        - DZ-38
                        - DZ-15
                        - DZ-13
                        - EC-A
                        - EC-B
                        - EC-F
                        - EC-C
                        - EC-H
                        - EC-X
                        - EC-O
                        - EC-E
                        - EC-W
                        - EC-G
                        - EC-I
                        - EC-L
                        - EC-R
                        - EC-M
                        - EC-S
                        - EC-N
                        - EC-D
                        - EC-Y
                        - EC-P
                        - EC-SE
                        - EC-SD
                        - EC-U
                        - EC-T
                        - EC-Z
                        - EE-37
                        - EE-39
                        - EE-45
                        - EE-52
                        - EE-50
                        - EE-60
                        - EE-56
                        - EE-68
                        - EE-64
                        - EE-71
                        - EE-74
                        - EE-79
                        - EE-81
                        - EE-84
                        - EE-87
                        - EG-DK
                        - EG-BA
                        - EG-BH
                        - EG-FYM
                        - EG-GH
                        - EG-ALX
                        - EG-IS
                        - EG-GZ
                        - EG-MNF
                        - EG-MN
                        - EG-C
                        - EG-KB
                        - EG-LX
                        - EG-WAD
                        - EG-SUZ
                        - EG-SHR
                        - EG-ASN
                        - EG-AST
                        - EG-BNS
                        - EG-PTS
                        - EG-DT
                        - EG-JS
                        - EG-KFS
                        - EG-MT
                        - EG-KN
                        - EG-SIN
                        - EG-SHG
                        - EH-XX-1
                        - ER-MA
                        - ER-DK
                        - ER-SK
                        - ES-AN
                        - ES-AR
                        - ES-AS
                        - ES-CN
                        - ES-CB
                        - ES-CL
                        - ES-CM
                        - ES-CT
                        - ES-CE
                        - ES-EX
                        - ES-GA
                        - ES-IB
                        - ES-RI
                        - ES-MD
                        - ES-ML
                        - ES-MC
                        - ES-NC
                        - ES-PV
                        - ES-VC
                        - ET-AA
                        - ET-AF
                        - ET-AM
                        - ET-BE
                        - ET-DD
                        - ET-GA
                        - ET-HA
                        - ET-OR
                        - ET-SO
                        - ET-TI
                        - ET-SN
                        - FI-02
                        - FI-03
                        - FI-04
                        - FI-05
                        - FI-06
                        - FI-07
                        - FI-08
                        - FI-09
                        - FI-10
                        - FI-16
                        - FI-11
                        - FI-12
                        - FI-13
                        - FI-14
                        - FI-15
                        - FI-17
                        - FI-18
                        - FI-19
                        - FJ-C
                        - FJ-E
                        - FJ-N
                        - FJ-R
                        - FJ-W
                        - FK-XX-1
                        - FM-TRK
                        - FM-KSA
                        - FM-PNI
                        - FM-YAP
                        - FO-XX-1
                        - FO-XX-2
                        - FO-XX-3
                        - FO-XX-4
                        - FO-XX-5
                        - FR-ARA
                        - FR-BFC
                        - FR-BRE
                        - FR-CVL
                        - FR-20R
                        - FR-GES
                        - FR-HDF
                        - FR-IDF
                        - FR-NOR
                        - FR-NAQ
                        - FR-OCC
                        - FR-PDL
                        - FR-PAC
                        - GA-1
                        - GA-2
                        - GA-4
                        - GA-5
                        - GA-8
                        - GA-9
                        - GB-ENG
                        - GB-NIR
                        - GB-SCT
                        - GB-WLS
                        - GB-CAM
                        - GB-CMA
                        - GB-DBY
                        - GB-DEV
                        - GB-DOR
                        - GB-ESX
                        - GB-ESS
                        - GB-GLS
                        - GB-HAM
                        - GB-HRT
                        - GB-KEN
                        - GB-LAN
                        - GB-LEC
                        - GB-LIN
                        - GB-NFK
                        - GB-NYK
                        - GB-NTT
                        - GB-OXF
                        - GB-SOM
                        - GB-STS
                        - GB-SFK
                        - GB-SRY
                        - GB-WAR
                        - GB-WSX
                        - GB-WOR
                        - GB-LND
                        - GB-BDG
                        - GB-BNE
                        - GB-BEX
                        - GB-BEN
                        - GB-BRY
                        - GB-CMD
                        - GB-CRY
                        - GB-EAL
                        - GB-ENF
                        - GB-GRE
                        - GB-HCK
                        - GB-HMF
                        - GB-HRY
                        - GB-HRW
                        - GB-HAV
                        - GB-HIL
                        - GB-HNS
                        - GB-ISL
                        - GB-KEC
                        - GB-KTT
                        - GB-LBH
                        - GB-LEW
                        - GB-MRT
                        - GB-NWM
                        - GB-RDB
                        - GB-RIC
                        - GB-SWK
                        - GB-STN
                        - GB-TWH
                        - GB-WFT
                        - GB-WND
                        - GB-WSM
                        - GB-BNS
                        - GB-BIR
                        - GB-BOL
                        - GB-BRD
                        - GB-BUR
                        - GB-CLD
                        - GB-COV
                        - GB-DNC
                        - GB-DUD
                        - GB-GAT
                        - GB-KIR
                        - GB-KWL
                        - GB-LDS
                        - GB-LIV
                        - GB-MAN
                        - GB-NET
                        - GB-NTY
                        - GB-OLD
                        - GB-RCH
                        - GB-ROT
                        - GB-SHN
                        - GB-SLF
                        - GB-SAW
                        - GB-SFT
                        - GB-SHF
                        - GB-SOL
                        - GB-STY
                        - GB-SKP
                        - GB-SND
                        - GB-TAM
                        - GB-TRF
                        - GB-WKF
                        - GB-WLL
                        - GB-WGN
                        - GB-WRL
                        - GB-WLV
                        - GB-BAS
                        - GB-BDF
                        - GB-BBD
                        - GB-BPL
                        - GB-BCP
                        - GB-BRC
                        - GB-BNH
                        - GB-BST
                        - GB-BKM
                        - GB-CBF
                        - GB-CHE
                        - GB-CHW
                        - GB-CON
                        - GB-DAL
                        - GB-DER
                        - GB-DUR
                        - GB-ERY
                        - GB-HAL
                        - GB-HPL
                        - GB-HEF
                        - GB-IOW
                        - GB-IOS
                        - GB-KHL
                        - GB-LCE
                        - GB-LUT
                        - GB-MDW
                        - GB-MDB
                        - GB-MIK
                        - GB-NEL
                        - GB-NLN
                        - GB-NNH
                        - GB-NSM
                        - GB-NBL
                        - GB-NGM
                        - GB-PTE
                        - GB-PLY
                        - GB-POR
                        - GB-RDG
                        - GB-RCC
                        - GB-RUT
                        - GB-SHR
                        - GB-SLG
                        - GB-SGC
                        - GB-STH
                        - GB-SOS
                        - GB-STT
                        - GB-STE
                        - GB-SWD
                        - GB-TFW
                        - GB-THR
                        - GB-TOB
                        - GB-WRT
                        - GB-WBK
                        - GB-WNH
                        - GB-WIL
                        - GB-WNM
                        - GB-WOK
                        - GB-YOR
                        - GB-ANN
                        - GB-AND
                        - GB-ABC
                        - GB-BFS
                        - GB-CCG
                        - GB-DRS
                        - GB-FMO
                        - GB-LBC
                        - GB-MEA
                        - GB-MUL
                        - GB-NMD
                        - GB-ABE
                        - GB-ABD
                        - GB-ANS
                        - GB-AGB
                        - GB-CLK
                        - GB-DGY
                        - GB-DND
                        - GB-EAY
                        - GB-EDU
                        - GB-ELN
                        - GB-ERW
                        - GB-EDH
                        - GB-ELS
                        - GB-FAL
                        - GB-FIF
                        - GB-GLG
                        - GB-HLD
                        - GB-IVC
                        - GB-MLN
                        - GB-MRY
                        - GB-NAY
                        - GB-NLK
                        - GB-ORK
                        - GB-PKN
                        - GB-RFW
                        - GB-SCB
                        - GB-ZET
                        - GB-SAY
                        - GB-SLK
                        - GB-STG
                        - GB-WDU
                        - GB-WLN
                        - GB-BGW
                        - GB-BGE
                        - GB-CAY
                        - GB-CRF
                        - GB-CMN
                        - GB-CGN
                        - GB-CWY
                        - GB-DEN
                        - GB-FLN
                        - GB-GWN
                        - GB-AGY
                        - GB-MTY
                        - GB-MON
                        - GB-NTL
                        - GB-NWP
                        - GB-PEM
                        - GB-POW
                        - GB-RCT
                        - GB-SWA
                        - GB-TOF
                        - GB-VGL
                        - GB-WRX
                        - GD-01
                        - GD-02
                        - GD-03
                        - GD-04
                        - GD-05
                        - GD-06
                        - GD-10
                        - GE-AB
                        - GE-AJ
                        - GE-GU
                        - GE-IM
                        - GE-KA
                        - GE-KK
                        - GE-MM
                        - GE-RL
                        - GE-SZ
                        - GE-SJ
                        - GE-SK
                        - GE-TB
                        - GF-XX-1
                        - GG-XX-1
                        - GH-AF
                        - GH-AH
                        - GH-BO
                        - GH-BE
                        - GH-CP
                        - GH-EP
                        - GH-AA
                        - GH-NP
                        - GH-UE
                        - GH-UW
                        - GH-TV
                        - GH-WP
                        - GI-XX-1
                        - GL-AV
                        - GL-KU
                        - GL-QT
                        - GL-SM
                        - GL-QE
                        - GM-B
                        - GM-M
                        - GM-L
                        - GM-N
                        - GM-U
                        - GM-W
                        - GN-BF
                        - GN-B
                        - GN-C
                        - GN-CO
                        - GN-DB
                        - GN-DU
                        - GN-K
                        - GN-L
                        - GN-LA
                        - GN-MC
                        - GN-N
                        - GN-SI
                        - GP-XX-1
                        - GQ-BN
                        - GQ-KN
                        - GQ-LI
                        - GQ-WN
                        - GR-A
                        - GR-I
                        - GR-G
                        - GR-C
                        - GR-F
                        - GR-D
                        - GR-B
                        - GR-M
                        - GR-L
                        - GR-J
                        - GR-H
                        - GR-E
                        - GR-K
                        - GS-XX-1
                        - GT-16
                        - GT-15
                        - GT-04
                        - GT-20
                        - GT-02
                        - GT-05
                        - GT-01
                        - GT-13
                        - GT-18
                        - GT-21
                        - GT-22
                        - GT-17
                        - GT-09
                        - GT-14
                        - GT-11
                        - GT-03
                        - GT-12
                        - GT-06
                        - GT-07
                        - GT-10
                        - GT-08
                        - GT-19
                        - GU-XX-1
                        - GU-XX-2
                        - GU-XX-3
                        - GU-XX-4
                        - GU-XX-5
                        - GU-XX-6
                        - GU-XX-7
                        - GU-XX-8
                        - GU-XX-9
                        - GU-XX-10
                        - GU-XX-11
                        - GU-XX-12
                        - GU-XX-13
                        - GU-XX-14
                        - GU-XX-15
                        - GU-XX-16
                        - GW-BS
                        - GW-GA
                        - GY-CU
                        - GY-DE
                        - GY-EB
                        - GY-ES
                        - GY-MA
                        - GY-PT
                        - GY-UD
                        - HK-XX-1
                        - HM-XX-1
                        - HN-AT
                        - HN-CH
                        - HN-CL
                        - HN-CM
                        - HN-CP
                        - HN-CR
                        - HN-EP
                        - HN-FM
                        - HN-GD
                        - HN-IN
                        - HN-IB
                        - HN-LP
                        - HN-LE
                        - HN-OC
                        - HN-OL
                        - HN-SB
                        - HN-VA
                        - HN-YO
                        - HR-07
                        - HR-12
                        - HR-19
                        - HR-21
                        - HR-18
                        - HR-04
                        - HR-06
                        - HR-02
                        - HR-09
                        - HR-20
                        - HR-14
                        - HR-11
                        - HR-08
                        - HR-15
                        - HR-03
                        - HR-17
                        - HR-05
                        - HR-10
                        - HR-16
                        - HR-13
                        - HR-01
                        - HT-AR
                        - HT-CE
                        - HT-GA
                        - HT-NI
                        - HT-ND
                        - HT-OU
                        - HT-SD
                        - HT-SE
                        - HU-BK
                        - HU-BA
                        - HU-BE
                        - HU-BZ
                        - HU-BU
                        - HU-CS
                        - HU-FE
                        - HU-GS
                        - HU-HB
                        - HU-HE
                        - HU-JN
                        - HU-KE
                        - HU-NO
                        - HU-PE
                        - HU-SO
                        - HU-SZ
                        - HU-TO
                        - HU-VA
                        - HU-VE
                        - HU-ZA
                        - ID-AC
                        - ID-BA
                        - ID-BT
                        - ID-BE
                        - ID-GO
                        - ID-JK
                        - ID-JA
                        - ID-JB
                        - ID-JT
                        - ID-JI
                        - ID-KB
                        - ID-KS
                        - ID-KT
                        - ID-KI
                        - ID-KU
                        - ID-BB
                        - ID-KR
                        - ID-LA
                        - ID-ML
                        - ID-MU
                        - ID-NB
                        - ID-NT
                        - ID-PP
                        - ID-PB
                        - ID-RI
                        - ID-SR
                        - ID-SN
                        - ID-ST
                        - ID-SG
                        - ID-SA
                        - ID-SB
                        - ID-SS
                        - ID-SU
                        - ID-YO
                        - IE-CW
                        - IE-CN
                        - IE-CE
                        - IE-CO
                        - IE-DL
                        - IE-D
                        - IE-G
                        - IE-KY
                        - IE-KE
                        - IE-KK
                        - IE-LS
                        - IE-LM
                        - IE-LK
                        - IE-LD
                        - IE-LH
                        - IE-MO
                        - IE-MH
                        - IE-MN
                        - IE-OY
                        - IE-RN
                        - IE-SO
                        - IE-TA
                        - IE-WD
                        - IE-WH
                        - IE-WX
                        - IE-WW
                        - IL-D
                        - IL-M
                        - IL-Z
                        - IL-HA
                        - IL-TA
                        - IL-JM
                        - IM-XX-1
                        - IN-AN
                        - IN-AP
                        - IN-AR
                        - IN-AS
                        - IN-BR
                        - IN-CH
                        - IN-CT
                        - IN-DN
                        - IN-DH
                        - IN-DL
                        - IN-GA
                        - IN-GJ
                        - IN-HR
                        - IN-HP
                        - IN-JK
                        - IN-JH
                        - IN-KA
                        - IN-KL
                        - IN-LD
                        - IN-MP
                        - IN-MH
                        - IN-MN
                        - IN-ML
                        - IN-MZ
                        - IN-NL
                        - IN-OR
                        - IN-PY
                        - IN-PB
                        - IN-RJ
                        - IN-SK
                        - IN-TN
                        - IN-TG
                        - IN-TR
                        - IN-UP
                        - IN-UT
                        - IN-WB
                        - IO-XX-1
                        - IQ-AN
                        - IQ-BA
                        - IQ-MU
                        - IQ-QA
                        - IQ-NA
                        - IQ-AR
                        - IQ-SU
                        - IQ-BB
                        - IQ-BG
                        - IQ-DA
                        - IQ-DQ
                        - IQ-DI
                        - IQ-KA
                        - IQ-KI
                        - IQ-MA
                        - IQ-NI
                        - IQ-SD
                        - IQ-WA
                        - IR-30
                        - IR-24
                        - IR-04
                        - IR-03
                        - IR-18
                        - IR-14
                        - IR-10
                        - IR-07
                        - IR-01
                        - IR-27
                        - IR-13
                        - IR-22
                        - IR-16
                        - IR-08
                        - IR-05
                        - IR-29
                        - IR-09
                        - IR-28
                        - IR-06
                        - IR-17
                        - IR-12
                        - IR-15
                        - IR-00
                        - IR-02
                        - IR-26
                        - IR-25
                        - IR-20
                        - IR-11
                        - IR-23
                        - IR-21
                        - IR-19
                        - IS-7
                        - IS-1
                        - IS-6
                        - IS-5
                        - IS-8
                        - IS-2
                        - IS-4
                        - IS-3
                        - IT-65
                        - IT-77
                        - IT-78
                        - IT-72
                        - IT-45
                        - IT-36
                        - IT-62
                        - IT-42
                        - IT-25
                        - IT-57
                        - IT-67
                        - IT-21
                        - IT-75
                        - IT-88
                        - IT-82
                        - IT-52
                        - IT-32
                        - IT-55
                        - IT-23
                        - IT-34
                        - JE-XX-1
                        - JM-13
                        - JM-09
                        - JM-01
                        - JM-12
                        - JM-04
                        - JM-02
                        - JM-06
                        - JM-14
                        - JM-11
                        - JM-08
                        - JM-05
                        - JM-03
                        - JM-07
                        - JM-10
                        - JO-AJ
                        - JO-AQ
                        - JO-AM
                        - JO-BA
                        - JO-KA
                        - JO-MA
                        - JO-AT
                        - JO-AZ
                        - JO-IR
                        - JO-JA
                        - JO-MN
                        - JO-MD
                        - JP-23
                        - JP-05
                        - JP-02
                        - JP-12
                        - JP-38
                        - JP-18
                        - JP-40
                        - JP-07
                        - JP-21
                        - JP-10
                        - JP-34
                        - JP-01
                        - JP-28
                        - JP-08
                        - JP-17
                        - JP-03
                        - JP-37
                        - JP-46
                        - JP-14
                        - JP-39
                        - JP-43
                        - JP-26
                        - JP-24
                        - JP-04
                        - JP-45
                        - JP-20
                        - JP-42
                        - JP-29
                        - JP-15
                        - JP-44
                        - JP-33
                        - JP-47
                        - JP-27
                        - JP-41
                        - JP-11
                        - JP-25
                        - JP-32
                        - JP-22
                        - JP-09
                        - JP-36
                        - JP-13
                        - JP-31
                        - JP-16
                        - JP-30
                        - JP-06
                        - JP-35
                        - JP-19
                        - KE-01
                        - KE-02
                        - KE-03
                        - KE-04
                        - KE-05
                        - KE-06
                        - KE-07
                        - KE-08
                        - KE-09
                        - KE-10
                        - KE-11
                        - KE-12
                        - KE-13
                        - KE-14
                        - KE-15
                        - KE-16
                        - KE-17
                        - KE-18
                        - KE-19
                        - KE-20
                        - KE-21
                        - KE-22
                        - KE-23
                        - KE-24
                        - KE-25
                        - KE-26
                        - KE-27
                        - KE-28
                        - KE-29
                        - KE-30
                        - KE-31
                        - KE-32
                        - KE-33
                        - KE-34
                        - KE-35
                        - KE-36
                        - KE-37
                        - KE-38
                        - KE-39
                        - KE-40
                        - KE-41
                        - KE-42
                        - KE-43
                        - KE-44
                        - KE-45
                        - KE-46
                        - KE-47
                        - KG-B
                        - KG-GB
                        - KG-C
                        - KG-J
                        - KG-N
                        - KG-GO
                        - KG-T
                        - KG-Y
                        - KH-2
                        - KH-1
                        - KH-23
                        - KH-3
                        - KH-4
                        - KH-5
                        - KH-6
                        - KH-7
                        - KH-8
                        - KH-10
                        - KH-11
                        - KH-24
                        - KH-12
                        - KH-15
                        - KH-18
                        - KH-14
                        - KH-16
                        - KH-17
                        - KH-19
                        - KH-20
                        - KH-21
                        - KI-G
                        - KM-G
                        - KM-M
                        - KN-01
                        - KN-02
                        - KN-03
                        - KN-05
                        - KN-06
                        - KN-07
                        - KN-08
                        - KN-09
                        - KN-10
                        - KN-11
                        - KN-12
                        - KN-13
                        - KN-15
                        - KP-01
                        - KR-26
                        - KR-43
                        - KR-44
                        - KR-27
                        - KR-30
                        - KR-42
                        - KR-29
                        - KR-41
                        - KR-47
                        - KR-48
                        - KR-28
                        - KR-49
                        - KR-45
                        - KR-46
                        - KR-11
                        - KR-31
                        - KW-KU
                        - KW-AH
                        - KW-FA
                        - KW-JA
                        - KW-HA
                        - KW-MU
                        - KY-XX-1
                        - KZ-ALA
                        - KZ-ALM
                        - KZ-AKM
                        - KZ-AKT
                        - KZ-ATY
                        - KZ-ZAP
                        - KZ-MAN
                        - KZ-AST
                        - KZ-YUZ
                        - KZ-PAV
                        - KZ-KAR
                        - KZ-KUS
                        - KZ-KZY
                        - KZ-VOS
                        - KZ-SHY
                        - KZ-SEV
                        - KZ-ZHA
                        - LA-AT
                        - LA-BL
                        - LA-CH
                        - LA-HO
                        - LA-KH
                        - LA-OU
                        - LA-PH
                        - LA-SV
                        - LA-VI
                        - LA-XA
                        - LA-XE
                        - LA-XI
                        - LB-AK
                        - LB-BH
                        - LB-BI
                        - LB-BA
                        - LB-AS
                        - LB-JA
                        - LB-JL
                        - LB-NA
                        - LC-01
                        - LC-02
                        - LC-03
                        - LC-05
                        - LC-06
                        - LC-07
                        - LC-08
                        - LC-10
                        - LC-11
                        - LI-01
                        - LI-02
                        - LI-03
                        - LI-04
                        - LI-05
                        - LI-06
                        - LI-07
                        - LI-09
                        - LI-10
                        - LI-11
                        - LK-2
                        - LK-5
                        - LK-7
                        - LK-6
                        - LK-4
                        - LK-9
                        - LK-3
                        - LK-8
                        - LK-1
                        - LR-BM
                        - LR-GB
                        - LR-GG
                        - LR-MG
                        - LR-MO
                        - LR-NI
                        - LR-SI
                        - LS-D
                        - LS-B
                        - LS-C
                        - LS-E
                        - LS-A
                        - LS-F
                        - LS-J
                        - LS-H
                        - LS-G
                        - LS-K
                        - LT-AL
                        - LT-KU
                        - LT-KL
                        - LT-MR
                        - LT-PN
                        - LT-SA
                        - LT-TA
                        - LT-TE
                        - LT-UT
                        - LT-VL
                        - LU-CA
                        - LU-CL
                        - LU-DI
                        - LU-EC
                        - LU-ES
                        - LU-GR
                        - LU-LU
                        - LU-ME
                        - LU-RD
                        - LU-RM
                        - LU-VD
                        - LU-WI
                        - LV-011
                        - LV-002
                        - LV-007
                        - LV-111
                        - LV-015
                        - LV-016
                        - LV-022
                        - LV-DGV
                        - LV-112
                        - LV-026
                        - LV-033
                        - LV-042
                        - LV-JEL
                        - LV-041
                        - LV-JUR
                        - LV-052
                        - LV-047
                        - LV-050
                        - LV-LPX
                        - LV-054
                        - LV-056
                        - LV-058
                        - LV-059
                        - LV-062
                        - LV-067
                        - LV-068
                        - LV-073
                        - LV-077
                        - LV-RIX
                        - LV-080
                        - LV-087
                        - LV-088
                        - LV-089
                        - LV-091
                        - LV-094
                        - LV-097
                        - LV-099
                        - LV-101
                        - LV-113
                        - LV-102
                        - LV-106
                        - LY-BU
                        - LY-JA
                        - LY-JG
                        - LY-JI
                        - LY-JU
                        - LY-KF
                        - LY-MJ
                        - LY-MB
                        - LY-WA
                        - LY-NQ
                        - LY-ZA
                        - LY-BA
                        - LY-DR
                        - LY-MI
                        - LY-NL
                        - LY-SB
                        - LY-SR
                        - LY-TB
                        - LY-WS
                        - MA-05
                        - MA-06
                        - MA-08
                        - MA-03
                        - MA-10
                        - MA-02
                        - MA-11
                        - MA-07
                        - MA-04
                        - MA-09
                        - MA-01
                        - MC-FO
                        - MC-CO
                        - MC-MO
                        - MC-MC
                        - MC-SR
                        - MD-AN
                        - MD-BA
                        - MD-BS
                        - MD-BD
                        - MD-BR
                        - MD-CA
                        - MD-CL
                        - MD-CT
                        - MD-CS
                        - MD-CU
                        - MD-CM
                        - MD-CR
                        - MD-DO
                        - MD-DR
                        - MD-DU
                        - MD-ED
                        - MD-FA
                        - MD-FL
                        - MD-GA
                        - MD-GL
                        - MD-HI
                        - MD-IA
                        - MD-LE
                        - MD-NI
                        - MD-OC
                        - MD-OR
                        - MD-RE
                        - MD-RI
                        - MD-SI
                        - MD-SD
                        - MD-SO
                        - MD-SV
                        - MD-SN
                        - MD-ST
                        - MD-TA
                        - MD-TE
                        - MD-UN
                        - ME-01
                        - ME-02
                        - ME-03
                        - ME-04
                        - ME-05
                        - ME-06
                        - ME-07
                        - ME-08
                        - ME-10
                        - ME-12
                        - ME-13
                        - ME-14
                        - ME-15
                        - ME-16
                        - ME-17
                        - ME-19
                        - ME-24
                        - ME-20
                        - ME-21
                        - MF-XX-1
                        - MG-T
                        - MG-D
                        - MG-F
                        - MG-M
                        - MG-A
                        - MG-U
                        - MH-KWA
                        - MH-MAJ
                        - MK-802
                        - MK-201
                        - MK-501
                        - MK-401
                        - MK-601
                        - MK-402
                        - MK-602
                        - MK-803
                        - MK-109
                        - MK-814
                        - MK-210
                        - MK-816
                        - MK-303
                        - MK-203
                        - MK-502
                        - MK-406
                        - MK-503
                        - MK-804
                        - MK-405
                        - MK-604
                        - MK-102
                        - MK-807
                        - MK-606
                        - MK-205
                        - MK-104
                        - MK-307
                        - MK-809
                        - MK-206
                        - MK-701
                        - MK-702
                        - MK-505
                        - MK-703
                        - MK-704
                        - MK-105
                        - MK-207
                        - MK-308
                        - MK-607
                        - MK-506
                        - MK-106
                        - MK-507
                        - MK-408
                        - MK-310
                        - MK-208
                        - MK-810
                        - MK-311
                        - MK-508
                        - MK-209
                        - MK-409
                        - MK-705
                        - MK-509
                        - MK-107
                        - MK-811
                        - MK-812
                        - MK-211
                        - MK-312
                        - MK-410
                        - MK-813
                        - MK-108
                        - MK-608
                        - MK-609
                        - MK-403
                        - MK-404
                        - MK-101
                        - MK-301
                        - MK-202
                        - MK-603
                        - MK-806
                        - MK-605
                        - ML-BKO
                        - ML-7
                        - ML-1
                        - ML-8
                        - ML-2
                        - ML-5
                        - ML-4
                        - ML-3
                        - ML-6
                        - MM-07
                        - MM-02
                        - MM-14
                        - MM-11
                        - MM-12
                        - MM-13
                        - MM-03
                        - MM-04
                        - MM-15
                        - MM-18
                        - MM-16
                        - MM-01
                        - MM-17
                        - MM-05
                        - MM-06
                        - MN-071
                        - MN-037
                        - MN-061
                        - MN-063
                        - MN-065
                        - MN-043
                        - MN-035
                        - MN-055
                        - MN-049
                        - MN-047
                        - MN-1
                        - MO-XX-1
                        - MP-XX-1
                        - MQ-XX-1
                        - MR-07
                        - MR-03
                        - MR-05
                        - MR-08
                        - MR-04
                        - MR-10
                        - MR-01
                        - MR-02
                        - MR-12
                        - MR-13
                        - MR-09
                        - MR-11
                        - MR-06
                        - MS-XX-1
                        - MS-XX-2
                        - MT-01
                        - MT-02
                        - MT-03
                        - MT-04
                        - MT-05
                        - MT-06
                        - MT-07
                        - MT-08
                        - MT-09
                        - MT-10
                        - MT-14
                        - MT-15
                        - MT-16
                        - MT-17
                        - MT-11
                        - MT-12
                        - MT-18
                        - MT-19
                        - MT-20
                        - MT-21
                        - MT-22
                        - MT-23
                        - MT-24
                        - MT-25
                        - MT-26
                        - MT-27
                        - MT-28
                        - MT-29
                        - MT-30
                        - MT-31
                        - MT-32
                        - MT-33
                        - MT-34
                        - MT-35
                        - MT-36
                        - MT-37
                        - MT-38
                        - MT-39
                        - MT-40
                        - MT-41
                        - MT-42
                        - MT-43
                        - MT-45
                        - MT-46
                        - MT-49
                        - MT-48
                        - MT-53
                        - MT-51
                        - MT-52
                        - MT-54
                        - MT-55
                        - MT-56
                        - MT-57
                        - MT-58
                        - MT-59
                        - MT-60
                        - MT-61
                        - MT-62
                        - MT-63
                        - MT-64
                        - MT-65
                        - MT-67
                        - MT-68
                        - MU-BL
                        - MU-FL
                        - MU-GP
                        - MU-MO
                        - MU-PA
                        - MU-PW
                        - MU-PL
                        - MU-RR
                        - MU-RO
                        - MU-SA
                        - MV-01
                        - MV-03
                        - MV-04
                        - MV-05
                        - MV-MLE
                        - MV-12
                        - MV-13
                        - MV-00
                        - MV-28
                        - MV-20
                        - MV-25
                        - MV-17
                        - MW-BA
                        - MW-BL
                        - MW-CK
                        - MW-CR
                        - MW-DE
                        - MW-DO
                        - MW-KR
                        - MW-LI
                        - MW-MH
                        - MW-MG
                        - MW-MW
                        - MW-MZ
                        - MW-NE
                        - MW-NK
                        - MW-PH
                        - MW-SA
                        - MW-TH
                        - MW-ZO
                        - MX-AGU
                        - MX-BCN
                        - MX-BCS
                        - MX-CAM
                        - MX-CHP
                        - MX-CHH
                        - MX-CMX
                        - MX-COA
                        - MX-COL
                        - MX-DUR
                        - MX-GUA
                        - MX-GRO
                        - MX-HID
                        - MX-JAL
                        - MX-MEX
                        - MX-MIC
                        - MX-MOR
                        - MX-NAY
                        - MX-NLE
                        - MX-OAX
                        - MX-PUE
                        - MX-QUE
                        - MX-ROO
                        - MX-SLP
                        - MX-SIN
                        - MX-SON
                        - MX-TAB
                        - MX-TAM
                        - MX-TLA
                        - MX-VER
                        - MX-YUC
                        - MX-ZAC
                        - MY-01
                        - MY-02
                        - MY-03
                        - MY-04
                        - MY-05
                        - MY-06
                        - MY-08
                        - MY-09
                        - MY-07
                        - MY-12
                        - MY-13
                        - MY-10
                        - MY-11
                        - MY-14
                        - MY-15
                        - MY-16
                        - MZ-P
                        - MZ-G
                        - MZ-I
                        - MZ-B
                        - MZ-L
                        - MZ-N
                        - MZ-A
                        - MZ-S
                        - MZ-T
                        - MZ-Q
                        - NA-ER
                        - NA-HA
                        - NA-KA
                        - NA-KE
                        - NA-KW
                        - NA-KH
                        - NA-KU
                        - NA-OW
                        - NA-OH
                        - NA-OS
                        - NA-ON
                        - NA-OT
                        - NA-OD
                        - NA-CA
                        - NC-XX-1
                        - NC-XX-2
                        - NE-1
                        - NE-2
                        - NE-3
                        - NE-8
                        - NE-5
                        - NE-6
                        - NE-7
                        - NF-XX-1
                        - NG-AB
                        - NG-FC
                        - NG-AD
                        - NG-AK
                        - NG-AN
                        - NG-BA
                        - NG-BY
                        - NG-BE
                        - NG-BO
                        - NG-CR
                        - NG-DE
                        - NG-EB
                        - NG-ED
                        - NG-EK
                        - NG-EN
                        - NG-GO
                        - NG-IM
                        - NG-JI
                        - NG-KD
                        - NG-KN
                        - NG-KT
                        - NG-KE
                        - NG-KO
                        - NG-KW
                        - NG-LA
                        - NG-NA
                        - NG-NI
                        - NG-OG
                        - NG-ON
                        - NG-OS
                        - NG-OY
                        - NG-PL
                        - NG-RI
                        - NG-SO
                        - NG-TA
                        - NG-YO
                        - NG-ZA
                        - NI-BO
                        - NI-CA
                        - NI-CI
                        - NI-CO
                        - NI-AN
                        - NI-AS
                        - NI-ES
                        - NI-GR
                        - NI-JI
                        - NI-LE
                        - NI-MD
                        - NI-MN
                        - NI-MS
                        - NI-MT
                        - NI-NS
                        - NI-SJ
                        - NI-RI
                        - NL-DR
                        - NL-FL
                        - NL-FR
                        - NL-GE
                        - NL-GR
                        - NL-LI
                        - NL-NB
                        - NL-NH
                        - NL-OV
                        - NL-UT
                        - NL-ZE
                        - NL-ZH
                        - NO-42
                        - NO-34
                        - NO-15
                        - NO-18
                        - NO-03
                        - NO-11
                        - NO-54
                        - NO-50
                        - NO-38
                        - NO-46
                        - NO-30
                        - NP-BA
                        - NP-BH
                        - NP-DH
                        - NP-GA
                        - NP-JA
                        - NP-KA
                        - NP-KO
                        - NP-LU
                        - NP-MA
                        - NP-ME
                        - NP-NA
                        - NP-RA
                        - NP-SA
                        - NP-SE
                        - NR-01
                        - NR-03
                        - NR-14
                        - NU-XX-1
                        - NZ-AUK
                        - NZ-BOP
                        - NZ-CAN
                        - NZ-CIT
                        - NZ-GIS
                        - NZ-HKB
                        - NZ-MWT
                        - NZ-MBH
                        - NZ-NSN
                        - NZ-NTL
                        - NZ-OTA
                        - NZ-STL
                        - NZ-TKI
                        - NZ-TAS
                        - NZ-WKO
                        - NZ-WGN
                        - NZ-WTC
                        - OM-DA
                        - OM-BU
                        - OM-WU
                        - OM-ZA
                        - OM-BJ
                        - OM-SJ
                        - OM-MA
                        - OM-MU
                        - OM-BS
                        - OM-SS
                        - OM-ZU
                        - PA-1
                        - PA-4
                        - PA-2
                        - PA-3
                        - PA-5
                        - PA-KY
                        - PA-6
                        - PA-7
                        - PA-NB
                        - PA-8
                        - PA-9
                        - PE-AMA
                        - PE-ANC
                        - PE-APU
                        - PE-ARE
                        - PE-AYA
                        - PE-CAJ
                        - PE-CUS
                        - PE-CAL
                        - PE-HUV
                        - PE-HUC
                        - PE-ICA
                        - PE-JUN
                        - PE-LAL
                        - PE-LAM
                        - PE-LIM
                        - PE-LOR
                        - PE-MDD
                        - PE-MOQ
                        - PE-PAS
                        - PE-PIU
                        - PE-PUN
                        - PE-SAM
                        - PE-TAC
                        - PE-TUM
                        - PE-UCA
                        - PF-XX-1
                        - PF-XX-2
                        - PF-XX-3
                        - PF-XX-4
                        - PF-XX-5
                        - PG-NSB
                        - PG-CPM
                        - PG-CPK
                        - PG-EBR
                        - PG-EHG
                        - PG-ESW
                        - PG-MPM
                        - PG-MRL
                        - PG-MBA
                        - PG-MPL
                        - PG-NCD
                        - PG-SHM
                        - PG-WBK
                        - PG-SAN
                        - PG-WPD
                        - PG-WHM
                        - PH-ABR
                        - PH-AGN
                        - PH-AGS
                        - PH-AKL
                        - PH-ALB
                        - PH-ANT
                        - PH-APA
                        - PH-AUR
                        - PH-BAS
                        - PH-BAN
                        - PH-BTN
                        - PH-BTG
                        - PH-BEN
                        - PH-BIL
                        - PH-BOH
                        - PH-BUK
                        - PH-BUL
                        - PH-CAG
                        - PH-CAN
                        - PH-CAS
                        - PH-CAM
                        - PH-CAP
                        - PH-CAT
                        - PH-CAV
                        - PH-CEB
                        - PH-NCO
                        - PH-DAO
                        - PH-COM
                        - PH-DAV
                        - PH-DAS
                        - PH-DIN
                        - PH-EAS
                        - PH-GUI
                        - PH-IFU
                        - PH-ILN
                        - PH-ILS
                        - PH-ILI
                        - PH-ISA
                        - PH-KAL
                        - PH-LUN
                        - PH-LAG
                        - PH-LAN
                        - PH-LAS
                        - PH-LEY
                        - PH-MAG
                        - PH-MAD
                        - PH-MAS
                        - PH-MDC
                        - PH-MDR
                        - PH-MSC
                        - PH-MSR
                        - PH-MOU
                        - PH-00
                        - PH-NEC
                        - PH-NER
                        - PH-NSA
                        - PH-NUE
                        - PH-NUV
                        - PH-PLW
                        - PH-PAM
                        - PH-PAN
                        - PH-QUE
                        - PH-QUI
                        - PH-RIZ
                        - PH-ROM
                        - PH-WSA
                        - PH-SAR
                        - PH-SIG
                        - PH-SOR
                        - PH-SCO
                        - PH-SLE
                        - PH-SUK
                        - PH-SLU
                        - PH-SUN
                        - PH-SUR
                        - PH-TAR
                        - PH-TAW
                        - PH-ZMB
                        - PH-ZSI
                        - PH-ZAN
                        - PH-ZAS
                        - PK-JK
                        - PK-BA
                        - PK-GB
                        - PK-IS
                        - PK-KP
                        - PK-PB
                        - PK-SD
                        - PL-02
                        - PL-04
                        - PL-10
                        - PL-06
                        - PL-08
                        - PL-12
                        - PL-14
                        - PL-16
                        - PL-18
                        - PL-20
                        - PL-22
                        - PL-24
                        - PL-26
                        - PL-28
                        - PL-30
                        - PL-32
                        - PM-XX-1
                        - PN-XX-1
                        - PR-XX-1
                        - PR-XX-2
                        - PR-XX-3
                        - PR-XX-4
                        - PR-XX-5
                        - PR-XX-6
                        - PR-XX-7
                        - PR-XX-8
                        - PR-XX-9
                        - PR-XX-10
                        - PR-XX-11
                        - PR-XX-12
                        - PR-XX-13
                        - PR-XX-14
                        - PR-XX-15
                        - PR-XX-16
                        - PR-XX-17
                        - PR-XX-18
                        - PR-XX-19
                        - PR-XX-20
                        - PR-XX-21
                        - PR-XX-22
                        - PR-XX-23
                        - PR-XX-24
                        - PR-XX-25
                        - PR-XX-26
                        - PR-XX-27
                        - PR-XX-28
                        - PR-XX-29
                        - PR-XX-30
                        - PR-XX-31
                        - PR-XX-32
                        - PR-XX-33
                        - PR-XX-34
                        - PR-XX-35
                        - PR-XX-36
                        - PR-XX-37
                        - PR-XX-38
                        - PR-XX-39
                        - PR-XX-40
                        - PR-XX-41
                        - PR-XX-42
                        - PR-XX-43
                        - PR-XX-44
                        - PR-XX-45
                        - PR-XX-46
                        - PR-XX-47
                        - PR-XX-48
                        - PR-XX-49
                        - PR-XX-50
                        - PR-XX-51
                        - PR-XX-52
                        - PR-XX-53
                        - PR-XX-54
                        - PR-XX-55
                        - PR-XX-56
                        - PR-XX-57
                        - PR-XX-58
                        - PR-XX-59
                        - PR-XX-60
                        - PR-XX-61
                        - PR-XX-62
                        - PR-XX-63
                        - PR-XX-64
                        - PR-XX-65
                        - PR-XX-66
                        - PR-XX-67
                        - PR-XX-68
                        - PR-XX-69
                        - PR-XX-70
                        - PR-XX-71
                        - PR-XX-72
                        - PR-XX-73
                        - PR-XX-74
                        - PR-XX-75
                        - PR-XX-76
                        - PS-BTH
                        - PS-DEB
                        - PS-GZA
                        - PS-HBN
                        - PS-JEN
                        - PS-JRH
                        - PS-JEM
                        - PS-KYS
                        - PS-NBS
                        - PS-QQA
                        - PS-RFH
                        - PS-RBH
                        - PS-SLT
                        - PS-TBS
                        - PS-TKM
                        - PT-01
                        - PT-02
                        - PT-03
                        - PT-04
                        - PT-05
                        - PT-06
                        - PT-07
                        - PT-08
                        - PT-09
                        - PT-10
                        - PT-11
                        - PT-12
                        - PT-13
                        - PT-30
                        - PT-20
                        - PT-14
                        - PT-15
                        - PT-16
                        - PT-17
                        - PT-18
                        - PW-004
                        - PW-100
                        - PW-150
                        - PW-212
                        - PW-214
                        - PW-222
                        - PY-10
                        - PY-13
                        - PY-ASU
                        - PY-19
                        - PY-5
                        - PY-6
                        - PY-14
                        - PY-11
                        - PY-1
                        - PY-3
                        - PY-4
                        - PY-7
                        - PY-8
                        - PY-12
                        - PY-9
                        - PY-15
                        - PY-2
                        - QA-DA
                        - QA-KH
                        - QA-WA
                        - QA-RA
                        - QA-MS
                        - QA-ZA
                        - QA-US
                        - RE-XX-1
                        - RO-AB
                        - RO-AR
                        - RO-AG
                        - RO-BC
                        - RO-BH
                        - RO-BN
                        - RO-BT
                        - RO-BR
                        - RO-BV
                        - RO-B
                        - RO-BZ
                        - RO-CL
                        - RO-CS
                        - RO-CJ
                        - RO-CT
                        - RO-CV
                        - RO-DB
                        - RO-DJ
                        - RO-GL
                        - RO-GR
                        - RO-GJ
                        - RO-HR
                        - RO-HD
                        - RO-IL
                        - RO-IS
                        - RO-IF
                        - RO-MM
                        - RO-MH
                        - RO-MS
                        - RO-NT
                        - RO-OT
                        - RO-PH
                        - RO-SJ
                        - RO-SM
                        - RO-SB
                        - RO-SV
                        - RO-TR
                        - RO-TM
                        - RO-TL
                        - RO-VL
                        - RO-VS
                        - RO-VN
                        - RS-00
                        - RS-14
                        - RS-11
                        - RS-23
                        - RS-06
                        - RS-04
                        - RS-09
                        - RS-28
                        - RS-08
                        - RS-17
                        - RS-20
                        - RS-24
                        - RS-26
                        - RS-22
                        - RS-10
                        - RS-13
                        - RS-27
                        - RS-19
                        - RS-18
                        - RS-01
                        - RS-03
                        - RS-02
                        - RS-07
                        - RS-12
                        - RS-21
                        - RS-15
                        - RS-05
                        - RS-16
                        - RU-AD
                        - RU-AL
                        - RU-ALT
                        - RU-AMU
                        - RU-ARK
                        - RU-AST
                        - RU-BA
                        - RU-BEL
                        - RU-BRY
                        - RU-BU
                        - RU-CE
                        - RU-CHE
                        - RU-CHU
                        - RU-CU
                        - RU-DA
                        - RU-IN
                        - RU-IRK
                        - RU-IVA
                        - RU-KB
                        - RU-KGD
                        - RU-KL
                        - RU-KLU
                        - RU-KAM
                        - RU-KC
                        - RU-KR
                        - RU-KEM
                        - RU-KHA
                        - RU-KK
                        - RU-KHM
                        - RU-KIR
                        - RU-KO
                        - RU-KOS
                        - RU-KDA
                        - RU-KYA
                        - RU-KGN
                        - RU-KRS
                        - RU-LEN
                        - RU-LIP
                        - RU-MAG
                        - RU-ME
                        - RU-MO
                        - RU-MOS
                        - RU-MOW
                        - RU-MUR
                        - RU-NEN
                        - RU-NIZ
                        - RU-NGR
                        - RU-NVS
                        - RU-OMS
                        - RU-ORE
                        - RU-ORL
                        - RU-PNZ
                        - RU-PER
                        - RU-PRI
                        - RU-PSK
                        - RU-ROS
                        - RU-RYA
                        - RU-SA
                        - RU-SAK
                        - RU-SAM
                        - RU-SPE
                        - RU-SAR
                        - RU-SE
                        - RU-SMO
                        - RU-STA
                        - RU-SVE
                        - RU-TAM
                        - RU-TA
                        - RU-TOM
                        - RU-TUL
                        - RU-TVE
                        - RU-TYU
                        - RU-TY
                        - RU-UD
                        - RU-ULY
                        - RU-VLA
                        - RU-VGG
                        - RU-VLG
                        - RU-VOR
                        - RU-YAN
                        - RU-YAR
                        - RU-YEV
                        - RU-ZAB
                        - RW-02
                        - RW-03
                        - RW-04
                        - RW-05
                        - RW-01
                        - SA-14
                        - SA-11
                        - SA-08
                        - SA-12
                        - SA-03
                        - SA-05
                        - SA-01
                        - SA-04
                        - SA-06
                        - SA-09
                        - SA-02
                        - SA-10
                        - SA-07
                        - SB-CH
                        - SB-GU
                        - SB-WE
                        - SC-02
                        - SC-05
                        - SC-01
                        - SC-06
                        - SC-07
                        - SC-08
                        - SC-10
                        - SC-11
                        - SC-16
                        - SC-13
                        - SC-14
                        - SC-15
                        - SC-20
                        - SC-23
                        - SD-NB
                        - SD-DC
                        - SD-GD
                        - SD-GZ
                        - SD-KA
                        - SD-KH
                        - SD-DN
                        - SD-KN
                        - SD-NO
                        - SD-RS
                        - SD-NR
                        - SD-SI
                        - SD-DS
                        - SD-KS
                        - SD-DW
                        - SD-GK
                        - SD-NW
                        - SE-K
                        - SE-W
                        - SE-X
                        - SE-I
                        - SE-N
                        - SE-Z
                        - SE-F
                        - SE-H
                        - SE-G
                        - SE-BD
                        - SE-T
                        - SE-E
                        - SE-M
                        - SE-D
                        - SE-AB
                        - SE-C
                        - SE-S
                        - SE-AC
                        - SE-Y
                        - SE-U
                        - SE-O
                        - SG-XX-1
                        - SH-HL
                        - SI-001
                        - SI-213
                        - SI-195
                        - SI-002
                        - SI-148
                        - SI-149
                        - SI-003
                        - SI-150
                        - SI-004
                        - SI-005
                        - SI-006
                        - SI-151
                        - SI-007
                        - SI-009
                        - SI-008
                        - SI-152
                        - SI-011
                        - SI-012
                        - SI-013
                        - SI-014
                        - SI-196
                        - SI-015
                        - SI-017
                        - SI-018
                        - SI-019
                        - SI-154
                        - SI-020
                        - SI-155
                        - SI-021
                        - SI-156
                        - SI-023
                        - SI-024
                        - SI-025
                        - SI-026
                        - SI-207
                        - SI-029
                        - SI-031
                        - SI-158
                        - SI-032
                        - SI-159
                        - SI-160
                        - SI-161
                        - SI-162
                        - SI-034
                        - SI-035
                        - SI-036
                        - SI-037
                        - SI-038
                        - SI-039
                        - SI-040
                        - SI-041
                        - SI-042
                        - SI-043
                        - SI-044
                        - SI-045
                        - SI-046
                        - SI-047
                        - SI-048
                        - SI-049
                        - SI-164
                        - SI-050
                        - SI-197
                        - SI-165
                        - SI-052
                        - SI-053
                        - SI-166
                        - SI-054
                        - SI-055
                        - SI-056
                        - SI-057
                        - SI-058
                        - SI-059
                        - SI-060
                        - SI-061
                        - SI-063
                        - SI-208
                        - SI-064
                        - SI-065
                        - SI-066
                        - SI-167
                        - SI-067
                        - SI-068
                        - SI-069
                        - SI-198
                        - SI-070
                        - SI-168
                        - SI-071
                        - SI-072
                        - SI-073
                        - SI-074
                        - SI-169
                        - SI-075
                        - SI-212
                        - SI-170
                        - SI-076
                        - SI-199
                        - SI-077
                        - SI-079
                        - SI-080
                        - SI-081
                        - SI-082
                        - SI-083
                        - SI-084
                        - SI-085
                        - SI-086
                        - SI-171
                        - SI-087
                        - SI-090
                        - SI-091
                        - SI-092
                        - SI-172
                        - SI-200
                        - SI-173
                        - SI-094
                        - SI-174
                        - SI-095
                        - SI-175
                        - SI-096
                        - SI-097
                        - SI-098
                        - SI-099
                        - SI-100
                        - SI-101
                        - SI-102
                        - SI-103
                        - SI-176
                        - SI-209
                        - SI-201
                        - SI-104
                        - SI-106
                        - SI-105
                        - SI-108
                        - SI-033
                        - SI-109
                        - SI-183
                        - SI-117
                        - SI-118
                        - SI-119
                        - SI-120
                        - SI-211
                        - SI-110
                        - SI-111
                        - SI-121
                        - SI-122
                        - SI-123
                        - SI-112
                        - SI-113
                        - SI-114
                        - SI-124
                        - SI-206
                        - SI-125
                        - SI-194
                        - SI-179
                        - SI-180
                        - SI-126
                        - SI-115
                        - SI-127
                        - SI-203
                        - SI-204
                        - SI-182
                        - SI-116
                        - SI-210
                        - SI-205
                        - SI-184
                        - SI-010
                        - SI-128
                        - SI-129
                        - SI-130
                        - SI-185
                        - SI-131
                        - SI-186
                        - SI-132
                        - SI-133
                        - SI-187
                        - SI-134
                        - SI-188
                        - SI-135
                        - SI-136
                        - SI-137
                        - SI-138
                        - SI-139
                        - SI-189
                        - SI-140
                        - SI-141
                        - SI-142
                        - SI-190
                        - SI-143
                        - SI-146
                        - SI-191
                        - SI-147
                        - SI-144
                        - SI-193
                        - SJ-XX-1
                        - SK-BC
                        - SK-BL
                        - SK-KI
                        - SK-NI
                        - SK-PV
                        - SK-TC
                        - SK-TA
                        - SK-ZI
                        - SL-E
                        - SL-N
                        - SL-S
                        - SL-W
                        - SM-07
                        - SM-03
                        - SM-04
                        - SM-09
                        - SN-DK
                        - SN-DB
                        - SN-FK
                        - SN-KA
                        - SN-KL
                        - SN-KE
                        - SN-KD
                        - SN-LG
                        - SN-MT
                        - SN-SL
                        - SN-SE
                        - SN-TC
                        - SN-TH
                        - SN-ZG
                        - SO-AW
                        - SO-BN
                        - SO-BR
                        - SO-GA
                        - SO-JH
                        - SO-MU
                        - SO-NU
                        - SO-SH
                        - SO-TO
                        - SO-WO
                        - SR-BR
                        - SR-CM
                        - SR-NI
                        - SR-PR
                        - SR-PM
                        - SR-SI
                        - SR-WA
                        - SS-EC
                        - SS-EE
                        - SS-JG
                        - SS-LK
                        - SS-BN
                        - SS-NU
                        - SS-EW
                        - ST-01
                        - SV-AH
                        - SV-CA
                        - SV-CH
                        - SV-CU
                        - SV-LI
                        - SV-PA
                        - SV-UN
                        - SV-MO
                        - SV-SM
                        - SV-SS
                        - SV-SV
                        - SV-SA
                        - SV-SO
                        - SV-US
                        - SX-XX-1
                        - SY-HA
                        - SY-LA
                        - SY-QU
                        - SY-RA
                        - SY-SU
                        - SY-DR
                        - SY-DY
                        - SY-DI
                        - SY-HL
                        - SY-HM
                        - SY-HI
                        - SY-ID
                        - SY-RD
                        - SY-TA
                        - SZ-HH
                        - SZ-LU
                        - SZ-MA
                        - TC-XX-1
                        - TD-BG
                        - TD-CB
                        - TD-GR
                        - TD-LO
                        - TD-ME
                        - TD-OD
                        - TD-ND
                        - TF-XX-1
                        - TG-C
                        - TG-K
                        - TG-M
                        - TG-P
                        - TH-37
                        - TH-15
                        - TH-38
                        - TH-31
                        - TH-24
                        - TH-18
                        - TH-36
                        - TH-22
                        - TH-50
                        - TH-57
                        - TH-20
                        - TH-86
                        - TH-46
                        - TH-62
                        - TH-71
                        - TH-40
                        - TH-81
                        - TH-10
                        - TH-52
                        - TH-51
                        - TH-42
                        - TH-16
                        - TH-58
                        - TH-44
                        - TH-49
                        - TH-26
                        - TH-73
                        - TH-48
                        - TH-30
                        - TH-60
                        - TH-80
                        - TH-55
                        - TH-96
                        - TH-39
                        - TH-43
                        - TH-12
                        - TH-13
                        - TH-94
                        - TH-82
                        - TH-93
                        - TH-56
                        - TH-67
                        - TH-76
                        - TH-66
                        - TH-65
                        - TH-14
                        - TH-54
                        - TH-83
                        - TH-25
                        - TH-77
                        - TH-85
                        - TH-70
                        - TH-21
                        - TH-45
                        - TH-27
                        - TH-47
                        - TH-11
                        - TH-74
                        - TH-75
                        - TH-19
                        - TH-91
                        - TH-33
                        - TH-17
                        - TH-90
                        - TH-64
                        - TH-72
                        - TH-84
                        - TH-32
                        - TH-63
                        - TH-92
                        - TH-23
                        - TH-34
                        - TH-41
                        - TH-61
                        - TH-53
                        - TH-95
                        - TH-35
                        - TJ-DU
                        - TJ-KT
                        - TJ-RA
                        - TJ-SU
                        - TK-XX-1
                        - TL-AN
                        - TL-BO
                        - TL-CO
                        - TL-DI
                        - TL-LI
                        - TM-A
                        - TM-B
                        - TM-D
                        - TM-L
                        - TM-M
                        - TN-31
                        - TN-13
                        - TN-23
                        - TN-81
                        - TN-71
                        - TN-32
                        - TN-41
                        - TN-42
                        - TN-73
                        - TN-12
                        - TN-14
                        - TN-33
                        - TN-53
                        - TN-82
                        - TN-52
                        - TN-21
                        - TN-61
                        - TN-43
                        - TN-34
                        - TN-51
                        - TN-83
                        - TN-72
                        - TN-11
                        - TN-22
                        - TO-02
                        - TO-03
                        - TO-04
                        - TR-01
                        - TR-02
                        - TR-03
                        - TR-04
                        - TR-68
                        - TR-05
                        - TR-06
                        - TR-07
                        - TR-75
                        - TR-08
                        - TR-09
                        - TR-10
                        - TR-74
                        - TR-72
                        - TR-69
                        - TR-11
                        - TR-12
                        - TR-13
                        - TR-14
                        - TR-15
                        - TR-16
                        - TR-17
                        - TR-18
                        - TR-19
                        - TR-20
                        - TR-21
                        - TR-81
                        - TR-22
                        - TR-23
                        - TR-24
                        - TR-25
                        - TR-26
                        - TR-27
                        - TR-28
                        - TR-29
                        - TR-30
                        - TR-31
                        - TR-76
                        - TR-32
                        - TR-34
                        - TR-35
                        - TR-46
                        - TR-78
                        - TR-70
                        - TR-36
                        - TR-37
                        - TR-38
                        - TR-79
                        - TR-71
                        - TR-39
                        - TR-40
                        - TR-41
                        - TR-42
                        - TR-43
                        - TR-44
                        - TR-45
                        - TR-47
                        - TR-33
                        - TR-48
                        - TR-49
                        - TR-50
                        - TR-51
                        - TR-52
                        - TR-80
                        - TR-53
                        - TR-54
                        - TR-55
                        - TR-63
                        - TR-56
                        - TR-57
                        - TR-73
                        - TR-58
                        - TR-59
                        - TR-60
                        - TR-61
                        - TR-62
                        - TR-64
                        - TR-65
                        - TR-77
                        - TR-66
                        - TR-67
                        - TT-ARI
                        - TT-CHA
                        - TT-CTT
                        - TT-DMN
                        - TT-MRC
                        - TT-PED
                        - TT-PTF
                        - TT-POS
                        - TT-PRT
                        - TT-SFO
                        - TT-SJL
                        - TT-SGE
                        - TT-SIP
                        - TT-TOB
                        - TT-TUP
                        - TV-FUN
                        - TW-CHA
                        - TW-CYQ
                        - TW-HSQ
                        - TW-HUA
                        - TW-KHH
                        - TW-KEE
                        - TW-KIN
                        - TW-LIE
                        - TW-MIA
                        - TW-NAN
                        - TW-NWT
                        - TW-PEN
                        - TW-PIF
                        - TW-TXG
                        - TW-TNN
                        - TW-TPE
                        - TW-TTT
                        - TW-TAO
                        - TW-ILA
                        - TW-YUN
                        - TZ-01
                        - TZ-02
                        - TZ-03
                        - TZ-27
                        - TZ-04
                        - TZ-05
                        - TZ-06
                        - TZ-07
                        - TZ-28
                        - TZ-08
                        - TZ-09
                        - TZ-11
                        - TZ-12
                        - TZ-26
                        - TZ-13
                        - TZ-14
                        - TZ-15
                        - TZ-16
                        - TZ-17
                        - TZ-18
                        - TZ-29
                        - TZ-19
                        - TZ-20
                        - TZ-21
                        - TZ-22
                        - TZ-30
                        - TZ-23
                        - TZ-31
                        - TZ-24
                        - TZ-25
                        - UA-43
                        - UA-71
                        - UA-74
                        - UA-77
                        - UA-12
                        - UA-14
                        - UA-26
                        - UA-63
                        - UA-65
                        - UA-68
                        - UA-35
                        - UA-30
                        - UA-32
                        - UA-09
                        - UA-46
                        - UA-48
                        - UA-51
                        - UA-53
                        - UA-56
                        - UA-40
                        - UA-59
                        - UA-61
                        - UA-05
                        - UA-07
                        - UA-21
                        - UA-23
                        - UA-18
                        - UG-314
                        - UG-301
                        - UG-322
                        - UG-323
                        - UG-315
                        - UG-324
                        - UG-216
                        - UG-316
                        - UG-302
                        - UG-303
                        - UG-217
                        - UG-218
                        - UG-201
                        - UG-420
                        - UG-117
                        - UG-219
                        - UG-118
                        - UG-220
                        - UG-225
                        - UG-401
                        - UG-402
                        - UG-202
                        - UG-221
                        - UG-120
                        - UG-226
                        - UG-317
                        - UG-121
                        - UG-304
                        - UG-403
                        - UG-417
                        - UG-203
                        - UG-418
                        - UG-204
                        - UG-318
                        - UG-404
                        - UG-405
                        - UG-213
                        - UG-101
                        - UG-222
                        - UG-122
                        - UG-102
                        - UG-205
                        - UG-413
                        - UG-206
                        - UG-406
                        - UG-207
                        - UG-112
                        - UG-407
                        - UG-103
                        - UG-227
                        - UG-419
                        - UG-421
                        - UG-408
                        - UG-305
                        - UG-319
                        - UG-306
                        - UG-208
                        - UG-228
                        - UG-123
                        - UG-422
                        - UG-415
                        - UG-326
                        - UG-307
                        - UG-229
                        - UG-104
                        - UG-124
                        - UG-114
                        - UG-223
                        - UG-105
                        - UG-409
                        - UG-214
                        - UG-209
                        - UG-410
                        - UG-423
                        - UG-115
                        - UG-308
                        - UG-309
                        - UG-106
                        - UG-107
                        - UG-108
                        - UG-311
                        - UG-116
                        - UG-109
                        - UG-230
                        - UG-224
                        - UG-327
                        - UG-310
                        - UG-231
                        - UG-411
                        - UG-328
                        - UG-321
                        - UG-312
                        - UG-210
                        - UG-110
                        - UG-425
                        - UG-412
                        - UG-111
                        - UG-232
                        - UG-426
                        - UG-215
                        - UG-211
                        - UG-212
                        - UG-113
                        - UG-313
                        - UG-330
                        - UM-95
                        - US-AL
                        - US-AK
                        - US-AZ
                        - US-AR
                        - US-CA
                        - US-CO
                        - US-CT
                        - US-DE
                        - US-DC
                        - US-FL
                        - US-GA
                        - US-HI
                        - US-ID
                        - US-IL
                        - US-IN
                        - US-IA
                        - US-KS
                        - US-KY
                        - US-LA
                        - US-ME
                        - US-MD
                        - US-MA
                        - US-MI
                        - US-MN
                        - US-MS
                        - US-MO
                        - US-MT
                        - US-NE
                        - US-NV
                        - US-NH
                        - US-NJ
                        - US-NM
                        - US-NY
                        - US-NC
                        - US-ND
                        - US-OH
                        - US-OK
                        - US-OR
                        - US-PA
                        - US-RI
                        - US-SC
                        - US-SD
                        - US-TN
                        - US-TX
                        - US-UT
                        - US-VT
                        - US-VA
                        - US-WA
                        - US-WV
                        - US-WI
                        - US-WY
                        - UY-AR
                        - UY-CA
                        - UY-CL
                        - UY-CO
                        - UY-DU
                        - UY-FS
                        - UY-FD
                        - UY-LA
                        - UY-MA
                        - UY-MO
                        - UY-PA
                        - UY-RN
                        - UY-RV
                        - UY-RO
                        - UY-SA
                        - UY-SJ
                        - UY-SO
                        - UY-TA
                        - UY-TT
                        - UZ-AN
                        - UZ-BU
                        - UZ-FA
                        - UZ-JI
                        - UZ-NG
                        - UZ-NW
                        - UZ-QA
                        - UZ-QR
                        - UZ-SA
                        - UZ-SI
                        - UZ-SU
                        - UZ-TK
                        - UZ-XO
                        - VA-XX-1
                        - VC-01
                        - VC-06
                        - VC-04
                        - VC-05
                        - VE-Z
                        - VE-B
                        - VE-C
                        - VE-D
                        - VE-E
                        - VE-F
                        - VE-G
                        - VE-H
                        - VE-Y
                        - VE-A
                        - VE-I
                        - VE-J
                        - VE-X
                        - VE-K
                        - VE-L
                        - VE-M
                        - VE-N
                        - VE-O
                        - VE-P
                        - VE-R
                        - VE-S
                        - VE-T
                        - VE-U
                        - VE-V
                        - VG-XX-1
                        - VI-XX-1
                        - VN-44
                        - VN-43
                        - VN-54
                        - VN-53
                        - VN-55
                        - VN-56
                        - VN-50
                        - VN-31
                        - VN-57
                        - VN-58
                        - VN-40
                        - VN-59
                        - VN-CT
                        - VN-04
                        - VN-DN
                        - VN-33
                        - VN-72
                        - VN-71
                        - VN-39
                        - VN-45
                        - VN-30
                        - VN-03
                        - VN-63
                        - VN-HN
                        - VN-23
                        - VN-61
                        - VN-HP
                        - VN-73
                        - VN-SG
                        - VN-14
                        - VN-66
                        - VN-34
                        - VN-47
                        - VN-28
                        - VN-01
                        - VN-35
                        - VN-09
                        - VN-02
                        - VN-41
                        - VN-67
                        - VN-22
                        - VN-18
                        - VN-36
                        - VN-68
                        - VN-32
                        - VN-24
                        - VN-27
                        - VN-29
                        - VN-13
                        - VN-25
                        - VN-52
                        - VN-05
                        - VN-37
                        - VN-20
                        - VN-69
                        - VN-21
                        - VN-26
                        - VN-46
                        - VN-51
                        - VN-07
                        - VN-49
                        - VN-70
                        - VN-06
                        - VU-SEE
                        - VU-TAE
                        - VU-TOB
                        - WF-SG
                        - WF-UV
                        - WS-AT
                        - WS-FA
                        - WS-TU
                        - YE-AD
                        - YE-AM
                        - YE-AB
                        - YE-DA
                        - YE-BA
                        - YE-HU
                        - YE-SA
                        - YE-DH
                        - YE-HD
                        - YE-HJ
                        - YE-IB
                        - YE-LA
                        - YE-MA
                        - YE-SD
                        - YE-SN
                        - YE-SH
                        - YE-TA
                        - YT-XX-1
                        - YT-XX-2
                        - YT-XX-3
                        - YT-XX-4
                        - YT-XX-5
                        - YT-XX-6
                        - ZA-EC
                        - ZA-FS
                        - ZA-GP
                        - ZA-KZN
                        - ZA-LP
                        - ZA-MP
                        - ZA-NW
                        - ZA-NC
                        - ZA-WC
                        - ZM-02
                        - ZM-08
                        - ZM-03
                        - ZM-04
                        - ZM-09
                        - ZM-10
                        - ZM-06
                        - ZM-05
                        - ZM-07
                        - ZM-01
                        - ZW-BU
                        - ZW-HA
                        - ZW-MA
                        - ZW-MC
                        - ZW-ME
                        - ZW-MW
                        - ZW-MV
                        - ZW-MN
                        - ZW-MS
                        - ZW-MI
            required:
                - value
                - source_value
        Employee:
            type: "object"
            properties:
                custom_fields:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/EmployeeCustomFields'
                    description: "The employee custom fields"
                avatar:
                    allOf:
                        - $ref: '#/components/schemas/Image'
                    description: "The employee avatar"
                    example: "https://example.com/avatar.png"
                created_at:
                    type: "string"
                    description: "The created_at date"
                    example: "2023-06-14T01:00:00Z"
                personal_phone_number:
                    type: "string"
                    description: "The employee personal phone number"
                    example: "+1234567890"
                work_email:
                    type: "string"
                    description: "The employee work email"
                    example: "newton@example.com"
                last_name:
                    type: "string"
                    description: "The employee last name"
                    example: "Newton"
                personal_email:
                    type: "string"
                    description: "The employee personal email"
                    example: "isaac.newton@example.com"
                home_location:
                    allOf:
                        - $ref: '#/components/schemas/HRISLocation'
                    description: "The employee home location"
                company_name:
                    type: "string"
                    description: "The employee company name"
                    example: "Example Corp"
                ethnicity:
                    allOf:
                        - $ref: '#/components/schemas/EthnicityEnum'
                    description: "The employee ethnicity"
                    example: "white"
                name:
                    type: "string"
                    description: "The employee name"
                    example: "Issac Newton"
                display_name:
                    type: "string"
                    description: "The employee display name"
                    example: "Sir Issac Newton"
                work_location:
                    allOf:
                        - $ref: '#/components/schemas/HRISLocation'
                    description: "The employee work location"
                first_name:
                    type: "string"
                    description: "The employee first name"
                    example: "Issac"
                start_date:
                    type: "string"
                    description: "The employee start date"
                    example: "2022-01-01"
                marital_status:
                    allOf:
                        - $ref: '#/components/schemas/MaritalStatusEnum'
                    description: "The employee marital status"
                    example: "single"
                work_phone_number:
                    type: "string"
                    description: "The employee work phone number"
                    example: "+1234567890"
                manager_id:
                    type: "string"
                    description: "The employee manager ID"
                    example: "67890"
                employments:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/Employment'
                    description: "The employee employments"
                updated_at:
                    type: "string"
                    description: "The updated_at date"
                    example: "2023-06-14T01:00:00Z"
                termination_date:
                    type: "string"
                    description: "The employee termination date"
                    example: "2023-06-14T00:00:00Z"
                gender:
                    allOf:
                        - $ref: '#/components/schemas/GenderEnum'
                    description: "The employee gender"
                    example: "male"
                work_anniversary:
                    type: "string"
                    description: "The employee work anniversary"
                    example: "2022-06-14T00:00:00Z"
                employment_status:
                    allOf:
                        - $ref: '#/components/schemas/EmploymentStatusEnum'
                    description: "The employee employment status"
                    example: "active"
                job_title:
                    type: "string"
                    description: "The employee job title"
                    example: "Physicist"
                date_of_birth:
                    type: "string"
                    description: "The employee date_of_birth"
                    example: "1990-01-01"
                birthday:
                    type: "string"
                    description: "The employee birthday"
                    example: "2023-06-14T00:00:00Z"
                employment_type:
                    allOf:
                        - $ref: '#/components/schemas/EmploymentTypeEnum'
                    description: "The employee employment type"
                    example: "full_time"
                employment_contract_type:
                    allOf:
                        - $ref: '#/components/schemas/EmploymentScheduleTypeEnum'
                    description: "The employment work schedule type (e.g., full-time, part-time)"
                    example: "full_time"
                tenure:
                    type: "string"
                    description: "The employee tenure"
                    example: 2
                department:
                    type: "string"
                    description: "The employee department"
                    example: "Physics"
                id:
                    type: "string"
                    description: "The employee ID"
                    example: "1687-3"
                hire_date:
                    type: "string"
                    description: "The employee hire date"
                    example: "2022-01-01"
                avatar_url:
                    type: "string"
                    description: "The employee avatar Url"
                    example: "https://example.com/avatar.png"
        Interview:
            type: "object"
            properties:
                application_id:
                    type: "string"
                end_at:
                    type: "string"
                    format: "date-time"
                created_at:
                    type: "string"
                    format: "date-time"
                updated_at:
                    type: "string"
                    format: "date-time"
                interview_stage:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/InterviewStage'
                interview_status:
                    $ref: '#/components/schemas/InterviewStatusEnum'
                interviewer_ids:
                    type: "array"
                    items:
                        type: "string"
                interviewers:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/Interviewer'
                id:
                    type: "string"
                interview_stage_id:
                    type: "string"
                interview_parts:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/InterviewPart'
                start_at:
                    type: "string"
                    format: "date-time"
                meeting_url:
                    type: "string"
            required:
                - id
                - application_id
                - interview_stage_id
                - interview_status
                - interviewer_ids
                - start_at
                - end_at
        AtsUpdateApplicationRequestDto:
            type: "object"
            properties:
                questionnaire:
                    $ref: '#/components/schemas/Questionnaire'
                candidate:
                    $ref: '#/components/schemas/ApplicationCandidate'
                candidate_id:
                    type: "string"
                job_id:
                    type: "string"
                attachments:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/ApplicationAttachment'
                location_ids:
                    type: "array"
                    items:
                        type: "string"
                application_status:
                    $ref: '#/components/schemas/ApplicationStatusEnum'
        NotesPaginated:
            type: "object"
            properties:
                raw:
                    type: "string"
                next_page:
                    type: "string"
                data:
                    type: "array"
                    items:
                        $ref: '#/components/schemas/Note'
            required:
                - next_page
                - data
        Location:
            type: "object"
            properties:
                name:
                    type: "string"
                id:
                    type: "string"
        ApplicationResult:
            type: "object"
            properties:
                raw:
                    type: "string"
                data:
                    $ref: '#/components/schemas/Application'
            required:
                - data
        HRISLocation:
            type: "object"
            properties:
                employee_id:
                    type: "string"
                    description: "The employee ID"
                    example: "1687-3"
                street_2:
                    type: "string"
                    description: "The second line of the address"
                    example: "Woolsthorpe by Colsterworth"
                zip_code:
                    type: "string"
                    description: "The ZIP code/Postal code of the location"
                    example: "NG33 5NR"
                created_at:
                    type: "string"
                    description: "The created_at date"
                    example: "2023-06-14T01:00:00Z"
                id:
                    type: "string"
                    description: "The unique ID of the location"
                    example: "123456"
                street_1:
                    type: "string"
                    description: "The first line of the address"
                    example: "Water Lane"
                updated_at:
                    type: "string"
                    description: "The updated_at date"
                    example: "2023-06-14T01:00:00Z"
                state:
                    type: "string"
                    description: "The state where the location is situated"
                    example: "Lincolnshire"
                country:
                    allOf:
                        - $ref: '#/components/schemas/CountryCodeEnum'
                    description: "The country code"
                    example: "GB"
                location_type:
                    allOf:
                        - $ref: '#/components/schemas/LocationTypeEnum'
                    description: "The location type"
                    example: "work"
                city:
                    type: "string"
                    description: "The city where the location is situated"
                    example: "Grantham"
                phone_number:
                    type: "string"
                    description: "The phone number of the location"
                    example: "+44 1476 860 364"
                name:
                    type: "string"
                    description: "The name of the location"
                    example: "Woolsthorpe Manor"
        InterviewsResult:
            type: "object"
            properties:
                raw:
                    type: "string"
                data:
                    $ref: '#/components/schemas/Interview'
            required:
                - data
    securitySchemes:
        basic:
            type: "http"
            scheme: "basic"
tags:
    - name: "Accounts"
    - name: "Connect Sessions"
    - name: "Proxy"
    - name: "Companies"
    - name: "Employees"
    - name: "Employments"
    - name: "Locations"
    - name: "Time Off"
    - name: "Applications"
    - name: "Candidates"
    - name: "Departments"
    - name: "Interview Stages"
    - name: "Interviews"
    - name: "Job Postings"
    - name: "Jobs"
    - name: "Offers"
    - name: "Rejected Reasons"
    - name: "Users"
    - name: "Contacts"
    - name: "Lists"
    - name: "Campaigns"
    - name: "Templates"
